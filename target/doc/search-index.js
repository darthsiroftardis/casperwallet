var searchIndex={};
searchIndex["aho_corasick"] = {"doc":"A library for finding occurrences of many patterns at…","i":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",0,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",1,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",1,null],[12,"requested_max","","The maximum ID required by premultiplication.",1,null],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",2,[[["i"]],["ahocorasick"]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",2,[[],["ahocorasick"]]],[11,"is_match","","Returns true if and only if this automaton matches the…",2,[[["asref"],["self"]],["bool"]]],[11,"earliest_find","","Returns the location of the first detected match in…",2,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find","","Returns the location of the first match according to the…",2,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",2,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",2,[[["str"],["f"],["self"],["string"]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",2,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["read"]],[["streamfinditer"],["read"]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",2,[[["w"],["self"],["r"]],["result"]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",2,[[["w"],["f"],["self"],["r"]],["result"]]],[11,"match_kind","","Returns the match kind used by this automaton.",2,[[["self"]],["matchkind"]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",2,[[["self"]],["usize"]]],[11,"pattern_count","","Return the total number of patterns matched by this…",2,[[["self"]],["usize"]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",2,[[["self"]],["usize"]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",3,[[],["ahocorasickbuilder"]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",3,[[["i"],["self"]],["ahocorasick"]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",3,[[["i"],["self"]],[["ahocorasick"],["error"],["result",["ahocorasick","error"]]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",3,[[["self"]],["ahocorasickbuilder"]]],[11,"match_kind","","Set the desired match semantics.",3,[[["self"],["matchkind"]],["ahocorasickbuilder"]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",3,[[["self"],["usize"]],["ahocorasickbuilder"]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"kind","","Return the kind of this error.",4,[[["self"]],["errorkind"]]],[0,"packed","","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",5,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",5,null],[11,"new","","Create a new default configuration. A default…",6,[[],["config"]]],[11,"builder","","Create a packed builder from this configuration. The…",6,[[["self"]],["builder"]]],[11,"match_kind","","Set the match semantics for this configuration.",6,[[["self"],["matchkind"]],["config"]]],[11,"new","","Create a new builder for constructing a multi-pattern…",7,[[],["builder"]]],[11,"build","","Build a searcher from the patterns added to this builder…",7,[[["self"]],[["searcher"],["option",["searcher"]]]]],[11,"add","","Add the given pattern to this set to match.",7,[[["asref"],["self"]],["builder"]]],[11,"extend","","Add the given iterator of patterns to this set to match.",7,[[["self"],["i"]],["builder"]]],[11,"new","","A convenience function for constructing a searcher from an…",8,[[["i"]],[["searcher"],["option",["searcher"]]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",8,[[["asref"],["self"]],[["option",["match"]],["match"]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",8,[[["asref"],["usize"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",8,[[["self"],["b"]],["finditer"]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",8,[[["self"]],["matchkind"]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",8,[[["self"]],["usize"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",8,[[["self"]],["usize"]]],[8,"StateID","aho_corasick","A trait describing the representation of an automaton's…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation's…",9,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",9,[[],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",9,[[],["usize"]]],[11,"pattern","","Returns the identifier of the pattern that matched.",10,[[["self"]],["usize"]]],[11,"start","","The starting position of the match.",10,[[["self"]],["usize"]]],[11,"end","","The ending position of the match.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",10,[[["self"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","aho_corasick::packed","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"next","aho_corasick","",11,[[["self"]],[["option",["match"]],["match"]]]],[11,"next","","",12,[[["self"]],[["option",["match"]],["match"]]]],[11,"next","","",13,[[["self"]],[["result",["match"]],["option",["result"]]]]],[11,"next","aho_corasick::packed","",14,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","aho_corasick","",2,[[["self"]],["ahocorasick"]]],[11,"clone","","",3,[[["self"]],["ahocorasickbuilder"]]],[11,"clone","","",0,[[["self"]],["matchkind"]]],[11,"clone","","",4,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","aho_corasick::packed","",5,[[["self"]],["matchkind"]]],[11,"clone","","",6,[[["self"]],["config"]]],[11,"clone","","",7,[[["self"]],["builder"]]],[11,"clone","","",8,[[["self"]],["searcher"]]],[11,"clone","aho_corasick","",10,[[["self"]],["match"]]],[11,"default","","",3,[[],["ahocorasickbuilder"]]],[11,"default","","",0,[[],["matchkind"]]],[11,"default","aho_corasick::packed","",5,[[],["matchkind"]]],[11,"default","","",6,[[],["config"]]],[11,"default","","",7,[[],["builder"]]],[11,"eq","aho_corasick","",0,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick::packed","",5,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick","",10,[[["self"],["match"]],["bool"]]],[11,"ne","","",10,[[["self"],["match"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick::packed","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"description","","",4,[[["self"]],["str"]]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[4,"MatchKind"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"FindIter"]]};
searchIndex["async_trait"] = {"doc":"","i":[[23,"async_trait","async_trait","",null,null]],"p":[]};
searchIndex["backtrace"] = {"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",null,null],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When…",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains…",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it's unsynchronized.",null,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it's unsynchronized.",null,[[["frame"],["f"]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it's unsynchronized.",null,[[["f"]]]],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate…",null,[[]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",null,[[["fnmut"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",null,[[["fnmut"]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",null,[[["frame"],["fnmut"]]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[["self"]]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",2,[[["self"]]]],[11,"name","","Returns the name of this function.",3,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",3,[[["self"]],["option"]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",3,[[["self"]],[["option",["bytesorwidestring"]],["bytesorwidestring"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"filename","","Returns the file name where this function was defined.",3,[[["self"]],[["path"],["option",["path"]]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname"]]],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[["self"]]]],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new","","Create a new `BacktraceFmt` which will write output to the…",5,[[["formatter"],["printfmt"],["fnmut"]],["self"]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[["self"]],["result"]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[["self"]],["backtraceframefmt"]]],[11,"finish","","Completes the backtrace output.",5,[[["self"]],["result"]]],[11,"backtrace_frame","","Prints a `BacktraceFrame` with this frame formatter.",6,[[["backtraceframe"],["self"]],["result"]]],[11,"backtrace_symbol","","Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[["backtraceframe"],["self"],["backtracesymbol"]],["result"]]],[11,"symbol","","Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["self"],["frame"],["symbol"]],["result"]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["u32"],["option",["u32"]],["symbolname"],["option",["symbolname"]],["bytesorwidestring"],["option",["bytesorwidestring"]],["self"]],["result"]]],[11,"new","","Captures a backtrace at the callsite of this function,…",7,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",7,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[["self"]]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",7,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",8,[[["self"]]]],[11,"symbol_address","","Same as `Frame::symbol_address`",8,[[["self"]]]],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",8,[[["self"]]]],[11,"name","","Same as `Symbol::name`",9,[[["self"]],[["option",["symbolname"]],["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",9,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",9,[[["self"]],[["path"],["option",["path"]]]]],[11,"lineno","","Same as `Symbol::lineno`",9,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",7,[[["vec",["backtraceframe"]],["backtraceframe"]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["printfmt"]],["bool"]]],[11,"drop","","",6,[[["self"]]]],[11,"into","","",7,[[],[["vec",["backtraceframe"]],["backtraceframe"]]]],[11,"clone","","",2,[[["self"]],["frame"]]],[11,"clone","","",1,[[["self"]],["printfmt"]]],[11,"clone","","",7,[[["self"]],["backtrace"]]],[11,"clone","","",8,[[["self"]],["backtraceframe"]]],[11,"clone","","",9,[[["self"]],["backtracesymbol"]]],[11,"default","","",7,[[],["backtrace"]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"] = {"doc":"","i":[[4,"backtrace_state","backtrace_sys","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[4,"backtrace_state"]]};
searchIndex["base64"] = {"doc":"Configs","i":[[3,"Config","base64","Contains configuration parameters for base64 encoding",null,null],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,null],[13,"InvalidLength","","The length of the input is invalid.",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[13,"Crypt","","The `crypt(3)` character set (uses…",1,null],[4,"LineEnding","","Line ending used in optional line wrapping.",null,null],[13,"LF","","Unix-style \\n",2,null],[13,"CRLF","","Windows-style \\r\\n",2,null],[4,"LineWrap","","Line wrap configuration.",null,null],[13,"NoWrap","","Don't wrap.",3,null],[13,"Wrap","","Wrap lines with the specified length and line ending. The…",3,null],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",null,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",null,[[["t"],["config"],["string"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",null,[[["t"],["config"]],["usize"]]],[5,"decode","","Decode from string reference as octets. Returns a Result…",null,[[["t"]],[["decodeerror"],["vec",["u8"]],["result",["vec","decodeerror"]]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",null,[[["t"],["config"]],[["decodeerror"],["vec",["u8"]],["result",["vec","decodeerror"]]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",null,[[["t"],["config"],["vec"]],[["result",["decodeerror"]],["decodeerror"]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,[[["t"],["config"]],[["decodeerror"],["result",["usize","decodeerror"]],["usize"]]]],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",null,null],[4,"DisplayError","","Errors that can occur initializing a Base64Display.",null,null],[13,"InvalidLineLength","","If wrapping is configured, the line length must be a…",4,null],[11,"with_config","","Create a `Base64Display` with the provided config.",5,[[["config"]],[["displayerror"],["base64display"],["result",["base64display","displayerror"]]]]],[11,"standard","","Convenience method for creating a `Base64Display` with the…",5,[[],["base64display"]]],[11,"url_safe","","Convenience method for creating a `Base64Display` with the…",5,[[],["base64display"]]],[17,"STANDARD","base64","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"MIME","","As per standards for MIME encoded messages",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[17,"CRYPT","","As per `crypt(3)` requirements",null,null],[11,"new","","Create a new `Config`.",6,[[["characterset"],["linewrap"],["bool"]],["config"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","base64::display","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"clone","base64","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",2,[[["self"]],["lineending"]]],[11,"clone","","",3,[[["self"]],["linewrap"]]],[11,"clone","","",6,[[["self"]],["config"]]],[11,"eq","base64::display","",4,[[["displayerror"],["self"]],["bool"]]],[11,"eq","base64","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"fmt","base64::display","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","base64::display","",5,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","base64","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"DecodeError"],[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DisplayError"],[3,"Base64Display"],[3,"Config"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["block_buffer"] = {"doc":"","i":[[3,"BlockBuffer","block_buffer","Buffer for block processing of data",null,null],[11,"input","","Process data in `input` in blocks of size `BlockSize`…",0,[[["self"],["f"]]]],[11,"input_lazy","","Variant that doesn't flush the buffer until there's…",0,[[["self"],["f"]]]],[11,"len64_padding","","Pad message with 0x80, zeros and 64-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"len128_padding_be","","Pad message with 0x80, zeros and 128-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"pad_with","","Pad message with a given padding `P`",0,[[["self"]],[["paderror"],["result",["genericarray","paderror"]],["genericarray"]]]],[11,"size","","Return size of the internall buffer in bytes",0,[[["self"]],["usize"]]],[11,"position","","Return current cursor position",0,[[["self"]],["usize"]]],[11,"remaining","","Return number of remaining bytes in the internall buffer",0,[[["self"]],["usize"]]],[11,"reset","","Reset buffer by setting cursor position to zero",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"clone","","",0,[[["self"]],["blockbuffer"]]],[11,"default","","",0,[[],["blockbuffer"]]]],"p":[[3,"BlockBuffer"]]};
searchIndex["block_padding"] = {"doc":"Padding and unpadding of messages divided into blocks.","i":[[3,"PadError","block_padding","Error for indicating failed padding operation",null,null],[3,"UnpadError","","Error for indicating failed unpadding operation",null,null],[4,"ZeroPadding","","Pad block with zeros.",null,null],[4,"Pkcs7","","Pad block with bytes with value equal to the number of…",null,null],[4,"AnsiX923","","Pad block with zeros except the last byte which will be…",null,null],[4,"Iso7816","","Pad block with byte sequence `\\x80 00...00 00`.",null,null],[4,"NoPadding","","Don't pad the data. Useful for key wrapping. Padding will…",null,null],[8,"Padding","","Trait for padding messages divided into blocks",null,null],[10,"pad_block","","Pads `block` filled with data up to `pos`.",0,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"pad","","Pads message with length `pos` in the provided buffer.",0,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[10,"unpad","","Unpad given `data` by truncating it according to the used…",0,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"pad_block","","",3,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"pad","","",3,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"unpad","","",3,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"pad_block","","",4,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"unpad","","",4,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"pad_block","","",5,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"unpad","","",5,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"pad_block","","",6,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"unpad","","",6,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"pad_block","","",7,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"pad","","",7,[[["usize"]],[["result",["paderror"]],["paderror"]]]],[11,"unpad","","",7,[[],[["unpaderror"],["result",["unpaderror"]]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"clone","","",1,[[["self"]],["paderror"]]],[11,"clone","","",2,[[["self"]],["unpaderror"]]]],"p":[[8,"Padding"],[3,"PadError"],[3,"UnpadError"],[4,"ZeroPadding"],[4,"Pkcs7"],[4,"AnsiX923"],[4,"Iso7816"],[4,"NoPadding"]]};
searchIndex["bson"] = {"doc":"BSON is a binary format in which zero or more key/value…","i":[[3,"TimeStamp","bson","`TimeStamp` representation in struct for serde serialization",null,null],[12,"t","","",0,null],[12,"i","","",0,null],[3,"UtcDateTime","","`DateTime` representation in struct for serde serialization",null,null],[12,"0","","",1,null],[3,"Decoder","","Serde Decoder",null,null],[3,"Encoder","","Serde Encoder",null,null],[4,"Bson","","Possible BSON value types.",null,null],[13,"FloatingPoint","","64-bit binary floating point",2,null],[13,"String","","UTF-8 string",2,null],[13,"Array","","Array",2,null],[13,"Document","","Embedded document",2,null],[13,"Boolean","","Boolean value",2,null],[13,"Null","","Null value",2,null],[13,"RegExp","","Regular expression - The first cstring is the regex…",2,null],[13,"JavaScriptCode","","JavaScript code",2,null],[13,"JavaScriptCodeWithScope","","JavaScript code w/ scope",2,null],[13,"I32","","32-bit integer",2,null],[13,"I64","","64-bit integer",2,null],[13,"TimeStamp","","Timestamp",2,null],[13,"Binary","","Binary data",2,null],[13,"ObjectId","","ObjectId",2,null],[13,"UtcDatetime","","UTC datetime",2,null],[13,"Symbol","","Symbol (Deprecated)",2,null],[4,"DecoderError","","Possible errors that can arise during decoding.",null,null],[13,"IoError","","",3,null],[13,"FromUtf8Error","","",3,null],[13,"UnrecognizedElementType","","",3,null],[13,"InvalidArrayKey","","",3,null],[13,"ExpectedField","","",3,null],[13,"UnknownField","","",3,null],[13,"SyntaxError","","",3,null],[13,"EndOfStream","","",3,null],[13,"InvalidType","","",3,null],[13,"InvalidLength","","",3,null],[13,"DuplicatedField","","",3,null],[13,"UnknownVariant","","",3,null],[13,"InvalidValue","","",3,null],[13,"InvalidTimestamp","","",3,null],[13,"AmbiguousTimestamp","","",3,null],[13,"Unknown","","",3,null],[4,"EncoderError","","Possible errors that can arise during encoding.",null,null],[13,"IoError","","",4,null],[13,"InvalidMapKeyType","","",4,null],[13,"Unknown","","",4,null],[13,"UnsupportedUnsignedType","","",4,null],[13,"UnsignedTypesValueExceedsRange","","",4,null],[5,"decode_document","","Attempt to decode a `Document` from a byte stream.",null,[[["r"]],[["document"],["decoderresult",["document"]]]]],[5,"decode_document_utf8_lossy","","Attempt to decode a `Document` that may contain invalid…",null,[[["r"]],[["document"],["decoderresult",["document"]]]]],[5,"from_bson","","Decode a BSON `Value` into a `T` Deserializable.",null,[[["bson"]],["decoderresult"]]],[5,"encode_document","","Attempt to encode a `Document` into a byte stream.",null,[[["w"],["intoiterator"]],["encoderresult"]]],[5,"to_bson","","Encode a `T` Serializable into a BSON `Value`.",null,[[["t"]],[["encoderresult",["bson"]],["bson"]]]],[0,"macros","","",null,null],[11,"element_type","","Get the `ElementType` of this value.",2,[[["self"]],["elementtype"]]],[11,"to_json","","Clones the bson and returns the representative serde_json…",2,[[["self"]],["value"]]],[11,"into_json","","Consumes the bson and returns the representative…",2,[[],["value"]]],[11,"from_json","","Consumes the serde_json Value and returns the…",2,[[["value"]],["bson"]]],[11,"as_f64","","If `Bson` is `FloatingPoint`, return its value. Returns…",2,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"as_f64_mut","","If `Bson` is `FloatingPoint`, return a mutable reference…",2,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"as_str","","If `Bson` is `String`, return its value. Returns `None`…",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_str_mut","","If `Bson` is `String`, return a mutable reference to its…",2,[[["self"]],[["option",["str"]],["str"]]]],[11,"as_array","","If `Bson` is `Array`, return its value. Returns `None`…",2,[[["self"]],[["array"],["option",["array"]]]]],[11,"as_array_mut","","If `Bson` is `Array`, return a mutable reference to its…",2,[[["self"]],[["array"],["option",["array"]]]]],[11,"as_document","","If `Bson` is `Document`, return its value. Returns `None`…",2,[[["self"]],[["document"],["option",["document"]]]]],[11,"as_document_mut","","If `Bson` is `Document`, return a mutable reference to its…",2,[[["self"]],[["document"],["option",["document"]]]]],[11,"as_bool","","If `Bson` is `Boolean`, return its value. Returns `None`…",2,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"as_bool_mut","","If `Bson` is `Boolean`, return a mutable reference to its…",2,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"as_i32","","If `Bson` is `I32`, return its value. Returns `None`…",2,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"as_i32_mut","","If `Bson` is `I32`, return a mutable reference to its…",2,[[["self"]],[["i32"],["option",["i32"]]]]],[11,"as_i64","","If `Bson` is `I64`, return its value. Returns `None`…",2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_i64_mut","","If `Bson` is `I64`, return a mutable reference to its…",2,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_object_id","","If `Bson` is `Objectid`, return its value. Returns `None`…",2,[[["self"]],[["objectid"],["option",["objectid"]]]]],[11,"as_object_id_mut","","If `Bson` is `Objectid`, return a mutable reference to its…",2,[[["self"]],[["objectid"],["option",["objectid"]]]]],[11,"as_utc_date_time","","If `Bson` is `UtcDateTime`, return its value. Returns…",2,[[["self"]],[["option",["datetime"]],["datetime"]]]],[11,"as_utc_date_time_mut","","If `Bson` is `UtcDateTime`, return a mutable reference to…",2,[[["self"]],[["option",["datetime"]],["datetime"]]]],[11,"as_symbol","","If `Bson` is `Symbol`, return its value. Returns `None`…",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"as_symbol_mut","","If `Bson` is `Symbol`, return a mutable reference to its…",2,[[["self"]],[["option",["str"]],["str"]]]],[11,"as_timestamp","","If `Bson` is `TimeStamp`, return its value. Returns `None`…",2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_timestamp_mut","","If `Bson` is `TimeStamp`, return a mutable reference to…",2,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_null","","If `Bson` is `Null`, return its value. Returns `None`…",2,[[["self"]],["option"]]],[0,"compat","","Backward compatibility",null,null],[0,"u2f","bson::compat","Convert unsigned types to/from `Bson::FloatingPoint`",null,null],[5,"serialize","bson::compat::u2f","Serialize unsigned types to `Bson::FloatingPoint`",null,[[["t"],["s"]],["result"]]],[5,"deserialize","","Deserialize unsigned types to `Bson::FloatingPoint`",null,[[["d"]],["result"]]],[8,"ToF64","","Converts primitive unsigned types to `f64`",null,null],[10,"to_f64","","Converts to `f64` value",5,[[["self"]],["f64"]]],[8,"FromF64","","Converts from `f64` value",null,null],[10,"from_f64","","Converts from `f64` value",6,[[["f64"]],["self"]]],[11,"new","bson","",7,[[["bson"]],["decoder"]]],[11,"new","","Construct a new `Serializer`.",8,[[],["encoder"]]],[0,"oid","","ObjectId",null,null],[3,"ObjectId","bson::oid","A wrapper around raw 12-byte ObjectId representations.",null,null],[4,"Error","","Errors that can occur during OID construction and…",null,null],[13,"ArgumentError","","",9,null],[13,"FromHexError","","",9,null],[13,"IoError","","",9,null],[13,"HostnameError","","",9,null],[6,"Result","","Alias for Result<T, oid::Error>.",null,null],[11,"new","","Generates a new ObjectID, represented in bytes. See the…",10,[[],[["objectid"],["result",["objectid"]]]]],[11,"with_bytes","","Constructs a new ObjectId wrapper around the raw byte…",10,[[],["objectid"]]],[11,"with_string","","Creates an ObjectID using a 12-byte (24-char) hexadecimal…",10,[[["str"]],[["objectid"],["result",["objectid"]]]]],[11,"with_timestamp","","Creates a dummy ObjectId with a specific generation time.…",10,[[["u32"]],["objectid"]]],[11,"bytes","","Returns the raw byte representation of an ObjectId.",10,[[["self"]]]],[11,"timestamp","","Retrieves the timestamp (seconds since epoch) from an…",10,[[["self"]],["u32"]]],[11,"counter","","Retrieves the increment counter from an ObjectId.",10,[[["self"]],["u32"]]],[11,"to_hex","","Convert the objectId to hex representation.",10,[[["self"]],["string"]]],[0,"ordered","bson","A BSON document represented as an associative HashMap with…",null,null],[3,"OrderedDocument","bson::ordered","A BSON document represented as an associative HashMap with…",null,null],[3,"OrderedDocumentIntoIterator","","An iterator over OrderedDocument entries.",null,null],[3,"OrderedDocumentIterator","","An owning iterator over OrderedDocument entries.",null,null],[3,"Keys","","An iterator over an OrderedDocument's keys.",null,null],[3,"Values","","An iterator over an OrderedDocument's values.",null,null],[3,"Entry","","",null,null],[3,"OrderedDocumentVisitor","","",null,null],[4,"ValueAccessError","","Error to indicate that either a value was empty or it…",null,null],[13,"NotPresent","","Cannot find the expected field with the specified key",11,null],[13,"UnexpectedType","","Found a Bson value with the specified key, but not with…",11,null],[6,"ValueAccessResult","","Result of accessing Bson value",null,null],[11,"new","","Creates a new empty OrderedDocument.",12,[[],["ordereddocument"]]],[11,"iter","","Gets an iterator over the entries of the map.",12,[[["self"]],["ordereddocumentiterator"]]],[11,"clear","","Clears the document, removing all values.",12,[[["self"]]]],[11,"get","","Returns a reference to the Bson corresponding to the key.",12,[[["str"],["self"]],[["bson"],["option",["bson"]]]]],[11,"get_mut","","Gets a mutable reference to the Bson corresponding to the…",12,[[["str"],["self"]],[["option",["bson"]],["bson"]]]],[11,"get_f64","","Get a floating point value for this key if it exists and…",12,[[["str"],["self"]],[["valueaccessresult",["f64"]],["f64"]]]],[11,"get_f64_mut","","Get a mutable reference to a floating point value for this…",12,[[["str"],["self"]],[["f64"],["valueaccessresult",["f64"]]]]],[11,"get_str","","Get a string slice this key if it exists and has the…",12,[[["str"],["self"]],[["str"],["valueaccessresult",["str"]]]]],[11,"get_str_mut","","Get a mutable string slice this key if it exists and has…",12,[[["str"],["self"]],[["valueaccessresult",["str"]],["str"]]]],[11,"get_array","","Get a reference to an array for this key if it exists and…",12,[[["str"],["self"]],[["array"],["valueaccessresult",["array"]]]]],[11,"get_array_mut","","Get a mutable reference to an array for this key if it…",12,[[["str"],["self"]],[["valueaccessresult",["array"]],["array"]]]],[11,"get_document","","Get a reference to a document for this key if it exists…",12,[[["str"],["self"]],[["valueaccessresult",["document"]],["document"]]]],[11,"get_document_mut","","Get a mutable reference to a document for this key if it…",12,[[["str"],["self"]],[["document"],["valueaccessresult",["document"]]]]],[11,"get_bool","","Get a bool value for this key if it exists and has the…",12,[[["str"],["self"]],[["bool"],["valueaccessresult",["bool"]]]]],[11,"get_bool_mut","","Get a mutable reference to a bool value for this key if it…",12,[[["str"],["self"]],[["valueaccessresult",["bool"]],["bool"]]]],[11,"is_null","","Returns wether this key has a null value",12,[[["str"],["self"]],["bool"]]],[11,"get_i32","","Get an i32 value for this key if it exists and has the…",12,[[["str"],["self"]],[["valueaccessresult",["i32"]],["i32"]]]],[11,"get_i32_mut","","Get a mutable reference to an i32 value for this key if it…",12,[[["str"],["self"]],[["valueaccessresult",["i32"]],["i32"]]]],[11,"get_i64","","Get an i64 value for this key if it exists and has the…",12,[[["str"],["self"]],[["i64"],["valueaccessresult",["i64"]]]]],[11,"get_i64_mut","","Get a mutable reference to an i64 value for this key if it…",12,[[["str"],["self"]],[["i64"],["valueaccessresult",["i64"]]]]],[11,"get_time_stamp","","Get a time stamp value for this key if it exists and has…",12,[[["str"],["self"]],[["i64"],["valueaccessresult",["i64"]]]]],[11,"get_time_stamp_mut","","Get a mutable reference to a time stamp value for this key…",12,[[["str"],["self"]],[["i64"],["valueaccessresult",["i64"]]]]],[11,"get_binary_generic","","Get a reference to a generic binary value for this key if…",12,[[["str"],["self"]],[["valueaccessresult",["vec"]],["vec"]]]],[11,"get_binary_generic_mut","","Get a mutable reference generic binary value for this key…",12,[[["str"],["self"]],[["valueaccessresult",["vec"]],["vec"]]]],[11,"get_object_id","","Get a reference to an object id value for this key if it…",12,[[["str"],["self"]],[["valueaccessresult",["objectid"]],["objectid"]]]],[11,"get_object_id_mut","","Get a mutable reference to an object id value for this key…",12,[[["str"],["self"]],[["valueaccessresult",["objectid"]],["objectid"]]]],[11,"get_utc_datetime","","Get a reference to a UTC datetime value for this key if it…",12,[[["str"],["self"]],[["valueaccessresult",["datetime"]],["datetime"]]]],[11,"get_utc_datetime_mut","","Get a mutable reference to a UTC datetime value for this…",12,[[["str"],["self"]],[["valueaccessresult",["datetime"]],["datetime"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",12,[[["str"],["self"]],["bool"]]],[11,"keys","","Gets a collection of all keys in the document.",12,[[["self"]],["keys"]]],[11,"values","","Gets a collection of all values in the document.",12,[[["self"]],["values"]]],[11,"len","","Returns the number of elements in the document.",12,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the document contains no elements",12,[[["self"]],["bool"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",12,[[["into",["string"]],["string"],["into",["bson"]],["bson"],["self"]],[["option",["bson"]],["bson"]]]],[11,"insert_bson","","Sets the value of the entry with the OccupiedEntry's key,…",12,[[["self"],["string"],["bson"]],[["option",["bson"]],["bson"]]]],[11,"remove","","Takes the value of the entry out of the document, and…",12,[[["str"],["self"]],[["option",["bson"]],["bson"]]]],[11,"entry","","",12,[[["self"],["string"]],["entry"]]],[11,"key","","",13,[[["self"]],["str"]]],[11,"or_insert","","",13,[[["bson"]],["bson"]]],[11,"or_insert_with","","",13,[[["fnonce"]],["bson"]]],[11,"new","","",14,[[],["ordereddocumentvisitor"]]],[0,"spec","bson","Constants derived from the BSON Specification Version 1.1.",null,null],[4,"ElementType","bson::spec","All available BSON element types.",null,null],[13,"FloatingPoint","","64-bit binary floating point",15,null],[13,"Utf8String","","UTF-8 string",15,null],[13,"EmbeddedDocument","","Embedded document",15,null],[13,"Array","","Array",15,null],[13,"Binary","","Binary data",15,null],[13,"Undefined","","Deprecated. Undefined (value)",15,null],[13,"ObjectId","","ObjectId",15,null],[13,"Boolean","","Boolean value",15,null],[13,"UtcDatetime","","UTC datetime",15,null],[13,"NullValue","","Null value",15,null],[13,"RegularExpression","","Regular expression - The first cstring is the regex…",15,null],[13,"DbPointer","","Deprecated.",15,null],[13,"JavaScriptCode","","JavaScript code",15,null],[13,"Symbol","","Deprecated.",15,null],[13,"JavaScriptCodeWithScope","","JavaScript code w/ scope",15,null],[13,"Integer32Bit","","32-bit integer",15,null],[13,"TimeStamp","","Timestamp",15,null],[13,"Integer64Bit","","64-bit integer",15,null],[13,"MaxKey","","",15,null],[13,"MinKey","","",15,null],[4,"BinarySubtype","","The available binary subtypes, plus a user-defined slot.",null,null],[13,"Generic","","",16,null],[13,"Function","","",16,null],[13,"BinaryOld","","",16,null],[13,"UuidOld","","",16,null],[13,"Uuid","","",16,null],[13,"Md5","","",16,null],[13,"UserDefined","","",16,null],[17,"ELEMENT_TYPE_FLOATING_POINT","","",null,null],[17,"ELEMENT_TYPE_UTF8_STRING","","",null,null],[17,"ELEMENT_TYPE_EMBEDDED_DOCUMENT","","",null,null],[17,"ELEMENT_TYPE_ARRAY","","",null,null],[17,"ELEMENT_TYPE_BINARY","","",null,null],[17,"ELEMENT_TYPE_UNDEFINED","","",null,null],[17,"ELEMENT_TYPE_OBJECT_ID","","",null,null],[17,"ELEMENT_TYPE_BOOLEAN","","",null,null],[17,"ELEMENT_TYPE_UTC_DATETIME","","",null,null],[17,"ELEMENT_TYPE_NULL_VALUE","","",null,null],[17,"ELEMENT_TYPE_REGULAR_EXPRESSION","","",null,null],[17,"ELEMENT_TYPE_DBPOINTER","","",null,null],[17,"ELEMENT_TYPE_JAVASCRIPT_CODE","","",null,null],[17,"ELEMENT_TYPE_SYMBOL","","",null,null],[17,"ELEMENT_TYPE_JAVASCRIPT_CODE_WITH_SCOPE","","",null,null],[17,"ELEMENT_TYPE_32BIT_INTEGER","","",null,null],[17,"ELEMENT_TYPE_TIMESTAMP","","",null,null],[17,"ELEMENT_TYPE_64BIT_INTEGER","","",null,null],[17,"ELEMENT_TYPE_128BIT_DECIMAL","","",null,null],[17,"ELEMENT_TYPE_MINKEY","","",null,null],[17,"ELEMENT_TYPE_MAXKEY","","",null,null],[17,"BINARY_SUBTYPE_GENERIC","","",null,null],[17,"BINARY_SUBTYPE_FUNCTION","","",null,null],[17,"BINARY_SUBTYPE_BINARY_OLD","","",null,null],[17,"BINARY_SUBTYPE_UUID_OLD","","",null,null],[17,"BINARY_SUBTYPE_UUID","","",null,null],[17,"BINARY_SUBTYPE_MD5","","",null,null],[11,"from","","Attempt to convert from a `u8`.",15,[[["u8"]],[["elementtype"],["option",["elementtype"]]]]],[6,"Array","bson","Alias for `Vec<Bson>`.",null,null],[6,"Document","","Alias for `OrderedDocument`.",null,null],[6,"DecoderResult","","Alias for `Result<T, DecoderError>`.",null,null],[6,"EncoderResult","","Alias for `Result<T, EncoderError>`.",null,null],[14,"bson","","Construct a bson::BSON value from a literal.",null,null],[14,"doc","","Construct a bson::Document value.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","bson::oid","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"equivalent","","",10,[[["k"],["self"]],["bool"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","bson::ordered","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","bson::spec","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"equivalent","","",15,[[["k"],["self"]],["bool"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","bson","",2,[[["f32"]],["bson"]]],[11,"from","","",2,[[["f64"]],["bson"]]],[11,"from","","",2,[[["str"]],["bson"]]],[11,"from","","",2,[[["string"]],["bson"]]],[11,"from","","",2,[[["document"]],["bson"]]],[11,"from","","",2,[[["bool"]],["bson"]]],[11,"from","","",2,[[],["bson"]]],[11,"from","","",2,[[],["bson"]]],[11,"from","","",2,[[],["bson"]]],[11,"from","","",2,[[["t"]],["bson"]]],[11,"from","","",2,[[["vec"]],["bson"]]],[11,"from","","",2,[[],["bson"]]],[11,"from","","",2,[[["i32"]],["bson"]]],[11,"from","","",2,[[["i64"]],["bson"]]],[11,"from","","",2,[[["u32"]],["bson"]]],[11,"from","","",2,[[["u64"]],["bson"]]],[11,"from","","",2,[[],["bson"]]],[11,"from","","",2,[[["objectid"]],["bson"]]],[11,"from","","",2,[[["utc"],["datetime",["utc"]]],["bson"]]],[11,"from","","",2,[[["value"]],["bson"]]],[11,"from","","",1,[[["utc"],["datetime",["utc"]]],["self"]]],[11,"from","","",3,[[["error"]],["decodererror"]]],[11,"from","","",3,[[["fromutf8error"]],["decodererror"]]],[11,"from","","",4,[[["error"]],["encodererror"]]],[11,"from","bson::oid","",9,[[["fromhexerror"]],["error"]]],[11,"from","","",9,[[["error"]],["error"]]],[11,"from","bson::ordered","",12,[[["linkedhashmap",["string","bson"]],["string"],["bson"]],["ordereddocument"]]],[11,"from","bson::spec","",16,[[["u8"]],["binarysubtype"]]],[11,"extend","bson::ordered","",12,[[["intoiterator"],["self"]]]],[11,"into_iter","","",12,[[]]],[11,"next","","",19,[[["self"]],[["option",["string"]],["string"]]]],[11,"next","","",20,[[["self"]],[["option",["bson"]],["bson"]]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"clone","bson","",2,[[["self"]],["bson"]]],[11,"clone","","",0,[[["self"]],["timestamp"]]],[11,"clone","","",1,[[["self"]],["utcdatetime"]]],[11,"clone","bson::oid","",10,[[["self"]],["objectid"]]],[11,"clone","bson::ordered","",12,[[["self"]],["ordereddocument"]]],[11,"clone","bson::spec","",15,[[["self"]],["elementtype"]]],[11,"clone","","",16,[[["self"]],["binarysubtype"]]],[11,"default","bson","",2,[[],["self"]]],[11,"default","bson::ordered","",12,[[],["self"]]],[11,"cmp","bson","",1,[[["self"],["utcdatetime"]],["ordering"]]],[11,"cmp","bson::oid","",10,[[["self"],["objectid"]],["ordering"]]],[11,"eq","bson","",2,[[["self"],["bson"]],["bool"]]],[11,"ne","","",2,[[["self"],["bson"]],["bool"]]],[11,"eq","","",0,[[["timestamp"],["self"]],["bool"]]],[11,"ne","","",0,[[["timestamp"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"ne","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"eq","bson::oid","",10,[[["self"],["objectid"]],["bool"]]],[11,"ne","","",10,[[["self"],["objectid"]],["bool"]]],[11,"eq","bson::ordered","",11,[[["self"],["valueaccesserror"]],["bool"]]],[11,"eq","","",12,[[["self"],["ordereddocument"]],["bool"]]],[11,"ne","","",12,[[["self"],["ordereddocument"]],["bool"]]],[11,"eq","bson::spec","",15,[[["self"],["elementtype"]],["bool"]]],[11,"eq","","",16,[[["binarysubtype"],["self"]],["bool"]]],[11,"ne","","",16,[[["binarysubtype"],["self"]],["bool"]]],[11,"partial_cmp","bson","",1,[[["self"],["utcdatetime"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"le","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"gt","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"ge","","",1,[[["self"],["utcdatetime"]],["bool"]]],[11,"partial_cmp","bson::oid","",10,[[["self"],["objectid"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["self"],["objectid"]],["bool"]]],[11,"le","","",10,[[["self"],["objectid"]],["bool"]]],[11,"gt","","",10,[[["self"],["objectid"]],["bool"]]],[11,"ge","","",10,[[["self"],["objectid"]],["bool"]]],[11,"deref","bson","",1,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]],["datetime"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson::oid","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson::ordered","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson::spec","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson::oid","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","bson::ordered","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","bson","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","bson::oid","",10,[[["self"],["__h"]]]],[11,"hash","bson::spec","",16,[[["self"],["__h"]]]],[11,"from_iter","bson","Examples",2,[[["intoiterator"]],["self"]]],[11,"from_iter","bson::ordered","",12,[[["intoiterator"]],["self"]]],[11,"description","bson","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","bson::oid","",9,[[["self"]],["str"]]],[11,"cause","","",9,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","bson::ordered","",11,[[["self"]],["str"]]],[11,"deserialize_any","bson","",7,[[["v"]],["decoderresult"]]],[11,"deserialize_option","","",7,[[["v"]],["decoderresult"]]],[11,"deserialize_enum","","",7,[[["str"],["v"]],["decoderresult"]]],[11,"deserialize_newtype_struct","","",7,[[["str"],["v"]],["decoderresult"]]],[11,"deserialize_bool","","",7,[[["v"]],["result"]]],[11,"deserialize_u8","","",7,[[["v"]],["result"]]],[11,"deserialize_u16","","",7,[[["v"]],["result"]]],[11,"deserialize_u32","","",7,[[["v"]],["result"]]],[11,"deserialize_u64","","",7,[[["v"]],["result"]]],[11,"deserialize_i8","","",7,[[["v"]],["result"]]],[11,"deserialize_i16","","",7,[[["v"]],["result"]]],[11,"deserialize_i32","","",7,[[["v"]],["result"]]],[11,"deserialize_i64","","",7,[[["v"]],["result"]]],[11,"deserialize_f32","","",7,[[["v"]],["result"]]],[11,"deserialize_f64","","",7,[[["v"]],["result"]]],[11,"deserialize_char","","",7,[[["v"]],["result"]]],[11,"deserialize_str","","",7,[[["v"]],["result"]]],[11,"deserialize_string","","",7,[[["v"]],["result"]]],[11,"deserialize_unit","","",7,[[["v"]],["result"]]],[11,"deserialize_seq","","",7,[[["v"]],["result"]]],[11,"deserialize_bytes","","",7,[[["v"]],["result"]]],[11,"deserialize_map","","",7,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",7,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",7,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",7,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple","","",7,[[["usize"],["v"]],["result"]]],[11,"deserialize_identifier","","",7,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",7,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",7,[[["v"]],["result"]]],[11,"expecting","bson::ordered","",14,[[["formatter"],["self"]],["result"]]],[11,"visit_unit","","",14,[[],[["ordereddocument"],["result",["ordereddocument"]]]]],[11,"visit_map","","",14,[[["v"]],[["result",["ordereddocument"]],["ordereddocument"]]]],[11,"custom","bson","",4,[[["display"]],["encodererror"]]],[11,"serialize","bson::oid","",10,[[["s"],["self"]],["result"]]],[11,"serialize","bson","",21,[[["s"],["self"]],["result"]]],[11,"serialize","","",2,[[["s"],["self"]],["result"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"serialize_bool","","",8,[[["bool"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_i8","","",8,[[["i8"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_u8","","",8,[[["u8"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_i16","","",8,[[["i16"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_u16","","",8,[[["u16"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_i32","","",8,[[["i32"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_u32","","",8,[[["u32"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_i64","","",8,[[["i64"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_u64","","",8,[[["u64"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_f32","","",8,[[["f32"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_f64","","",8,[[["f64"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_char","","",8,[[["char"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_str","","",8,[[["str"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_bytes","","",8,[[],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_none","","",8,[[],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_some","","",8,[[["v"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_unit","","",8,[[],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_unit_struct","","",8,[[["str"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_unit_variant","","",8,[[["str"],["u32"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_newtype_struct","","",8,[[["str"],["t"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_newtype_variant","","",8,[[["str"],["u32"],["t"]],[["encoderresult",["bson"]],["bson"]]]],[11,"serialize_seq","","",8,[[["option",["usize"]],["usize"]],["encoderresult"]]],[11,"serialize_tuple","","",8,[[["usize"]],["encoderresult"]]],[11,"serialize_tuple_struct","","",8,[[["str"],["usize"]],["encoderresult"]]],[11,"serialize_tuple_variant","","",8,[[["str"],["u32"],["usize"]],["encoderresult"]]],[11,"serialize_map","","",8,[[["option",["usize"]],["usize"]],["encoderresult"]]],[11,"serialize_struct","","",8,[[["str"],["usize"]],["encoderresult"]]],[11,"serialize_struct_variant","","",8,[[["str"],["u32"],["usize"]],["encoderresult"]]],[11,"deserialize","bson::oid","",10,[[["d"]],["result"]]],[11,"deserialize","bson::ordered","Deserialize this value given this `Deserializer`.",12,[[["d"]],["result"]]],[11,"deserialize","bson","",2,[[["d"]],[["result",["bson"]],["bson"]]]],[11,"deserialize","","",0,[[["d"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"custom","","",3,[[["display"]],["decodererror"]]],[11,"invalid_type","","",3,[[["unexpected"],["expected"]],["decodererror"]]],[11,"invalid_value","","",3,[[["unexpected"],["expected"]],["decodererror"]]],[11,"invalid_length","","",3,[[["usize"],["expected"]],["decodererror"]]],[11,"unknown_variant","","",3,[[["str"]],["decodererror"]]],[11,"unknown_field","","",3,[[["str"]],["decodererror"]]],[11,"missing_field","","",3,[[["str"]],["decodererror"]]],[11,"duplicate_field","","",3,[[["str"]],["decodererror"]]]],"p":[[3,"TimeStamp"],[3,"UtcDateTime"],[4,"Bson"],[4,"DecoderError"],[4,"EncoderError"],[8,"ToF64"],[8,"FromF64"],[3,"Decoder"],[3,"Encoder"],[4,"Error"],[3,"ObjectId"],[4,"ValueAccessError"],[3,"OrderedDocument"],[3,"Entry"],[3,"OrderedDocumentVisitor"],[4,"ElementType"],[4,"BinarySubtype"],[3,"OrderedDocumentIntoIterator"],[3,"OrderedDocumentIterator"],[3,"Keys"],[3,"Values"],[6,"Document"]]};
searchIndex["bufstream"] = {"doc":"A crate for separately buffered streams.","i":[[3,"BufStream","bufstream","Wraps a Stream and buffers input and output to and from it.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error…",null,null],[11,"error","","Returns the error which caused the call to `into_inner()`…",0,[[["self"]],["error"]]],[11,"into_inner","","Returns the buffered writer instance which generated the…",0,[[],["w"]]],[11,"with_capacities","","Creates a new buffered stream with explicitly listed…",1,[[["s"],["usize"]],["bufstream"]]],[11,"new","","Creates a new buffered stream with the default…",1,[[["s"]],["bufstream"]]],[11,"get_ref","","Gets a reference to the underlying stream.",1,[[["self"]],["s"]]],[11,"get_mut","","Gets a mutable reference to the underlying stream.",1,[[["self"]],["s"]]],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",1,[[],[["result",["intoinnererror"]],["intoinnererror",["bufstream"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"fill_buf","","",1,[[["self"]],["result"]]],[11,"consume","","",1,[[["self"],["usize"]]]],[11,"read_until","","",1,[[["self"],["vec"],["u8"]],[["result",["usize"]],["usize"]]]],[11,"read_line","","",1,[[["self"],["string"]],[["result",["usize"]],["usize"]]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]]],"p":[[3,"IntoInnerError"],[3,"BufStream"]]};
searchIndex["byte_tools"] = {"doc":"","i":[[5,"copy","byte_tools","Copy bytes from `src` to `dst`",null,[[]]],[5,"zero","","Zero all bytes in `dst`",null,[[]]],[5,"set","","Sets all bytes in `dst` equal to `value`",null,[[["u8"]]]]],"p":[]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["result",["u128"]],["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["result",["u128"]],["u128"]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u64"]],["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"] = {"doc":"Provides abstractions for working with bytes.","i":[[3,"BytesMut","bytes","A unique reference to a contiguous slice of memory.",null,null],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[0,"buf","","Utilities for working with buffers.",null,null],[3,"IoSliceMut","bytes::buf","A buffer type used for `readv`.",null,null],[3,"IntoIter","","Iterator over the bytes contained by the buffer.",null,null],[0,"ext","","Extra utilities for `Buf` and `BufMut` types.",null,null],[3,"Limit","bytes::buf::ext","A `BufMut` adapter which limits the amount of bytes that…",null,null],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",null,null],[3,"Chain","","A `Chain` sequences two buffers.",null,null],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",null,null],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",null,null],[11,"new","","Creates a new `Chain` sequencing the provided values.",0,[[["u"],["t"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",0,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",0,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",0,[[]]],[11,"into_inner","","Consumes this `Limit`, returning the underlying value.",1,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",1,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be written",1,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be written.",1,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",2,[[],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",3,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",3,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",3,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",4,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",4,[[],["b"]]],[8,"BufExt","","Extra methods for implementations of `Buf`.",null,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",5,[[["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",5,[[["buf"]],[["chain"],["buf"]]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",5,[[],["reader"]]],[8,"BufMutExt","","Extra methods for implementations of `BufMut`.",null,null],[11,"limit","","Creates an adaptor which can write at most `limit` bytes…",6,[[["usize"]],["limit"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",6,[[],["writer"]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with…",6,[[["bufmut"]],[["bufmut"],["chain"]]]],[11,"new","bytes::buf","Creates an iterator over the bytes contained by the buffer.",7,[[["t"]],["intoiter"]]],[11,"into_inner","","Consumes this `IntoIter`, returning the underlying value.",7,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"with_capacity","bytes","Creates a new `BytesMut` with the specified capacity.",10,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",10,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",10,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",10,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",10,[[],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"split","","Removes the bytes from the current view, returning them in…",10,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",10,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",10,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",10,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",10,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this `BytesMut`.",10,[[["self"]]]],[11,"unsplit","","Absorbs a `BytesMut` that was previously split off.",10,[[["self"],["bytesmut"]]]],[11,"new","","Creates a new empty `Bytes`.",11,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",11,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",11,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",11,[[],["self"]]],[11,"slice","","Returns a slice of self for the provided range.",11,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[8,"Buf","","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",8,[[["self"]]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[10,"advance","bytes","Advance the internal cursor of the Buf",8,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",9,[[["self"]]]],[11,"bytes_vectored_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"from","bytes","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","bytes::buf","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","bytes::buf::ext","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"remaining","","",0,[[["self"]],["usize"]]],[11,"bytes","","",0,[[["self"]]]],[11,"advance","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored","","",0,[[["self"]],["usize"]]],[11,"remaining","","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,[[["self"]]]],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"remaining","bytes","",10,[[["self"]],["usize"]]],[11,"bytes","","",10,[[["self"]]]],[11,"advance","","",10,[[["self"],["usize"]]]],[11,"to_bytes","","",10,[[["self"]],["bytes"]]],[11,"remaining","","",11,[[["self"]],["usize"]]],[11,"bytes","","",11,[[["self"]]]],[11,"advance","","",11,[[["self"],["usize"]]]],[11,"to_bytes","","",11,[[["self"]],["bytes"]]],[11,"remaining_mut","bytes::buf::ext","",0,[[["self"]],["usize"]]],[11,"bytes_mut","","",0,[[["self"]]]],[11,"advance_mut","","",0,[[["self"],["usize"]]]],[11,"bytes_vectored_mut","","",0,[[["self"]],["usize"]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,[[["self"]]]],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"remaining_mut","bytes","",10,[[["self"]],["usize"]]],[11,"advance_mut","","",10,[[["self"],["usize"]]]],[11,"bytes_mut","","",10,[[["self"]]]],[11,"put","","",10,[[["self"],["buf"]]]],[11,"put_slice","","",10,[[["self"]]]],[11,"deref","","",10,[[["self"]]]],[11,"deref","","",11,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","bytes::buf","",12,[[],["ioslicemut"]]],[11,"from","","",12,[[],["ioslicemut"]]],[11,"from","bytes","",10,[[],["bytesmut"]]],[11,"from","","",10,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytesmut"]],["bytes"]]],[11,"from","","",11,[[],["bytes"]]],[11,"from","","",11,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",11,[[["string"]],["bytes"]]],[11,"fmt","bytes::buf","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes::buf::ext","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytes::buf","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytes","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"eq","","",10,[[["str"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["string"],["self"]],["bool"]]],[11,"eq","","",10,[[["t"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["string"],["self"]],["bool"]]],[11,"eq","","",11,[[["t"],["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["bytesmut"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytes"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["bytesmut"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",10,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytes"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["string"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"next","bytes::buf","",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"extend","bytes","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",10,[[["intoiterator"]],["self"]]],[11,"from_iter","","",11,[[["intoiterator"]],["self"]]],[11,"into_iter","bytes::buf::ext","",0,[[]]],[11,"into_iter","bytes","",10,[[]]],[11,"into_iter","","",11,[[]]],[11,"write_str","","",10,[[["str"],["self"]],["result"]]],[11,"write_fmt","","",10,[[["self"],["arguments"]],["result"]]],[11,"as_ref","","",10,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["bytesmut"]]],[11,"clone","","",11,[[["self"]],["bytes"]]],[11,"default","","",10,[[],["bytesmut"]]],[11,"default","","",11,[[],["bytes"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow","","",11,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]],[11,"fill_buf","bytes::buf::ext","",2,[[["self"]],["result"]]],[11,"consume","","",2,[[["self"],["usize"]]]],[11,"read","","",2,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usize"]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["self"]]]],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",8,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",8,[[["self"]],["i8"]]],[11,"get_u16","","Gets an unsigned 16 bit integer from `self` in big-endian…",8,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",8,[[["self"]],["u16"]]],[11,"get_i16","","Gets a signed 16 bit integer from `self` in big-endian…",8,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",8,[[["self"]],["i16"]]],[11,"get_u32","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",8,[[["self"]],["u32"]]],[11,"get_i32","","Gets a signed 32 bit integer from `self` in big-endian…",8,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",8,[[["self"]],["i32"]]],[11,"get_u64","","Gets an unsigned 64 bit integer from `self` in big-endian…",8,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",8,[[["self"]],["u64"]]],[11,"get_i64","","Gets a signed 64 bit integer from `self` in big-endian…",8,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",8,[[["self"]],["i64"]]],[11,"get_u128","","Gets an unsigned 128 bit integer from `self` in big-endian…",8,[[["self"]],["u128"]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from `self` in…",8,[[["self"]],["u128"]]],[11,"get_i128","","Gets a signed 128 bit integer from `self` in big-endian…",8,[[["self"]],["i128"]]],[11,"get_i128_le","","Gets a signed 128 bit integer from `self` in little-endian…",8,[[["self"]],["i128"]]],[11,"get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64"]]],[11,"get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64"]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",8,[[["self"]],["f32"]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",8,[[["self"]],["f64"]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["bool"]]],[11,"bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usize"]]],[11,"put","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"],["buf"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["self"]]]],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",9,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",9,[[["self"],["i8"]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to `self` in big-endian…",9,[[["u16"],["self"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",9,[[["u16"],["self"]]]],[11,"put_i16","","Writes a signed 16 bit integer to `self` in big-endian…",9,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",9,[[["self"],["i16"]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to `self` in big-endian…",9,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",9,[[["self"],["u32"]]]],[11,"put_i32","","Writes a signed 32 bit integer to `self` in big-endian…",9,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",9,[[["self"],["i32"]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to `self` in the…",9,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",9,[[["self"],["u64"]]]],[11,"put_i64","","Writes a signed 64 bit integer to `self` in the big-endian…",9,[[["i64"],["self"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",9,[[["i64"],["self"]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to `self` in the…",9,[[["self"],["u128"]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to `self` in…",9,[[["self"],["u128"]]]],[11,"put_i128","","Writes a signed 128 bit integer to `self` in the…",9,[[["self"],["i128"]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to `self` in little-endian…",9,[[["self"],["i128"]]]],[11,"put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usize"]]]],[11,"put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usize"]]]],[11,"put_f32","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",9,[[["f32"],["self"]]]],[11,"put_f64","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",9,[[["self"],["f64"]]]]],"p":[[3,"Chain"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"BufExt"],[8,"BufMutExt"],[3,"IntoIter"],[8,"Buf"],[8,"BufMut"],[3,"BytesMut"],[3,"Bytes"],[3,"IoSliceMut"]]};
searchIndex["casperwallet"] = {"doc":"CaspwerWallet","i":[[0,"key_manager","casperwallet","Key Manager Module to manage the keys",null,null],[0,"key_generator","casperwallet::key_manager","Key Generator Module for cryptographic key generation",null,null],[5,"generate_keypair","casperwallet::key_manager::key_generator","Generates the Keypair struct using the ED25519 Curve #…",null,[[],["keypair"]]],[5,"recover_keypair","","The Keypair is stored as two seperate public and private…",null,[[],["keypair"]]],[0,"account_manager","casperwallet","Account Manager Library for managing accounts",null,null],[0,"account_user","casperwallet::account_manager","User The module to provide the cryptographic and…",null,null],[3,"User","casperwallet::account_manager::account_user","",null,null],[12,"name","","",0,null],[12,"account_keypair","","",0,null],[12,"transaction_keypairs","","",0,null],[11,"new","","Create a new user with a given name. This struct provides…",0,[[["string"]],["user"]]],[11,"create_new_transaction_key","","Add a new transaction key with a given key. You must…",0,[[["self"],["string"]]]],[11,"list_transaction_keys","","List current transaction keys # Examples `let user: User =…",0,[[["self"]]]],[0,"session_manager","casperwallet","Library for managing a current user session # Session…",null,null],[4,"Commands","casperwallet::session_manager","All variants of the commands that are currently supported",null,null],[13,"Create","","",1,null],[13,"Load","","",1,null],[13,"Delete","","",1,null],[13,"Quit","","",1,null],[13,"Invalid","","",1,null],[4,"UserCommands","","All variants of commands that can be supported within the…",null,null],[13,"Sign","","",2,null],[13,"AddTransactionKey","","",2,null],[5,"grab_name_from_user","","A simple function to grab input from the user to name…",null,[[],["string"]]],[5,"start_session","","Connect to the database and return a collection object to…",null,[[],["collection"]]],[5,"start_user_session","","Start a user session for a specific user, the commands…",null,[[["user"],["collection"]]]],[5,"execute_command","","Function to execute a specific operation The execution…",null,[[["commands"],["collection"]]]],[0,"storage","casperwallet","Storage Functions for all CRUD operations related to…",null,null],[3,"UserEntry","casperwallet::storage","UserEntry The struct that serializes a typical User struct…",null,null],[12,"name","","",3,null],[12,"account_secretkey_bytes","","",3,null],[12,"transaction_secretkey_bytes","","",3,null],[5,"store_user","","Store a user by serializing into a JSON string that is…",null,[[["collection"],["user"]]]],[5,"load_user","","Load a user from a database entry based on a filter…",null,[[["string"],["collection"]],["user"]]],[5,"update_user","","Update the user if new transaction keys are added. #…",null,[[["collection"],["user"]]]],[5,"delete_user","","Delete a user based on the user's name",null,[[["string"],["collection"]]]],[11,"new","","Create a new JSON serialize struct from a given user…",3,[[["user"]],["userentry"]]],[11,"recover_user","","Recover a User struct from a given UserEntry struct #…",3,[[["userentry"]],["user"]]],[11,"from","casperwallet::account_manager::account_user","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","casperwallet::session_manager","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","casperwallet::storage","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]]],"p":[[3,"User"],[4,"Commands"],[4,"UserCommands"],[3,"UserEntry"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["chrono"] = {"doc":"Chrono: Date and Time for Rust","i":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"Date","","ISO 8601 calendar date with time zone.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",null,null],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",null,null],[13,"Secs","","Format whole seconds only, with no decimal point nor…",0,null],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",0,null],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",0,null],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",0,null],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",1,null],[13,"Tue","","Tuesday.",1,null],[13,"Wed","","Wednesday.",1,null],[13,"Thu","","Thursday.",1,null],[13,"Fri","","Friday.",1,null],[13,"Sat","","Saturday.",1,null],[13,"Sun","","Sunday.",1,null],[0,"prelude","","A convenience module appropriate for glob imports (`use…",null,null],[0,"offset","","The time zone, which calculates offsets from the local…",null,null],[3,"FixedOffset","chrono::offset","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[3,"Local","","The local timescale. This is implemented via the standard…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[4,"LocalResult","","The conversion result from the local time to the…",null,null],[13,"None","","Given local time representation is invalid. This can occur…",2,null],[13,"Single","","Given local time representation has a single unique result.",2,null],[13,"Ambiguous","","Given local time representation has multiple results and…",2,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",3,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",3,[[["i32"]],[["option",["fixedoffset"]],["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",3,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",3,[[["self"]],["i32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",4,[[],[["date",["local"]],["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,[[],[["datetime",["local"]],["local"]]]],[11,"today","","Returns a `Date` which corresponds to the current date.",5,[[],[["date",["utc"]],["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",5,[[],[["datetime",["utc"]],["utc"]]]],[8,"Offset","","The offset from the local time to UTC.",null,null],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",7,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",7,[[["u32"],["i32"],["self"]],[["localresult",["date"]],["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",7,[[["u32"],["self"],["i32"]],[["localresult",["date"]],["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",7,[[["u32"],["i32"],["weekday"],["self"]],[["localresult",["date"]],["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["i64"],["u32"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",7,[[["i64"],["self"]],["datetime"]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",7,[[["str"],["self"]],[["datetime"],["parseresult",["datetime"]]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",7,[[],["self"]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],["naivedate"]],[["localresult",["date"]],["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],["naivedatetime"]],[["localresult",["datetime"]],["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",7,[[["self"],["naivedate"]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",7,[[["self"],["naivedatetime"]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],["naivedatetime"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique,…",2,[[],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",2,[[],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",2,[[],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["fnmut"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",2,[[["naivetime"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["u32"]],[["localresult",["datetime"]],["datetime"]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",2,[[],["t"]]],[0,"naive","chrono","Date and time types unconcerned with timezones.",null,null],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",null,null],[3,"IsoWeek","","ISO 8601 week.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["weekday"],["u32"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day's number in the…",8,[[["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],["naivedate"]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",8,[[["u32"],["i32"],["weekday"],["u8"]],[["option",["naivedate"]],["naivedate"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",8,[[["str"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",8,[[["oldduration"]],[["option",["naivedate"]],["naivedate"]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",8,[[["oldduration"]],[["option",["naivedate"]],["naivedate"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",8,[[["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",8,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",8,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"year","","Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week","","Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0","","Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"]],[["option",["naivetime"]],["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",10,[[["self"],["oldduration"]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",10,[[["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",10,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",10,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",11,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"date","","Retrieves a date component.",11,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["oldduration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["oldduration"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",11,[[["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",11,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",11,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,[[["naivedate"]],["date"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",12,[[["self"],["naivetime"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"succ","","Makes a new `Date` for the next date.",12,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",12,[[["self"]],[["option",["date"]],["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",12,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",12,[[["self"]],[["option",["date"]],["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",12,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",12,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",12,[[["tz2"],["self"]],[["timezone"],["date"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",12,[[["oldduration"]],[["option",["date"]],["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",12,[[["oldduration"]],[["option",["date"]],["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",12,[[["timezone"],["date"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",12,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",12,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",12,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",12,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",13,[[["naivedatetime"]],["datetime"]]],[11,"date","","Retrieves a date component.",13,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",13,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",13,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",13,[[["tz2"],["self"]],[["datetime"],["timezone"]]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",13,[[["oldduration"]],[["datetime"],["option",["datetime"]]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",13,[[["datetime"],["timezone"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",13,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",13,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["bool"],["self"],["secondsformat"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",13,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",13,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[0,"format","","Formatting (and parsing) utilities for date and time.",null,null],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of…",null,null],[12,"year","","Year.",14,null],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",14,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,null],[12,"isoyear","","Year in the ISO week date.",14,null],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",14,null],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",14,null],[12,"month","","Month (1--12).",14,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",14,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",14,null],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,null],[12,"weekday","","Day of the week.",14,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,null],[12,"minute","","Minute number (0--59).",14,null],[12,"second","","Second number (0--60, accounting for leap seconds).",14,null],[12,"nanosecond","","The number of nanoseconds since the whole second…",14,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",14,null],[12,"offset","","Offset from the local time to UTC, in seconds.",14,null],[3,"InternalNumeric","","An opaque type representing numeric item types for…",null,null],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",null,null],[3,"ParseError","","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",15,null],[13,"Zero","","Zero (`0`) padding.",15,null],[13,"Space","","Space padding.",15,null],[4,"Numeric","","Numeric item types. They have associated formatting width…",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",16,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",16,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",16,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",16,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,null],[13,"Month","","Month (FW=PW=2).",16,null],[13,"Day","","Day of the month (FW=PW=2).",16,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",16,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",16,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",16,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,null],[13,"Ordinal","","Day of the year (FW=PW=3).",16,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",16,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",16,null],[13,"Internal","","Internal uses only.",16,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",17,null],[13,"LongMonthName","","Full month names.",17,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,null],[13,"LongWeekdayName","","Full day of the week names.",17,null],[13,"LowerAmPm","","AM/PM.",17,null],[13,"UpperAmPm","","AM/PM.",17,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",17,null],[13,"Nanosecond3","","Same as `Nanosecond` but the accuracy is fixed to 3.",17,null],[13,"Nanosecond6","","Same as `Nanosecond` but the accuracy is fixed to 6.",17,null],[13,"Nanosecond9","","Same as `Nanosecond` but the accuracy is fixed to 9.",17,null],[13,"TimezoneName","","Timezone name.",17,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,null],[13,"TimezoneOffset","","Same as `TimezoneOffsetColon` but prints no colon. Parsing…",17,null],[13,"TimezoneOffsetZ","","Same as `TimezoneOffsetColonZ` but prints no colon.…",17,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",17,null],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,null],[13,"Internal","","Internal uses only.",17,null],[4,"Item","","A single formatting item. This is used for both formatting…",null,null],[13,"Literal","","A literally printed and parsed text.",18,null],[13,"OwnedLiteral","","Same as `Literal` but with the string owned by the item.",18,null],[13,"Space","","Whitespace. Prints literally but reads zero or more…",18,null],[13,"OwnedSpace","","Same as `Space` but with the string owned by the item.",18,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",18,null],[13,"Fixed","","Fixed-format item.",18,null],[13,"Error","","Issues a formatting error. Used to signal an invalid…",18,null],[5,"parse","","Tries to parse given string into `parsed` with given…",null,[[["str"],["i"],["parsed"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting…",null,[[["naivetime"],["formatter"],["option",["naivedate"]],["naivedate"],["option"],["option",["naivetime"]],["i"]],["result"]]],[11,"new","","Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,[[["weekday"],["self"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",14,[[["i64"],["self"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,[[["self"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,[[["self"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],[["fixedoffset"],["parseresult",["fixedoffset"]]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",14,[[["tz"],["self"]],[["parseresult",["datetime"]],["datetime"]]]],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting…",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same as `Result<T, ParseError>`.",null,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivetime"]],["naivetime"],["option",["naivedate"]],["naivedate"],["i"]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",20,[[["off"],["option",["naivetime"]],["naivetime"],["option",["naivedate"]],["naivedate"],["i"]],["delayedformat"]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",null,null],[17,"MAX_DATE","","The maximum possible `Date`.",null,null],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",null,null],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",21,[[["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",21,[[["u16"]],["self"]]],[8,"Datelike","","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the calendar date.",22,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",22,[[["self"]]]],[10,"month","","Returns the month number starting from 1.",22,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",22,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",22,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",22,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",22,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",22,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",22,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",22,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",22,[[["u32"],["self"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",22,[[["u32"],["self"]],["option"]]],[11,"num_days_from_ce","","Counts the days in the proleptic Gregorian calendar, with…",22,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",23,[[["self"]]]],[10,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",23,[[["u32"],["self"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",23,[[["u32"],["self"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",23,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","chrono::offset","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","chrono::naive","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","chrono::format","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","chrono::format::strftime","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"eq","chrono","",24,[[["duration"],["self"]],["bool"]]],[11,"ne","","",24,[[["duration"],["self"]],["bool"]]],[11,"cmp","","",24,[[["duration"],["self"]],["ordering"]]],[11,"sub","","",24,[[["duration"]],["duration"]]],[11,"clone","","",24,[[["self"]],["duration"]]],[11,"mul","","",24,[[["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"neg","","",24,[[],["duration"]]],[11,"partial_cmp","","",24,[[["duration"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["duration"],["self"]],["bool"]]],[11,"le","","",24,[[["duration"],["self"]],["bool"]]],[11,"gt","","",24,[[["duration"],["self"]],["bool"]]],[11,"ge","","",24,[[["duration"],["self"]],["bool"]]],[11,"div","","",24,[[["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"add","","",24,[[["duration"]],["duration"]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"fix","chrono::offset","",3,[[["self"]],["fixedoffset"]]],[11,"fix","","",5,[[["self"]],["fixedoffset"]]],[11,"from_offset","","",3,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",3,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",3,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",3,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",3,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","","",4,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",4,[[["self"],["naivedate"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_local_datetime","","",4,[[["self"],["naivedatetime"]],[["localresult",["fixedoffset"]],["fixedoffset"]]]],[11,"offset_from_utc_date","","",4,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",4,[[["self"],["naivedate"]],[["localresult",["date"]],["date",["local"]]]]],[11,"from_local_datetime","","",4,[[["self"],["naivedatetime"]],[["datetime",["local"]],["localresult",["datetime"]]]]],[11,"from_utc_date","","",4,[[["self"],["naivedate"]],[["date",["local"]],["local"]]]],[11,"from_utc_datetime","","",4,[[["self"],["naivedatetime"]],[["datetime",["local"]],["local"]]]],[11,"from_offset","","",5,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",5,[[["self"],["naivedate"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_local_datetime","","",5,[[["self"],["naivedatetime"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_utc_date","","",5,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["utc"]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",8,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",8,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",8,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",8,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",8,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",8,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",8,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",8,[[["self"]],["weekday"]]],[11,"iso_week","","",8,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["u32"],["self"]],[["option",["naivedate"]],["naivedate"]]]],[11,"year","","Returns the year number in the calendar date.",11,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",11,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",11,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",11,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",11,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",11,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",11,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",11,[[["self"]],["weekday"]]],[11,"iso_week","","",11,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"year","chrono","",12,[[["self"]],["i32"]]],[11,"month","","",12,[[["self"]],["u32"]]],[11,"month0","","",12,[[["self"]],["u32"]]],[11,"day","","",12,[[["self"]],["u32"]]],[11,"day0","","",12,[[["self"]],["u32"]]],[11,"ordinal","","",12,[[["self"]],["u32"]]],[11,"ordinal0","","",12,[[["self"]],["u32"]]],[11,"weekday","","",12,[[["self"]],["weekday"]]],[11,"iso_week","","",12,[[["self"]],["isoweek"]]],[11,"with_year","","",12,[[["self"],["i32"]],[["option",["date"]],["date"]]]],[11,"with_month","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_month0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_day0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"with_ordinal0","","",12,[[["u32"],["self"]],[["option",["date"]],["date"]]]],[11,"year","","",13,[[["self"]],["i32"]]],[11,"month","","",13,[[["self"]],["u32"]]],[11,"month0","","",13,[[["self"]],["u32"]]],[11,"day","","",13,[[["self"]],["u32"]]],[11,"day0","","",13,[[["self"]],["u32"]]],[11,"ordinal","","",13,[[["self"]],["u32"]]],[11,"ordinal0","","",13,[[["self"]],["u32"]]],[11,"weekday","","",13,[[["self"]],["weekday"]]],[11,"iso_week","","",13,[[["self"]],["isoweek"]]],[11,"with_year","","",13,[[["self"],["i32"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_month0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_day0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_ordinal0","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",10,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",10,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["u32"],["self"]],[["option",["naivetime"]],["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",10,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",11,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",11,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["u32"],["self"]],[["naivedatetime"],["option",["naivedatetime"]]]]],[11,"hour","chrono","",13,[[["self"]],["u32"]]],[11,"minute","","",13,[[["self"]],["u32"]]],[11,"second","","",13,[[["self"]],["u32"]]],[11,"nanosecond","","",13,[[["self"]],["u32"]]],[11,"with_hour","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_minute","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_second","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"with_nanosecond","","",13,[[["u32"],["self"]],[["datetime"],["option",["datetime"]]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",13,[[["datetime",["utc"]],["utc"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",13,[[["datetime",["fixedoffset"]],["fixedoffset"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",13,[[["datetime",["local"]],["local"]],["self"]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","",13,[[["systemtime"]],[["datetime",["local"]],["local"]]]],[11,"next","chrono::format::strftime","",19,[[["self"]],[["option",["item"]],["item"]]]],[11,"clone","chrono::offset","",2,[[["self"]],["localresult"]]],[11,"clone","","",3,[[["self"]],["fixedoffset"]]],[11,"clone","","",4,[[["self"]],["local"]]],[11,"clone","","",5,[[["self"]],["utc"]]],[11,"clone","chrono::naive","",8,[[["self"]],["naivedate"]]],[11,"clone","","",9,[[["self"]],["isoweek"]]],[11,"clone","","",10,[[["self"]],["naivetime"]]],[11,"clone","","",11,[[["self"]],["naivedatetime"]]],[11,"clone","chrono","",12,[[["self"]],["date"]]],[11,"clone","","",0,[[["self"]],["secondsformat"]]],[11,"clone","","",13,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",15,[[["self"]],["pad"]]],[11,"clone","","",16,[[["self"]],["numeric"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["fixed"]]],[11,"clone","","",27,[[["self"]],["internalfixed"]]],[11,"clone","","",18,[[["self"]],["item"]]],[11,"clone","","",28,[[["self"]],["parseerror"]]],[11,"clone","","",14,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",19,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",1,[[["self"]],["weekday"]]],[11,"clone","","",25,[[["self"]],["parseweekdayerror"]]],[11,"default","chrono::format","",14,[[],["parsed"]]],[11,"cmp","chrono::naive","",8,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","","",9,[[["isoweek"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["naivetime"],["self"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","chrono","",12,[[["date"],["self"]],["ordering"]]],[11,"cmp","","",13,[[["datetime"],["self"]],["ordering"]]],[11,"eq","chrono::offset","",2,[[["localresult"],["self"]],["bool"]]],[11,"ne","","",2,[[["localresult"],["self"]],["bool"]]],[11,"eq","","",3,[[["fixedoffset"],["self"]],["bool"]]],[11,"ne","","",3,[[["fixedoffset"],["self"]],["bool"]]],[11,"eq","","",5,[[["utc"],["self"]],["bool"]]],[11,"eq","chrono::naive","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"eq","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"ne","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"eq","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ne","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","chrono","",12,[[["date"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["secondsformat"]],["bool"]]],[11,"eq","","",13,[[["datetime"],["self"]],["bool"]]],[11,"eq","chrono::format","",15,[[["pad"],["self"]],["bool"]]],[11,"eq","","",16,[[["numeric"],["self"]],["bool"]]],[11,"ne","","",16,[[["numeric"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq","","",17,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",17,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"ne","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"eq","","",18,[[["item"],["self"]],["bool"]]],[11,"ne","","",18,[[["item"],["self"]],["bool"]]],[11,"eq","","",28,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",28,[[["parseerror"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",14,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono","",1,[[["weekday"],["self"]],["bool"]]],[11,"eq","","",25,[[["parseweekdayerror"],["self"]],["bool"]]],[11,"ne","","",25,[[["parseweekdayerror"],["self"]],["bool"]]],[11,"partial_cmp","chrono::naive","",8,[[["self"],["naivedate"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","","",9,[[["isoweek"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"le","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"gt","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"ge","","",9,[[["isoweek"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["naivetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"le","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"gt","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"ge","","",10,[[["naivetime"],["self"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["naivedatetime"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","chrono","",12,[[["date"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",13,[[["datetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","chrono::offset","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format::strftime","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::offset","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono::format","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","chrono","",1,[[["formatter"],["self"]],["result"]]],[11,"sub","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"sub","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"sub","","",8,[[["naivedate"]],["oldduration"]]],[11,"sub","","",10,[[["oldduration"]],["naivetime"]]],[11,"sub","","",10,[[["naivetime"]],["oldduration"]]],[11,"sub","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"sub","","",11,[[["naivedatetime"]],["oldduration"]]],[11,"sub","chrono","",12,[[["oldduration"]],["date"]]],[11,"sub","","",12,[[["date"]],["oldduration"]]],[11,"sub","","",13,[[["oldduration"]],["datetime"]]],[11,"sub","","",13,[[["datetime"]],["oldduration"]]],[11,"add","chrono::naive","",10,[[["fixedoffset"]],["naivetime"]]],[11,"add","","",11,[[["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono","",13,[[["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive","",8,[[["oldduration"]],["naivedate"]]],[11,"add","","",10,[[["oldduration"]],["naivetime"]]],[11,"add","","",11,[[["oldduration"]],["naivedatetime"]]],[11,"add","chrono","",12,[[["oldduration"]],["date"]]],[11,"add","","",13,[[["oldduration"]],["datetime"]]],[11,"add_assign","chrono::naive","",8,[[["self"],["oldduration"]]]],[11,"add_assign","","",10,[[["self"],["oldduration"]]]],[11,"add_assign","","",11,[[["self"],["oldduration"]]]],[11,"sub_assign","","",8,[[["self"],["oldduration"]]]],[11,"sub_assign","","",10,[[["self"],["oldduration"]]]],[11,"sub_assign","","",11,[[["self"],["oldduration"]]]],[11,"hash","chrono::offset","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","chrono::naive","",8,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","chrono","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_str","chrono::naive","",8,[[["str"]],[["naivedate"],["parseresult",["naivedate"]]]]],[11,"from_str","","",10,[[["str"]],[["parseresult",["naivetime"]],["naivetime"]]]],[11,"from_str","","",11,[[["str"]],[["naivedatetime"],["parseresult",["naivedatetime"]]]]],[11,"from_str","chrono","",13,[[["str"]],[["datetime",["utc"]],["parseresult",["datetime"]]]]],[11,"from_str","","",13,[[["str"]],[["datetime",["local"]],["parseresult",["datetime"]]]]],[11,"from_str","","",13,[[["str"]],[["parseresult",["datetime"]],["datetime",["fixedoffset"]]]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"description","chrono::format","",28,[[["self"]],["str"]]],[11,"from_i64","chrono","",1,[[["i64"]],[["option",["weekday"]],["weekday"]]]],[11,"from_u64","","",1,[[["u64"]],[["option",["weekday"]],["weekday"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",24,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",24,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",24,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",24,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",24,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",24,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",24,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",24,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",24,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",24,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",24,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",24,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",24,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",24,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",24,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",24,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",24,[[["duration"],["self"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",24,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",24,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",24,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",24,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",24,[[["duration"]],[["outofrangeerror"],["duration"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",24,[[["self"]],[["outofrangeerror"],["result",["duration","outofrangeerror"]],["duration"]]]]],"p":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"FixedOffset"],[3,"Local"],[3,"Utc"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["clear_on_drop"] = {"doc":"Helpers for clearing sensitive data on the stack and heap.","i":[[3,"ClearOnDrop","clear_on_drop","Zeroizes a storage location when dropped.",null,null],[5,"clear_stack_on_return","","Calls a closure and overwrites its stack on return.",null,[[["usize"],["f"]],["r"]]],[5,"clear_stack_on_return_fnonce","","Calls a closure and overwrites its stack on return.",null,[[["usize"],["f"]],["r"]]],[5,"clear_stack","","Overwrites a few pages of stack.",null,[[["usize"]]]],[0,"clear","","Traits to completely overwrite a value, without leaking…",null,null],[8,"Clear","clear_on_drop::clear","An operation to completely overwrite a value, without…",null,null],[10,"clear","","Completely overwrites this value.",0,[[["self"]]]],[8,"InitializableFromZeroed","","A type that can be initialized to a valid value, after…",null,null],[10,"initialize","","Called to initialize a place to a valid value, after it is…",1,[[]]],[8,"ZeroSafe","","Unsafe trait to indicate which types are safe to set to…",null,null],[11,"new","clear_on_drop","Creates a new `ClearOnDrop` which clears `place` on drop.",2,[[["p"]],["self"]]],[11,"into_place","","Consumes the `ClearOnDrop`, returning the `place` after…",2,[[],["p"]]],[11,"into_uncleared_place","","Consumes the `ClearOnDrop`, returning the `place` without…",2,[[],["p"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"deref","","",2,[[["self"]]]],[11,"deref_mut","","",2,[[["self"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"ne","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"cmp","","",2,[[["self"]],["ordering"]]],[11,"partial_cmp","","",2,[[["clearondrop"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"le","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"gt","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"ge","","",2,[[["clearondrop"],["self"]],["bool"]]],[11,"drop","","",2,[[["self"]]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone_from","","",2,[[["self"],["self"]]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[8,"Clear"],[8,"InitializableFromZeroed"],[3,"ClearOnDrop"]]};
searchIndex["crypto_mac"] = {"doc":"This crate provides trait for Message Authentication Code…","i":[[3,"InvalidKeyLength","crypto_mac","Error type for signaling invalid key length for MAC…",null,null],[3,"MacError","","Error type for signaling failed MAC verification",null,null],[3,"MacResult","","`MacResult` is a thin wrapper around bytes array which…",null,null],[8,"Mac","","The `Mac` trait defines methods for a Message…",null,null],[16,"OutputSize","","",0,null],[16,"KeySize","","",0,null],[10,"new","","Create new MAC instance from key with fixed size.",0,[[["genericarray"]],["self"]]],[11,"new_varkey","","Create new MAC instance from key with variable size.",0,[[],[["invalidkeylength"],["result",["invalidkeylength"]]]]],[10,"input","","Process input data.",0,[[["self"]]]],[10,"reset","","Reset `Mac` instance.",0,[[["self"]]]],[10,"result","","Obtain the result of a `Mac` computation as a `MacResult`…",0,[[],["macresult"]]],[11,"result_reset","","Obtain the result of a `Mac` computation as a `MacResult`…",0,[[["self"]],["macresult"]]],[11,"verify","","Check if code is correct for the processed input.",0,[[],[["macerror"],["result",["macerror"]]]]],[11,"new","","Create a new MacResult.",1,[[["genericarray",["u8"]],["u8"]],["macresult"]]],[11,"code","","Get the code value as a bytes array.",1,[[],[["genericarray",["u8"]],["u8"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["macerror"]],["bool"]]],[11,"eq","","",2,[[["self"],["invalidkeylength"]],["bool"]]],[11,"eq","","",1,[[["macresult"],["self"]],["bool"]]],[11,"clone","","",3,[[["self"]],["macerror"]]],[11,"clone","","",2,[[["self"]],["invalidkeylength"]]],[11,"clone","","",1,[[["self"]],["macresult"]]],[11,"default","","",3,[[],["macerror"]]],[11,"default","","",2,[[],["invalidkeylength"]]],[11,"ct_eq","","",1,[[["self"]],["choice"]]]],"p":[[8,"Mac"],[3,"MacResult"],[3,"InvalidKeyLength"],[3,"MacError"]]};
searchIndex["curve25519_dalek"] = {"doc":"Note that docs will only build on nightly Rust until RFC…","i":[[0,"scalar","curve25519_dalek","Arithmetic on scalars (integers mod the group order).",null,null],[3,"Scalar","curve25519_dalek::scalar","The `Scalar` struct holds an integer \\(s < 2^{255} \\)…",null,null],[11,"from_bytes_mod_order","","Construct a `Scalar` by reducing a 256-bit little-endian…",0,[[],["scalar"]]],[11,"from_bytes_mod_order_wide","","Construct a `Scalar` by reducing a 512-bit little-endian…",0,[[],["scalar"]]],[11,"from_canonical_bytes","","Attempt to construct a `Scalar` from a canonical byte…",0,[[],[["option",["scalar"]],["scalar"]]]],[11,"from_bits","","Construct a `Scalar` from the low 255 bits of a 256-bit…",0,[[],["scalar"]]],[11,"random","","Return a `Scalar` chosen uniformly at random using a…",0,[[["r"]],["self"]]],[11,"hash_from_bytes","","Hash a slice of bytes into a scalar.",0,[[],["scalar"]]],[11,"from_hash","","Construct a scalar from an existing `Digest` instance.",0,[[["d"]],["scalar"]]],[11,"to_bytes","","Convert this `Scalar` to its underlying sequence of bytes.",0,[[["self"]]]],[11,"as_bytes","","View the little-endian byte encoding of the integer…",0,[[["self"]]]],[11,"zero","","Construct the scalar \\( 0 \\).",0,[[],["self"]]],[11,"one","","Construct the scalar \\( 1 \\).",0,[[],["self"]]],[11,"invert","","Given a nonzero `Scalar`, compute its multiplicative…",0,[[["self"]],["scalar"]]],[11,"batch_invert","","Given a slice of nonzero (possibly secret) `Scalar`s,…",0,[[],["scalar"]]],[11,"reduce","","Reduce this `Scalar` modulo \\(\\ell\\).",0,[[["self"]],["scalar"]]],[11,"is_canonical","","Check whether this `Scalar` is the canonical…",0,[[["self"]],["bool"]]],[0,"montgomery","curve25519_dalek","Scalar multiplication on the Montgomery form of Curve25519.",null,null],[3,"MontgomeryPoint","curve25519_dalek::montgomery","Holds the \\(u\\)-coordinate of a point on the Montgomery…",null,null],[12,"0","","",1,null],[11,"as_bytes","","View this `MontgomeryPoint` as an array of bytes.",1,[[["self"]]]],[11,"to_bytes","","Convert this `MontgomeryPoint` to an array of bytes.",1,[[["self"]]]],[11,"to_edwards","","Attempt to convert to an `EdwardsPoint`, using the…",1,[[["self"],["u8"]],[["option",["edwardspoint"]],["edwardspoint"]]]],[0,"edwards","curve25519_dalek","Group operations for Curve25519, in Edwards form.",null,null],[3,"CompressedEdwardsY","curve25519_dalek::edwards","In \"Edwards y\" / \"Ed25519\" format, the curve point…",null,null],[12,"0","","",2,null],[3,"EdwardsPoint","","An `EdwardsPoint` represents a point on the Edwards form…",null,null],[3,"VartimeEdwardsPrecomputation","","Precomputation for variable-time multiscalar…",null,null],[3,"EdwardsBasepointTable","","A precomputed table of multiples of a basepoint, for…",null,null],[11,"as_bytes","","View this `CompressedEdwardsY` as an array of bytes.",2,[[["self"]]]],[11,"to_bytes","","Copy this `CompressedEdwardsY` to an array of bytes.",2,[[["self"]]]],[11,"decompress","","Attempt to decompress to an `EdwardsPoint`.",2,[[["self"]],[["option",["edwardspoint"]],["edwardspoint"]]]],[11,"from_slice","","Construct a `CompressedEdwardsY` from a slice of bytes.",2,[[],["compressededwardsy"]]],[11,"to_montgomery","","Convert this `EdwardsPoint` on the Edwards model to the…",3,[[["self"]],["montgomerypoint"]]],[11,"compress","","Compress this point to `CompressedEdwardsY` format.",3,[[["self"]],["compressededwardsy"]]],[11,"vartime_double_scalar_mul_basepoint","","Compute \\(aA + bB\\) in variable time, where \\(B\\) is the…",3,[[["edwardspoint"],["scalar"]],["edwardspoint"]]],[11,"create","","Create a table of precomputed multiples of `basepoint`.",4,[[["edwardspoint"]],["edwardsbasepointtable"]]],[11,"basepoint","","Get the basepoint for this table as an `EdwardsPoint`.",4,[[["self"]],["edwardspoint"]]],[11,"mul_by_cofactor","","Multiply by the cofactor: return \\([8]P\\).",3,[[["self"]],["edwardspoint"]]],[11,"is_small_order","","Determine if this point is of small order.",3,[[["self"]],["bool"]]],[11,"is_torsion_free","","Determine if this point is “torsion-free”, i.e., is…",3,[[["self"]],["bool"]]],[0,"ristretto","curve25519_dalek","An implementation of [Ristretto][ristretto_main], which…",null,null],[3,"CompressedRistretto","curve25519_dalek::ristretto","A Ristretto point, in compressed wire format.",null,null],[12,"0","","",5,null],[3,"RistrettoPoint","","A `RistrettoPoint` represents a point in the Ristretto…",null,null],[3,"VartimeRistrettoPrecomputation","","Precomputation for variable-time multiscalar…",null,null],[3,"RistrettoBasepointTable","","A precomputed table of multiples of a basepoint, used to…",null,null],[11,"to_bytes","","Copy the bytes of this `CompressedRistretto`.",5,[[["self"]]]],[11,"as_bytes","","View this `CompressedRistretto` as an array of bytes.",5,[[["self"]]]],[11,"from_slice","","Construct a `CompressedRistretto` from a slice of bytes.",5,[[],["compressedristretto"]]],[11,"decompress","","Attempt to decompress to an `RistrettoPoint`.",5,[[["self"]],[["option",["ristrettopoint"]],["ristrettopoint"]]]],[11,"compress","","Compress this point using the Ristretto encoding.",6,[[["self"]],["compressedristretto"]]],[11,"double_and_compress_batch","","Double-and-compress a batch of points. The Ristretto…",6,[[["i"]],[["vec",["compressedristretto"]],["compressedristretto"]]]],[11,"random","","Return a `RistrettoPoint` chosen uniformly at random using…",6,[[["r"]],["self"]]],[11,"hash_from_bytes","","Hash a slice of bytes into a `RistrettoPoint`.",6,[[],["ristrettopoint"]]],[11,"from_hash","","Construct a `RistrettoPoint` from an existing `Digest`…",6,[[["d"]],["ristrettopoint"]]],[11,"from_uniform_bytes","","Construct a `RistrettoPoint` from 64 bytes of data.",6,[[],["ristrettopoint"]]],[11,"vartime_double_scalar_mul_basepoint","","Compute \\(aA + bB\\) in variable time, where \\(B\\) is the…",6,[[["ristrettopoint"],["scalar"]],["ristrettopoint"]]],[11,"create","","Create a precomputed table of multiples of the given…",7,[[["ristrettopoint"]],["ristrettobasepointtable"]]],[11,"basepoint","","Get the basepoint for this table as a `RistrettoPoint`.",7,[[["self"]],["ristrettopoint"]]],[0,"constants","curve25519_dalek","Various constants, such as the Ristretto and Ed25519…",null,null],[17,"ED25519_BASEPOINT_POINT","curve25519_dalek::constants","The Ed25519 basepoint, as an `EdwardsPoint`.",null,null],[17,"EIGHT_TORSION","","The 8-torsion subgroup \\(\\mathcal E [8]\\).",null,null],[17,"ED25519_BASEPOINT_TABLE","","Table containing precomputed multiples of the Ed25519…",null,null],[17,"ED25519_BASEPOINT_COMPRESSED","","The Ed25519 basepoint, in `CompressedEdwardsY` format.",null,null],[17,"X25519_BASEPOINT","","The X25519 basepoint, in `MontgomeryPoint` format.",null,null],[17,"RISTRETTO_BASEPOINT_COMPRESSED","","The Ristretto basepoint, in `CompressedRistretto` format.",null,null],[17,"RISTRETTO_BASEPOINT_POINT","","The Ristretto basepoint, as a `RistrettoPoint`.",null,null],[17,"BASEPOINT_ORDER","","`BASEPOINT_ORDER` is the order of the Ristretto group and…",null,null],[17,"RISTRETTO_BASEPOINT_TABLE","","The Ristretto basepoint, as a `RistrettoBasepointTable`…",null,null],[0,"traits","curve25519_dalek","Module for common traits.",null,null],[8,"Identity","curve25519_dalek::traits","Trait for getting the identity element of a point type.",null,null],[10,"identity","","Returns the identity element of the curve. Can be used as…",8,[[],["self"]]],[8,"IsIdentity","","Trait for testing if a curve point is equivalent to the…",null,null],[10,"is_identity","","Return true if this element is the identity element of the…",9,[[["self"]],["bool"]]],[8,"MultiscalarMul","","A trait for constant-time multiscalar multiplication…",null,null],[16,"Point","","The type of point being multiplied, e.g., `RistrettoPoint`.",10,null],[10,"multiscalar_mul","","Given an iterator of (possibly secret) scalars and an…",10,[[["j"],["i"]]]],[8,"VartimeMultiscalarMul","","A trait for variable-time multiscalar multiplication…",null,null],[16,"Point","","The type of point being multiplied, e.g., `RistrettoPoint`.",11,null],[10,"optional_multiscalar_mul","","Given an iterator of public scalars and an iterator of…",11,[[["j"],["i"]],["option"]]],[11,"vartime_multiscalar_mul","","Given an iterator of public scalars and an iterator of…",11,[[["j"],["i"]]]],[8,"VartimePrecomputedMultiscalarMul","","A trait for variable-time multiscalar multiplication with…",null,null],[16,"Point","","The type of point to be multiplied, e.g., `RistrettoPoint`.",12,null],[10,"new","","Given the static points \\( B_i \\), perform precomputation…",12,[[["i"]],["self"]]],[11,"vartime_multiscalar_mul","","Given `static_scalars`, an iterator of public scalars…",12,[[["i"],["self"]]]],[11,"vartime_mixed_multiscalar_mul","","Given `static_scalars`, an iterator of public scalars…",12,[[["j"],["i"],["self"],["k"]]]],[10,"optional_mixed_multiscalar_mul","","Given `static_scalars`, an iterator of public scalars…",12,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"from","curve25519_dalek::scalar","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"zeroize","","",0,[[["self"]]]],[11,"conditional_negate","","",0,[[["self"],["choice"]]]],[11,"from","curve25519_dalek::montgomery","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"zeroize","","",1,[[["self"]]]],[11,"is_identity","curve25519_dalek::edwards","",2,[[["self"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"is_identity","","",3,[[["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"conditional_negate","","",3,[[["self"],["choice"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"is_identity","curve25519_dalek::ristretto","",5,[[["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"is_identity","","",6,[[["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"conditional_negate","","",6,[[["self"],["choice"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"identity","curve25519_dalek::edwards","",2,[[],["compressededwardsy"]]],[11,"identity","","",3,[[],["edwardspoint"]]],[11,"identity","curve25519_dalek::ristretto","",5,[[],["compressedristretto"]]],[11,"identity","","",6,[[],["ristrettopoint"]]],[11,"multiscalar_mul","curve25519_dalek::edwards","",3,[[["j"],["i"]],["edwardspoint"]]],[11,"multiscalar_mul","curve25519_dalek::ristretto","",6,[[["j"],["i"]],["ristrettopoint"]]],[11,"optional_multiscalar_mul","curve25519_dalek::edwards","",3,[[["j"],["i"]],[["option",["edwardspoint"]],["edwardspoint"]]]],[11,"optional_multiscalar_mul","curve25519_dalek::ristretto","",6,[[["j"],["i"]],[["option",["ristrettopoint"]],["ristrettopoint"]]]],[11,"new","curve25519_dalek::edwards","",13,[[["i"]],["self"]]],[11,"optional_mixed_multiscalar_mul","","",13,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"new","curve25519_dalek::ristretto","",14,[[["i"]],["self"]]],[11,"optional_mixed_multiscalar_mul","","",14,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"from","curve25519_dalek::scalar","",0,[[["u8"]],["scalar"]]],[11,"from","","",0,[[["u16"]],["scalar"]]],[11,"from","","",0,[[["u32"]],["scalar"]]],[11,"from","","Construct a scalar from the given `u64`.",0,[[["u64"]],["scalar"]]],[11,"from","","",0,[[["u128"]],["scalar"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","curve25519_dalek::montgomery","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","curve25519_dalek::edwards","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","curve25519_dalek::ristretto","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"sub","curve25519_dalek::scalar","",0,[[["scalar"]],["scalar"]]],[11,"sub","","",0,[[["scalar"]],["scalar"]]],[11,"sub","curve25519_dalek::edwards","",3,[[["edwardspoint"]],["edwardspoint"]]],[11,"sub","","",3,[[["edwardspoint"]],["edwardspoint"]]],[11,"sub","curve25519_dalek::ristretto","",6,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"sub","","",6,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"eq","curve25519_dalek::scalar","",0,[[["self"]],["bool"]]],[11,"eq","curve25519_dalek::montgomery","",1,[[["self"],["montgomerypoint"]],["bool"]]],[11,"eq","curve25519_dalek::edwards","",2,[[["self"],["compressededwardsy"]],["bool"]]],[11,"ne","","",2,[[["self"],["compressededwardsy"]],["bool"]]],[11,"eq","","",3,[[["edwardspoint"],["self"]],["bool"]]],[11,"eq","curve25519_dalek::ristretto","",5,[[["compressedristretto"],["self"]],["bool"]]],[11,"ne","","",5,[[["compressedristretto"],["self"]],["bool"]]],[11,"eq","","",6,[[["ristrettopoint"],["self"]],["bool"]]],[11,"add","curve25519_dalek::scalar","",0,[[["scalar"]],["scalar"]]],[11,"add","","",0,[[["scalar"]],["scalar"]]],[11,"add","curve25519_dalek::edwards","",3,[[["edwardspoint"]],["edwardspoint"]]],[11,"add","","",3,[[["edwardspoint"]],["edwardspoint"]]],[11,"add","curve25519_dalek::ristretto","",6,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"add","","",6,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"mul","curve25519_dalek::scalar","",0,[[["scalar"]],["scalar"]]],[11,"mul","","",0,[[["scalar"]],["scalar"]]],[11,"mul","curve25519_dalek::montgomery","",1,[[["scalar"]],["montgomerypoint"]]],[11,"mul","","",1,[[["scalar"]],["montgomerypoint"]]],[11,"mul","curve25519_dalek::scalar","",0,[[["montgomerypoint"]],["montgomerypoint"]]],[11,"mul","","",0,[[["montgomerypoint"]],["montgomerypoint"]]],[11,"mul","curve25519_dalek::edwards","",3,[[["scalar"]],["edwardspoint"]]],[11,"mul","","",3,[[["scalar"]],["edwardspoint"]]],[11,"mul","curve25519_dalek::scalar","",0,[[["edwardspoint"]],["edwardspoint"]]],[11,"mul","","",0,[[["edwardspoint"]],["edwardspoint"]]],[11,"mul","curve25519_dalek::ristretto","",6,[[["scalar"]],["ristrettopoint"]]],[11,"mul","","",6,[[["scalar"]],["ristrettopoint"]]],[11,"mul","curve25519_dalek::scalar","",0,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"mul","","",0,[[["ristrettopoint"]],["ristrettopoint"]]],[11,"neg","","",0,[[],["scalar"]]],[11,"neg","curve25519_dalek::edwards","",3,[[],["edwardspoint"]]],[11,"neg","curve25519_dalek::ristretto","",6,[[],["ristrettopoint"]]],[11,"add_assign","curve25519_dalek::scalar","",0,[[["self"],["scalar"]]]],[11,"add_assign","","",0,[[["self"],["scalar"]]]],[11,"add_assign","curve25519_dalek::edwards","",3,[[["self"],["edwardspoint"]]]],[11,"add_assign","","",3,[[["self"],["edwardspoint"]]]],[11,"add_assign","curve25519_dalek::ristretto","",6,[[["self"],["ristrettopoint"]]]],[11,"add_assign","","",6,[[["self"],["ristrettopoint"]]]],[11,"sub_assign","curve25519_dalek::scalar","",0,[[["self"],["scalar"]]]],[11,"sub_assign","","",0,[[["self"],["scalar"]]]],[11,"sub_assign","curve25519_dalek::edwards","",3,[[["self"],["edwardspoint"]]]],[11,"sub_assign","","",3,[[["self"],["edwardspoint"]]]],[11,"sub_assign","curve25519_dalek::ristretto","",6,[[["self"],["ristrettopoint"]]]],[11,"sub_assign","","",6,[[["self"],["ristrettopoint"]]]],[11,"mul_assign","curve25519_dalek::scalar","",0,[[["self"],["scalar"]]]],[11,"mul_assign","","",0,[[["self"],["scalar"]]]],[11,"mul_assign","curve25519_dalek::montgomery","",1,[[["self"],["scalar"]]]],[11,"mul_assign","","",1,[[["self"],["scalar"]]]],[11,"mul_assign","curve25519_dalek::edwards","",3,[[["self"],["scalar"]]]],[11,"mul_assign","","",3,[[["self"],["scalar"]]]],[11,"mul_assign","curve25519_dalek::ristretto","",6,[[["self"],["scalar"]]]],[11,"mul_assign","","",6,[[["self"],["scalar"]]]],[11,"index","curve25519_dalek::scalar","Index the bytes of the representative for this `Scalar`.…",0,[[["self"],["usize"]],["u8"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","curve25519_dalek::edwards","",3,[[["i"]],["self"]]],[11,"sum","curve25519_dalek::ristretto","",6,[[["i"]],["self"]]],[11,"clone","curve25519_dalek::scalar","",0,[[["self"]],["scalar"]]],[11,"clone","curve25519_dalek::montgomery","",1,[[["self"]],["montgomerypoint"]]],[11,"clone","curve25519_dalek::edwards","",2,[[["self"]],["compressededwardsy"]]],[11,"clone","","",3,[[["self"]],["edwardspoint"]]],[11,"clone","","",4,[[["self"]],["edwardsbasepointtable"]]],[11,"clone","curve25519_dalek::ristretto","",5,[[["self"]],["compressedristretto"]]],[11,"clone","","",6,[[["self"]],["ristrettopoint"]]],[11,"clone","","",7,[[["self"]],["ristrettobasepointtable"]]],[11,"default","curve25519_dalek::scalar","",0,[[],["scalar"]]],[11,"default","curve25519_dalek::montgomery","",1,[[],["montgomerypoint"]]],[11,"default","curve25519_dalek::edwards","",2,[[],["compressededwardsy"]]],[11,"default","","",3,[[],["edwardspoint"]]],[11,"default","curve25519_dalek::ristretto","",5,[[],["compressedristretto"]]],[11,"default","","",6,[[],["ristrettopoint"]]],[11,"zeroize","curve25519_dalek::scalar","",0,[[["self"]]]],[11,"zeroize","curve25519_dalek::montgomery","",1,[[["self"]]]],[11,"ct_eq","curve25519_dalek::scalar","",0,[[["self"]],["choice"]]],[11,"ct_eq","curve25519_dalek::montgomery","",1,[[["self"],["montgomerypoint"]],["choice"]]],[11,"ct_eq","curve25519_dalek::edwards","",2,[[["self"],["compressededwardsy"]],["choice"]]],[11,"ct_eq","","",3,[[["edwardspoint"],["self"]],["choice"]]],[11,"ct_eq","curve25519_dalek::ristretto","",5,[[["compressedristretto"],["self"]],["choice"]]],[11,"ct_eq","","Test equality between two `RistrettoPoint`s.",6,[[["ristrettopoint"],["self"]],["choice"]]],[11,"conditional_select","curve25519_dalek::scalar","",0,[[["self"],["choice"]],["self"]]],[11,"conditional_select","curve25519_dalek::edwards","",3,[[["edwardspoint"],["choice"]],["edwardspoint"]]],[11,"conditional_select","curve25519_dalek::ristretto","Conditionally select between `self` and `other`.",6,[[["ristrettopoint"],["choice"]],["ristrettopoint"]]]],"p":[[3,"Scalar"],[3,"MontgomeryPoint"],[3,"CompressedEdwardsY"],[3,"EdwardsPoint"],[3,"EdwardsBasepointTable"],[3,"CompressedRistretto"],[3,"RistrettoPoint"],[3,"RistrettoBasepointTable"],[8,"Identity"],[8,"IsIdentity"],[8,"MultiscalarMul"],[8,"VartimeMultiscalarMul"],[8,"VartimePrecomputedMultiscalarMul"],[3,"VartimeEdwardsPrecomputation"],[3,"VartimeRistrettoPrecomputation"]]};
searchIndex["derivative"] = {"doc":"","i":[[24,"Derivative","derivative","",null,null]],"p":[]};
searchIndex["digest"] = {"doc":"This crate provides traits which describe functionality of…","i":[[3,"InvalidOutputSize","digest","The error type for variable hasher initialization",null,null],[8,"Digest","","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["self"],["asref"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["asref"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["genericarray",["u8"]],["u8"]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["genericarray",["u8"]],["u8"]]]],[8,"DynDigest","","The `DynDigest` trait is a modification of `Digest` trait…",null,null],[10,"input","","Digest input data.",1,[[["self"]]]],[10,"result_reset","","Retrieve result and reset hasher instance",1,[[["self"]],["box"]]],[10,"result","","Retrieve result and consume boxed hasher instance",1,[[["box"]],["box"]]],[10,"reset","","Reset hasher instance to its initial state.",1,[[["self"]]]],[10,"output_size","","Get output size of the hasher",1,[[["self"]],["usize"]]],[10,"box_clone","","Clone hasher state into a boxed trait object",1,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[8,"Input","","Trait for processing input data",null,null],[10,"input","","Digest input data.",2,[[["self"],["asref"]]]],[11,"chain","","Digest input data in a chained manner.",2,[[["asref"]],["self"]]],[8,"BlockInput","","Trait to indicate that digest function processes data in…",null,null],[16,"BlockSize","","",3,null],[8,"FixedOutput","","Trait for returning digest result with the fixed size",null,null],[16,"OutputSize","","",4,null],[10,"fixed_result","","Retrieve result and consume hasher instance.",4,[[],[["genericarray",["u8"]],["u8"]]]],[8,"VariableOutput","","Trait for returning digest result with the variable size",null,null],[10,"new","","Create new hasher instance with the given output size.",5,[[["usize"]],[["invalidoutputsize"],["result",["invalidoutputsize"]]]]],[10,"output_size","","Get output size of the hasher instance provided to the…",5,[[["self"]],["usize"]]],[10,"variable_result","","Retrieve result via closure and consume hasher.",5,[[["fnonce"]]]],[11,"vec_result","","Retrieve result into vector and consume hasher.",5,[[],[["u8"],["vec",["u8"]]]]],[8,"XofReader","","Trait for describing readers which are used to extract…",null,null],[10,"read","","Read output into the `buffer`. Can be called unlimited…",6,[[["self"]]]],[8,"ExtendableOutput","","Trait which describes extendable-output functions (XOF).",null,null],[16,"Reader","","",7,null],[10,"xof_result","","Retrieve XOF reader and consume hasher instance.",7,[[]]],[11,"vec_result","","Retrieve result into vector of specified length.",7,[[["usize"]],[["u8"],["vec",["u8"]]]]],[8,"Reset","","Trait for resetting hash instances",null,null],[10,"reset","","Reset hasher instance to its initial state and return…",8,[[["self"]]]],[14,"impl_write","","Implements `std::io::Write` trait for implementer of `Input`",null,null],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["invalidoutputsize"]]],[11,"default","","",9,[[],["invalidoutputsize"]]],[11,"description","","",9,[[["self"]],["str"]]]],"p":[[8,"Digest"],[8,"DynDigest"],[8,"Input"],[8,"BlockInput"],[8,"FixedOutput"],[8,"VariableOutput"],[8,"XofReader"],[8,"ExtendableOutput"],[8,"Reset"],[3,"InvalidOutputSize"]]};
searchIndex["ed25519_dalek"] = {"doc":"A Rust implementation of ed25519 key generation, signing,…","i":[[3,"Sha512","ed25519_dalek","The SHA-512 hash algorithm with the SHA-512 initial hash…",null,null],[8,"Digest","","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["self"],["b"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["b"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["genericarray",["u8"]],["u8"]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["genericarray",["u8"]],["u8"]]]],[3,"Sha512","","The SHA-512 hash algorithm with the SHA-512 initial hash…",null,null],[3,"SignatureError","","Errors which may occur while processing signatures and…",null,null],[3,"PublicKey","","An ed25519 public key.",null,null],[3,"SecretKey","","An EdDSA secret key.",null,null],[3,"ExpandedSecretKey","","An \"expanded\" secret key.",null,null],[3,"Signature","","An ed25519 signature.",null,null],[3,"Keypair","","An ed25519 keypair.",null,null],[12,"secret","","The secret half of this keypair.",1,null],[12,"public","","The public half of this keypair.",1,null],[11,"to_bytes","","Convert this keypair to bytes.",1,[[["self"]]]],[11,"from_bytes","","Construct a `Keypair` from the bytes of a `PublicKey` and…",1,[[],[["result",["keypair","signatureerror"]],["keypair"],["signatureerror"]]]],[11,"generate","","Generate an ed25519 keypair.",1,[[["r"]],["keypair"]]],[11,"sign","","Sign a message with this keypair's secret key.",1,[[["self"]],["signature"]]],[11,"sign_prehashed","","Sign a `prehashed_message` with this `Keypair` using the…",1,[[["option"],["d"],["self"]],["signature"]]],[11,"verify","","Verify a signature on a message with this keypair's public…",1,[[["signature"],["self"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"verify_prehashed","","Verify a `signature` on a `prehashed_message` using the…",1,[[["option"],["d"],["self"],["signature"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"verify_strict","","Strictly verify a signature on a message with this…",1,[[["signature"],["self"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"to_bytes","","Convert this public key to a byte array.",2,[[["self"]]]],[11,"as_bytes","","View this public key as a byte array.",2,[[["self"]]]],[11,"from_bytes","","Construct a `PublicKey` from a slice of bytes.",2,[[],[["result",["publickey","signatureerror"]],["signatureerror"],["publickey"]]]],[11,"verify","","Verify a signature on a message with this keypair's public…",2,[[["signature"],["self"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"verify_prehashed","","Verify a `signature` on a `prehashed_message` using the…",2,[[["option"],["d"],["self"],["signature"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"verify_strict","","Strictly verify a signature on a message with this…",2,[[["signature"],["self"]],[["result",["signatureerror"]],["signatureerror"]]]],[11,"to_bytes","","Convert this secret key to a byte array.",3,[[["self"]]]],[11,"as_bytes","","View this secret key as a byte array.",3,[[["self"]]]],[11,"from_bytes","","Construct a `SecretKey` from a slice of bytes.",3,[[],[["result",["secretkey","signatureerror"]],["secretkey"],["signatureerror"]]]],[11,"generate","","Generate a `SecretKey` from a `csprng`.",3,[[["t"]],["secretkey"]]],[11,"to_bytes","","Convert this `ExpandedSecretKey` into an array of 64 bytes.",4,[[["self"]]]],[11,"from_bytes","","Construct an `ExpandedSecretKey` from a slice of bytes.",4,[[],[["expandedsecretkey"],["signatureerror"],["result",["expandedsecretkey","signatureerror"]]]]],[11,"sign","","Sign a message with this `ExpandedSecretKey`.",4,[[["self"],["publickey"]],["signature"]]],[11,"sign_prehashed","","Sign a `prehashed_message` with this `ExpandedSecretKey`…",4,[[["option"],["publickey"],["d"],["self"]],["signature"]]],[11,"to_bytes","","Convert this `Signature` to a byte array.",5,[[["self"]]]],[11,"from_bytes","","Construct a `Signature` from a slice of bytes.",5,[[],[["signature"],["result",["signature","signatureerror"]],["signatureerror"]]]],[17,"SIGNATURE_LENGTH","","The length of a ed25519 `Signature`, in bytes.",null,null],[17,"SECRET_KEY_LENGTH","","The length of a ed25519 `SecretKey`, in bytes.",null,null],[17,"PUBLIC_KEY_LENGTH","","The length of an ed25519 `PublicKey`, in bytes.",null,null],[17,"KEYPAIR_LENGTH","","The length of an ed25519 `Keypair`, in bytes.",null,null],[17,"EXPANDED_SECRET_KEY_LENGTH","","The length of an \"expanded\" ed25519 key,…",null,null],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"new","","",6,[[],["d"]]],[11,"input","","",6,[[["self"],["b"]]]],[11,"chain","","",6,[[["b"]],["d"]]],[11,"result","","",6,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",6,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",6,[[["self"]]]],[11,"output_size","","",6,[[],["usize"]]],[11,"digest","","",6,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",6,[[["self"]]]],[11,"result_reset","","",6,[[["self"]],["box"]]],[11,"result","","",6,[[["box"]],["box"]]],[11,"reset","","",6,[[["self"]]]],[11,"output_size","","",6,[[["self"]],["usize"]]],[11,"box_clone","","",6,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"vzip","","",1,[[],["v"]]],[11,"clone","","",6,[[["self"]],["sha512"]]],[11,"write","","",6,[[["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"flush","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"input","","",6,[[["self"],["b"]]]],[11,"reset","","",6,[[["self"]]]],[11,"fixed_result","","",6,[[],[["genericarray",["u8"]],["u8"]]]],[11,"default","","",6,[[],["sha512"]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","Derive this public key from its corresponding `SecretKey`.",2,[[["secretkey"]],["publickey"]]],[11,"from","","Derive this public key from its corresponding…",2,[[["expandedsecretkey"]],["publickey"]]],[11,"from","","Construct an `ExpandedSecretKey` from a `SecretKey`.",4,[[["secretkey"]],["expandedsecretkey"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["signatureerror"],["self"]],["bool"]]],[11,"ne","","",7,[[["signatureerror"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["publickey"]],["bool"]]],[11,"ne","","",2,[[["self"],["publickey"]],["bool"]]],[11,"eq","","",5,[[["signature"],["self"]],["bool"]]],[11,"ne","","",5,[[["signature"],["self"]],["bool"]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"as_ref","","",2,[[["self"]]]],[11,"as_ref","","",3,[[["self"]]]],[11,"clone","","",7,[[["self"]],["signatureerror"]]],[11,"clone","","",2,[[["self"]],["publickey"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"default","","",1,[[],["keypair"]]],[11,"default","","",2,[[],["publickey"]]],[11,"default","","",3,[[],["secretkey"]]],[11,"default","","",4,[[],["expandedsecretkey"]]],[11,"source","","",7,[[["self"]],[["error"],["option",["error"]]]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"serialize","","",2,[[["s"],["self"]],["result"]]],[11,"serialize","","",3,[[["s"],["self"]],["result"]]],[11,"serialize","","",4,[[["s"],["self"]],["result"]]],[11,"serialize","","",5,[[["s"],["self"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"deserialize","","",2,[[["d"]],["result"]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]],[11,"deserialize","","",5,[[["d"]],["result"]]]],"p":[[8,"Digest"],[3,"Keypair"],[3,"PublicKey"],[3,"SecretKey"],[3,"ExpandedSecretKey"],[3,"Signature"],[3,"Sha512"],[3,"SignatureError"]]};
searchIndex["enum_as_inner"] = {"doc":"enum-as-inner","i":[[24,"EnumAsInner","enum_as_inner","",null,null]],"p":[]};
searchIndex["err_derive"] = {"doc":"`err-derive`","i":[[24,"Error","err_derive","",null,null]],"p":[]};
searchIndex["fake_simd"] = {"doc":"","i":[[3,"u32x4","fake_simd","",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[12,"3","","",0,null],[3,"u64x2","","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"sub","","",0,[[["u32x4"]],["u32x4"]]],[11,"eq","","",0,[[["u32x4"],["self"]],["bool"]]],[11,"ne","","",0,[[["u32x4"],["self"]],["bool"]]],[11,"add","","",0,[[["u32x4"]],["u32x4"]]],[11,"add","","",1,[[["u64x2"]],["u64x2"]]],[11,"bitand","","",0,[[["u32x4"]],["u32x4"]]],[11,"bitor","","",0,[[["u32x4"]],["u32x4"]]],[11,"bitxor","","",0,[[["u32x4"]],["u32x4"]]],[11,"shl","","",0,[[["usize"]],["u32x4"]]],[11,"shl","","",0,[[["u32x4"]],["u32x4"]]],[11,"shr","","",0,[[["usize"]],["u32x4"]]],[11,"shr","","",0,[[["u32x4"]],["u32x4"]]],[11,"clone","","",0,[[["self"]],["u32x4"]]],[11,"clone","","",1,[[["self"]],["u64x2"]]]],"p":[[3,"u32x4"],[3,"u64x2"]]};
searchIndex["futures"] = {"doc":"Abstractions for asynchronous programming.","i":[[14,"ready","futures","Extracts the successful type of a `Poll<T>`.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[0,"channel","","Cross-task communication.",null,null],[0,"oneshot","futures::channel","A channel for sending a single message between…",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another…",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across…",null,[[]]],[3,"Canceled","","Error returned from a `Receiver` when the corresponding…",null,null],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[0,"future","futures","Asynchronous values.",null,null],[8,"Future","futures::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",2,[[["self"]],["bool"]]],[6,"BoxFuture","","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"lazy","","Creates a new future that allows delayed execution of a…",null,[[["f"]],["lazy"]]],[3,"Lazy","","Future for the [`lazy`] function.",null,null],[5,"maybe_done","","Wraps a future into a `MaybeDone`",null,[[["fut"]],["maybedone"]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",4,null],[13,"Done","","The output of the completed future",4,null],[13,"Gone","","The empty variant after the result of a [`MaybeDone`] has…",4,null],[5,"pending","","Creates a future which never resolves, representing a…",null,[[],["pending"]]],[3,"Pending","","Future for the [`pending()`] function.",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[3,"PollFn","","Future for the [`poll_fn`] function.",null,null],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[["t"]],["ready"]]],[5,"ok","","Create a future that is immediately ready with a success…",null,[[["t"]],[["ready",["result"]],["result"]]]],[5,"err","","Create a future that is immediately ready with an error…",null,[[["e"]],[["ready",["result"]],["result"]]]],[3,"Ready","","Future for the `ready` function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["join"]]],[5,"join3","","Same as `join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["join3"]]],[5,"join4","","Same as `join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["join4"]]],[5,"join5","","Same as `join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["join5"]]],[3,"Join","","Future for the `join` function.",null,null],[3,"Join3","","Future for the [`join3`] function.",null,null],[3,"Join4","","Future for the [`join4`] function.",null,null],[3,"Join5","","Future for the [`join5`] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["select"]]],[3,"Select","","Future for the [`select()`] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["tryjoin"]]],[5,"try_join3","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["tryjoin3"]]],[5,"try_join4","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["tryjoin4"]]],[5,"try_join5","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["tryjoin5"]]],[3,"TryJoin","","Future for the `try_join` function.",null,null],[3,"TryJoin3","","Future for the [`try_join3`] function.",null,null],[3,"TryJoin4","","Future for the [`try_join4`] function.",null,null],[3,"TryJoin5","","Future for the [`try_join5`] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["tryselect"]]],[3,"TrySelect","","Future for the [`try_select()`] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having…",null,null],[13,"Left","","First branch of the type",5,null],[13,"Right","","Second branch of the type",5,null],[3,"OptionFuture","","A future representing a value which may or may not be…",null,null],[8,"FutureExt","","An extension trait for `Future`s that provides a variety…",null,null],[11,"map","","Map this future's output to a different type, returning a…",6,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",6,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",6,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",6,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",6,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",6,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",6,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",6,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",6,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",6,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",6,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",6,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",6,[[],[["pin",["box"]],["box",["future"]]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",6,[[],[["pin",["box"]],["box",["future"]]]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",6,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",6,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",6,[[["context"],["self"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",6,[[],["option"]]],[3,"FlattenStream","","Stream for the `flatten_stream` method.",null,null],[3,"Flatten","","Future for the `flatten` method.",null,null],[3,"Fuse","","Future for the `fuse` method.",null,null],[3,"Inspect","","Future for the `inspect` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Map","","Future for the `map` method.",null,null],[3,"Then","","Future for the `then` method.",null,null],[3,"UnitError","","Future for the `unit_error` combinator.",null,null],[3,"NeverError","","Future for the `never_error` combinator.",null,null],[8,"TryFutureExt","","Adapters specific to [`Result`]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful…",7,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",7,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",7,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",7,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",7,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",7,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",7,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",7,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",7,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",7,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",7,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",7,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",7,[[["context"],["self"]],[["result"],["poll",["result"]]]]],[3,"AndThen","","Future for the `and_then` method.",null,null],[3,"ErrInto","","Future for the `err_into` method.",null,null],[3,"FlattenSink","","Sink for the `flatten_sink` method.",null,null],[3,"IntoFuture","","Future for the `into_future` method.",null,null],[3,"MapErr","","Future for the `map_err` method.",null,null],[3,"MapOk","","Future for the `map_ok` method.",null,null],[3,"OrElse","","Future for the `or_else` method.",null,null],[3,"InspectOk","","Future for the `inspect_ok` method.",null,null],[3,"InspectErr","","Future for the `inspect_err` method.",null,null],[3,"TryFlattenStream","","Stream for the `try_flatten_stream` method.",null,null],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` method.",null,null],[5,"join_all","","Creates a future which represents a collection of the…",null,[[["i"]],["joinall"]]],[3,"JoinAll","","Future for the [`join_all`] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of…",null,[[["i"]],["selectall"]]],[3,"SelectAll","","Future for the [`select_all`] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of…",null,[[["i"]],["tryjoinall"]]],[3,"TryJoinAll","","Future for the [`try_join_all`] function.",null,null],[5,"select_ok","","Creates a new future which will select the first…",null,[[["i"]],["selectok"]]],[3,"SelectOk","","Future for the [`select_ok`] function.",null,null],[5,"abortable","","Creates a new `Abortable` future and a `AbortHandle` which…",null,[[["fut"]]]],[3,"Abortable","","A future which can be remotely short-circuited using an…",null,null],[3,"AbortHandle","","A handle to a `Abortable` future.",null,null],[3,"AbortRegistration","","A registration handle for a `Abortable` future. Values of…",null,null],[3,"Aborted","","Indicator that the `Abortable` future was aborted.",null,null],[3,"Remote","","A future which sends its output to the corresponding…",null,null],[3,"RemoteHandle","","The handle to a remote future returned by `remote_handle`.…",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` method.",null,null],[3,"Shared","","Future for the `shared` method.",null,null],[0,"io","futures","Asynchronous I/O.",null,null],[8,"AsyncRead","futures::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",11,[[["pin"],["self"],["usize"]]]],[3,"Error","","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",12,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",12,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",12,null],[13,"ConnectionReset","","The connection was reset by the remote server.",12,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",12,null],[13,"NotConnected","","The network operation failed because it was not connected…",12,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",12,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",12,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",12,null],[13,"AlreadyExists","","An entity already exists, often a file.",12,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",12,null],[13,"InvalidInput","","A parameter was incorrect.",12,null],[13,"InvalidData","","Data not valid for the operation were encountered.",12,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",12,null],[13,"WriteZero","","An error returned when an operation could not be completed…",12,null],[13,"Interrupted","","This operation was interrupted.",12,null],[13,"Other","","Any I/O error not part of this list.",12,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",12,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",13,null],[13,"End","","Sets the offset to the size of this object plus the…",13,null],[13,"Current","","Sets the offset to the current position plus the specified…",13,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with…",14,[[["r"]],["chain"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in…",14,[[["self"]],["read"]]],[11,"read_vectored","","Creates a future which will read from the `AsyncRead` into…",14,[[["self"]],["readvectored"]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to…",14,[[["self"]],["readexact"]]],[11,"read_to_end","","Creates a future which will read all the bytes from this…",14,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Creates a future which will read all the bytes from this…",14,[[["self"],["string"]],["readtostring"]]],[11,"split","","Helper method for splitting this read/write object into…",14,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most…",14,[[["u64"]],["take"]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to…",null,null],[11,"flush","","Creates a future which will entirely flush this…",15,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this…",15,[[["self"]],["close"]]],[11,"write","","Creates a future which will write bytes from `buf` into…",15,[[["self"]],["write"]]],[11,"write_vectored","","Creates a future which will write bytes from `bufs` into…",15,[[["self"]],["writevectored"]]],[11,"write_all","","Write data into this object.",15,[[["self"]],["writeall"]]],[11,"into_sink","","Allow using an [`AsyncWrite`] as a `Sink``<Item:…",15,[[],["intosink"]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",16,[[["seekfrom"],["self"]],["seek"]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Creates a future which will read all the bytes associated…",17,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Creates a future which will read all the bytes associated…",17,[[["self"],["string"]],["readline"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",17,[[],["lines"]]],[3,"AllowStdIo","","A simple wrapper type which allows types which implement…",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Cursor","","A `Cursor` wraps an in-memory buffer and provides it with…",null,null],[3,"Chain","","Reader for the `chain` method.",null,null],[3,"Close","","Future for the `close` method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],["copy"]]],[3,"Copy","","Future for the [`copy()`] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],["copybuf"]]],[3,"CopyBuf","","Future for the [`copy_buf()`] function.",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty"]]],[3,"Empty","","Reader for the [`empty()`] function.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"IntoSink","","Sink for the `into_sink` method.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Read","","Future for the `read` method.",null,null],[3,"ReadExact","","Future for the `read_exact` method.",null,null],[3,"ReadHalf","","The readable half of an object returned from…",null,null],[3,"ReadLine","","Future for the `read_line` method.",null,null],[3,"ReadToEnd","","Future for the `read_to_end` method.",null,null],[3,"ReadToString","","Future for the `read_to_string` method.",null,null],[3,"ReadUntil","","Future for the `read_until` method.",null,null],[3,"ReadVectored","","Future for the `read_vectored` method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats…",null,[[["u8"]],["repeat"]]],[3,"Repeat","","Reader for the [`repeat()`] function.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully…",null,[[],["sink"]]],[3,"Sink","","Writer for the [`sink()`] function.",null,null],[3,"Take","","Reader for the `take` method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the `write` method.",null,null],[3,"WriteAll","","Future for the `write_all` method.",null,null],[3,"WriteHalf","","The writable half of an object returned from…",null,null],[3,"WriteVectored","","Future for the `write_vectored` method.",null,null],[0,"lock","futures","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures::lock","An RAII guard returned by the `MutexGuard::map` and…",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been…",null,null],[3,"MutexGuard","","An RAII guard returned by the `lock` and `try_lock`…",null,null],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",null,null],[8,"Future","futures::prelude","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",1,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",18,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",18,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",18,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",19,null],[16,"Error","","The type of failures yielded by this future",19,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",19,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",20,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",20,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",8,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",9,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",11,[[["pin"],["self"],["usize"]]]],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"Sink","futures::sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",20,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",20,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[3,"Close","","Future for the `close` method.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"Send","","Future for the `send` method.",null,null],[3,"SendAll","","Future for the `send_all` method.",null,null],[3,"SinkErrInto","","Sink for the `sink_err_into` method.",null,null],[3,"SinkMapErr","","Sink for the `sink_map_err` method.",null,null],[3,"With","","Sink for the `with` method.",null,null],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of…",null,null],[11,"with","","Composes a function in front of the sink.",21,[[["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",21,[[["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",21,[[["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the…",21,[[],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",21,[[["usize"]],["buffer"]]],[11,"close","","Close the sink.",21,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",21,[[["si"]],["fanout"]]],[11,"flush","","Flush the sink, processing all pending items.",21,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",21,[[["self"],["item"]],["send"]]],[11,"send_all","","A future that completes after the given stream has been…",21,[[["st"],["self"]],["sendall"]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the…",21,[[],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the…",21,[[],["either"]]],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",null,null],[3,"Drain","","Sink for the [`drain`] function.",null,null],[5,"drain","","Create a sink that will just discard all items given to it.",null,[[],["drain"]]],[3,"WithFlatMap","","Sink for the `with_flat_map` method.",null,null],[3,"Buffer","","Sink for the `buffer` method.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[8,"Stream","futures::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",18,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",18,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",18,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",19,null],[16,"Error","","The type of failures yielded by this future",19,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",19,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",22,[[["self"]],["bool"]]],[6,"BoxStream","","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[3,"Iter","","Stream for the [`iter`] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[["t"]],["repeat"]]],[3,"Repeat","","Stream for the [`repeat`] function.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty"]]],[3,"Empty","","Stream for the [`empty`] function.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending"]]],[3,"Pending","","Stream for the [`pending()`] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["fut"]],["once"]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning…",null,[[["f"]],["pollfn"]]],[3,"PollFn","","Stream for the [`poll_fn`] function.",null,null],[5,"select","","This function will attempt to pull items from both…",null,[[["st1"],["st2"]],["select"]]],[3,"Select","","Stream for the [`select()`] function.",null,null],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",null,[[["t"],["f"]],["unfold"]]],[3,"Unfold","","Stream for the [`unfold`] function.",null,null],[5,"try_unfold","","Creates a `TryStream` from a seed and a closure returning…",null,[[["t"],["f"]],["tryunfold"]]],[3,"TryUnfold","","Stream for the [`try_unfold`] function.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Creates a future that resolves to the next item in the…",23,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",23,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",23,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",23,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",23,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",23,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",23,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",23,[[],["collect"]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",23,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",23,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",23,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",23,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",23,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",23,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",23,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",23,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",23,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",23,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",23,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",23,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",23,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",23,[[],[["pin",["box"]],["box",["stream"]]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",23,[[],[["pin",["box"]],["box",["stream"]]]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",23,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",23,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",23,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",23,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",23,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",23,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",23,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",23,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",23,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",23,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",23,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",23,[[["context"],["self"]],[["option"],["poll",["option"]]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",23,[[["self"]],["selectnextsome"]]],[3,"Chain","","Stream for the `chain` method.",null,null],[3,"Collect","","Future for the `collect` method.",null,null],[3,"Concat","","Future for the `concat` method.",null,null],[3,"Enumerate","","Stream for the `enumerate` method.",null,null],[3,"Filter","","Stream for the `filter` method.",null,null],[3,"FilterMap","","Stream for the `filter_map` method.",null,null],[3,"Flatten","","Stream for the `flatten` method.",null,null],[3,"Fold","","Future for the `fold` method.",null,null],[3,"Forward","","Future for the `forward` method.",null,null],[3,"ForEach","","Future for the `for_each` method.",null,null],[3,"Fuse","","Stream for the `fuse` method.",null,null],[3,"StreamFuture","","Future for the `into_future` method.",null,null],[3,"Inspect","","Stream for the `inspect` method.",null,null],[3,"Map","","Stream for the `map` method.",null,null],[3,"Next","","Future for the `next` method.",null,null],[3,"SelectNextSome","","Future for the `select_next_some` method.",null,null],[3,"Peek","","Future for the `Peekable::peek()` function from [`Peekable`]",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Scan","","Stream for the `scan` method.",null,null],[3,"Skip","","Stream for the `skip` method.",null,null],[3,"SkipWhile","","Stream for the `skip_while` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"TakeWhile","","Stream for the `take_while` method.",null,null],[3,"Then","","Stream for the `then` method.",null,null],[3,"Zip","","Stream for the `zip` method.",null,null],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts…",24,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",24,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",24,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",24,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",24,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",24,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",24,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",24,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",24,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",24,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",24,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",24,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",24,[[],["trycollect"]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",24,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",24,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",24,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",24,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",24,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",24,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",24,[[["context"],["self"]],[["option",["result"]],["poll",["option"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",24,[[],["intoasyncread"]]],[3,"AndThen","","Stream for the `and_then` method.",null,null],[3,"ErrInto","","Stream for the `err_into` method.",null,null],[3,"MapOk","","Stream for the `map_ok` method.",null,null],[3,"MapErr","","Stream for the `map_err` method.",null,null],[3,"OrElse","","Stream for the `or_else` method.",null,null],[3,"InspectOk","","Stream for the `inspect_ok` method.",null,null],[3,"InspectErr","","Stream for the `inspect_err` method.",null,null],[3,"TryNext","","Future for the `try_next` method.",null,null],[3,"TryForEach","","Future for the `try_for_each` method.",null,null],[3,"TryFilter","","Stream for the `try_filter` method.",null,null],[3,"TryFilterMap","","Stream for the `try_filter_map` method.",null,null],[3,"TryFlatten","","Stream for the `try_flatten` method.",null,null],[3,"TryCollect","","Future for the `try_collect` method.",null,null],[3,"TryConcat","","Future for the `try_concat` method.",null,null],[3,"TryFold","","Future for the `try_fold` method.",null,null],[3,"TrySkipWhile","","Stream for the `try_skip_while` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Chunks","","Stream for the `chunks` method.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered…",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","futures::stream","A set of futures which may complete in any order.",null,null],[3,"BufferUnordered","","Stream for the `buffer_unordered` method.",null,null],[3,"Buffered","","Stream for the `buffered` method.",null,null],[3,"ForEachConcurrent","","Future for the `for_each_concurrent` method.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[5,"select_all","","Convert a list of streams into a `Stream` of results from…",null,[[["i"]],["selectall"]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` method.",null,null],[3,"TryBufferUnordered","","Stream for the `try_buffer_unordered` method.",null,null],[3,"TryForEachConcurrent","","Future for the `try_for_each_concurrent` method.",null,null],[3,"IntoAsyncRead","","Reader for the `into_async_read` method.",null,null],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",26,null],[13,"Pending","","Represents that a value is not ready yet.",26,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",27,[[["self"],["futureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",27,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",28,[[["self"],["localfutureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",28,[[["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[8,"SpawnExt","","Extension trait for `Spawn`.",null,null],[11,"spawn","","Spawns a task that polls the given future with output `()`…",29,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",29,[[["self"],["fut"]],[["remotehandle"],["result",["remotehandle","spawnerror"]],["spawnerror"]]]],[8,"LocalSpawnExt","","Extension trait for `LocalSpawn`.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",30,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",30,[[["self"],["fut"]],[["remotehandle"],["result",["remotehandle","spawnerror"]],["spawnerror"]]]],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",31,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",31,[[["arc"]]]],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[0,"never","futures","This module contains the `Never` type.",null,null],[6,"Never","futures::never","A type with no possible values.",null,null],[11,"from","futures::channel::oneshot","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"try_poll","","",32,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","futures::channel::mpsc","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"try_poll_next","","",37,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"try_poll_next","","",38,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","futures::task","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"try_poll","","",42,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"try_poll","","",43,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::future","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"try_poll","","",44,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"try_poll","","",45,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"try_poll","","",46,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"try_poll","","",47,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"try_poll","","",53,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"try_poll","","",54,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"try_poll","","",55,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"try_poll","","",56,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"try_poll","","",57,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"try_poll_next","","",59,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"try_poll","","",60,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"try_poll","","",61,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll","","",62,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll_next","","",63,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"try_poll","","",64,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"try_poll","","",65,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"try_poll","","",66,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"try_poll","","",67,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"try_poll","","",68,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"try_poll","","",69,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"try_poll_next","","",70,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"try_poll","","",71,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"try_poll","","",72,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"try_poll","","",73,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"try_poll","","",74,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"try_poll","","",75,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"try_poll","","",76,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"try_poll_next","","",77,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"try_poll","","",78,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"try_poll","","",81,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"try_poll","","",82,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"try_poll","","",83,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"to_string","","",86,[[["self"]],["string"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"try_poll","","",88,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"try_poll","","",89,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"try_poll","","",90,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::io","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"try_poll","","",99,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"try_poll","","",100,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"try_poll","","",101,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"try_poll","","",103,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"try_poll_next","","",105,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll","","",107,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"try_poll","","",109,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll","","",110,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"try_poll","","",111,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"try_poll","","",112,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"try_poll","","",113,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"try_poll","","",115,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"try_poll","","",119,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"try_poll","","",120,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"try_poll","","",122,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures::lock","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"from","","",124,[[],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","futures::sink","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"try_poll","","",127,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"try_poll","","",128,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"try_poll","","",129,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"try_poll","","",130,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"try_poll_next","","",131,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"try_poll_next","","",132,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"try_poll_next","","",133,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"try_poll_next","","",136,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"try_poll_next","","",137,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures::stream","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"try_poll_next","","",138,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"try_poll_next","","",139,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"try_poll_next","","",140,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"try_poll_next","","",141,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"try_poll_next","","",142,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"try_poll_next","","",143,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"try_poll_next","","",144,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"try_poll_next","","",145,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"try_poll_next","","",146,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"try_poll_next","","",147,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"try_poll","","",149,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"try_poll_next","","",151,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"try_poll_next","","",152,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"try_poll_next","","",153,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"try_poll","","",154,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"try_poll","","",155,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"try_poll_next","","",157,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"try_poll_next","","",159,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"try_poll_next","","",160,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"try_poll","","",162,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"try_poll_next","","",164,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"try_poll_next","","",165,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"try_poll_next","","",166,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"try_poll_next","","",167,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"try_poll_next","","",168,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"try_poll_next","","",169,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"try_poll_next","","",170,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"try_poll_next","","",172,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"try_poll_next","","",173,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"try_poll_next","","",174,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"try_poll_next","","",175,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"try_poll_next","","",176,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"try_poll_next","","",177,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"try_poll_next","","",178,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"try_poll","","",179,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"try_poll","","",180,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"try_poll_next","","",181,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"try_poll_next","","",182,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"try_poll_next","","",183,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"try_poll","","",184,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"try_poll","","",185,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"try_poll","","",186,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"try_poll_next","","",187,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"try_poll_next","","",188,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"try_poll_next","","",190,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"try_poll_next","","",191,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures::stream::futures_unordered","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"into_iter","","",192,[[],["i"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"into_iter","","",193,[[],["i"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"into_iter","","",194,[[],["i"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"into_iter","","",195,[[],["i"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"from","futures::stream","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"try_poll_next","","",196,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"try_poll_next","","",197,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"try_poll_next","","",199,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"try_poll_next","","",201,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"try_poll_next","","",202,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"try_poll_next","","",203,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"try_poll","","",204,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"from","futures::task","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"from","","",26,[[],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_string","","",210,[[["self"]],["string"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"cmp","futures::io","",12,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",93,[[["self"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"deref","","",92,[[["self"]]]],[11,"deref","","",93,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",91,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",91,[[["nulerror"]],["error"]]],[11,"from","","",91,[[["intoinnererror"]],["error"]]],[11,"description","","",91,[[["self"]],["str"]]],[11,"cause","","",91,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",91,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",13,[[["self"]],["seekfrom"]]],[11,"clone","","",12,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",12,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",13,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",13,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",12,[[["errorkind"],["self"]],["bool"]]],[11,"clone","futures::task","",207,[[["self"]],["waker"]]],[11,"clone","","",209,[[["self"]],["rawwakervtable"]]],[11,"clone","","",26,[[["self"]],["poll"]]],[11,"drop","","",207,[[["self"]]]],[11,"eq","","",209,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",209,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",208,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",208,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",26,[[["poll"],["self"]],["bool"]]],[11,"ne","","",26,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",208,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",206,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",207,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",26,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"from","","",26,[[["t"]],["poll"]]],[11,"partial_cmp","","",26,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",26,[[["poll"],["self"]],["bool"]]],[11,"le","","",26,[[["poll"],["self"]],["bool"]]],[11,"gt","","",26,[[["poll"],["self"]],["bool"]]],[11,"ge","","",26,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",26,[[],["result"]]],[11,"from_error","","",26,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",26,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",26,[[],["result"]]],[11,"from_error","","",26,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",26,[[],[["result"],["poll",["result"]]]]],[11,"default","","",212,[[],["atomicwaker"]]],[11,"fmt","","",212,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"seek","futures::io","",94,[[["seekfrom"],["self"]],[["error"],["u64"],["result",["u64","error"]]]]],[11,"poll_fill_buf","","",97,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",97,[[["cursor"],["pin",["cursor"]],["usize"]]]],[11,"poll_fill_buf","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",95,[[["pin",["bufreader"]],["bufreader"],["usize"]]]],[11,"poll_fill_buf","futures::future","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",5,[[["pin",["either"]],["usize"],["either"]]]],[11,"poll_fill_buf","futures::io","",98,[[["pin",["chain"]],["context"],["chain"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",98,[[["pin",["chain"]],["usize"],["chain"]]]],[11,"poll_fill_buf","","",102,[[["pin",["empty"]],["context"],["empty"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",102,[[["pin",["empty"]],["usize"],["empty"]]]],[11,"poll_fill_buf","futures::stream","",205,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",205,[[["pin",["intoasyncread"]],["usize"],["intoasyncread"]]]],[11,"poll_fill_buf","futures::io","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",96,[[["pin",["bufwriter"]],["bufwriter"],["usize"]]]],[11,"poll_fill_buf","","",94,[[["context"],["pin",["allowstdio"]],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",94,[[["usize"],["pin",["allowstdio"]],["allowstdio"]]]],[11,"poll_fill_buf","","",117,[[["context"],["take"],["pin",["take"]]],[["poll",["result"]],["result",["error"]]]]],[11,"consume","","",117,[[["take"],["usize"],["pin",["take"]]]]],[11,"poll_ready","futures::stream","",157,[[["pin",["fuse"]],["context"],["fuse"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",157,[[["pin",["fuse"]],["item"],["fuse"]],["result"]]],[11,"poll_flush","","",157,[[["pin",["fuse"]],["context"],["fuse"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",157,[[["pin",["fuse"]],["context"],["fuse"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",164,[[["peekable"],["pin",["peekable"]],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",164,[[["peekable"],["pin",["peekable"]],["item"]],["result"]]],[11,"poll_flush","","",164,[[["peekable"],["pin",["peekable"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",164,[[["peekable"],["pin",["peekable"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",188,[[["context"],["pin",["intostream"]],["intostream"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",188,[[["item"],["pin",["intostream"]],["intostream"]],["result"]]],[11,"poll_flush","","",188,[[["context"],["pin",["intostream"]],["intostream"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",188,[[["context"],["pin",["intostream"]],["intostream"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",197,[[["pin",["buffered"]],["buffered"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",197,[[["pin",["buffered"]],["buffered"],["item"]],["result"]]],[11,"poll_flush","","",197,[[["pin",["buffered"]],["buffered"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",197,[[["pin",["buffered"]],["buffered"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",135,[[["drain"],["context"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",135,[[["drain"],["t"],["pin",["drain"]]],["result"]]],[11,"poll_flush","","",135,[[["drain"],["context"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",135,[[["drain"],["context"],["pin",["drain"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::stream","",181,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",181,[[["tryfilter"],["pin",["tryfilter"]],["item"]],["result"]]],[11,"poll_flush","","",181,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",181,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",152,[[["context"],["filtermap"],["pin",["filtermap"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",152,[[["filtermap"],["pin",["filtermap"]],["item"]],["result"]]],[11,"poll_flush","","",152,[[["context"],["filtermap"],["pin",["filtermap"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",152,[[["context"],["filtermap"],["pin",["filtermap"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",187,[[["pin",["tryskipwhile"]],["tryskipwhile"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",187,[[["pin",["tryskipwhile"]],["tryskipwhile"],["item"]],["result"]]],[11,"poll_flush","","",187,[[["pin",["tryskipwhile"]],["tryskipwhile"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",187,[[["pin",["tryskipwhile"]],["tryskipwhile"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",189,[[["pin",["chunks"]],["chunks"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",189,[[["pin",["chunks"]],["chunks"],["item"]],["result"]]],[11,"poll_flush","","",189,[[["pin",["chunks"]],["chunks"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",189,[[["pin",["chunks"]],["chunks"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",172,[[["context"],["pin",["andthen"]],["andthen"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",172,[[["pin",["andthen"]],["andthen"],["item"]],["result"]]],[11,"poll_flush","","",172,[[["context"],["pin",["andthen"]],["andthen"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",172,[[["context"],["pin",["andthen"]],["andthen"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",170,[[["pin",["then"]],["then"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",170,[[["pin",["then"]],["then"],["item"]],["result"]]],[11,"poll_flush","","",170,[[["pin",["then"]],["then"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",170,[[["pin",["then"]],["then"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",174,[[["mapok"],["context"],["pin",["mapok"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",174,[[["mapok"],["item"],["pin",["mapok"]]],["result"]]],[11,"poll_flush","","",174,[[["mapok"],["context"],["pin",["mapok"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",174,[[["mapok"],["context"],["pin",["mapok"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",196,[[["pin",["bufferunordered"]],["bufferunordered"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",196,[[["pin",["bufferunordered"]],["bufferunordered"],["item"]],["result"]]],[11,"poll_flush","","",196,[[["pin",["bufferunordered"]],["bufferunordered"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",196,[[["pin",["bufferunordered"]],["bufferunordered"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",150,[[["context"],["pin",["enumerate"]],["enumerate"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",150,[[["item"],["pin",["enumerate"]],["enumerate"]],["result"]]],[11,"poll_flush","","",150,[[["context"],["pin",["enumerate"]],["enumerate"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",150,[[["context"],["pin",["enumerate"]],["enumerate"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",151,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",151,[[["item"],["pin",["filter"]],["filter"]],["result"]]],[11,"poll_flush","","",151,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",151,[[["context"],["pin",["filter"]],["filter"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::io","",104,[[["context"],["intosink"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",104,[[["intosink"],["pin",["intosink"]],["item"]],["result"]]],[11,"poll_flush","","",104,[[["context"],["intosink"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",104,[[["context"],["intosink"],["pin",["intosink"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",203,[[["trybufferunordered"],["context"],["pin",["trybufferunordered"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",203,[[["trybufferunordered"],["item"],["pin",["trybufferunordered"]]],["result"]]],[11,"poll_flush","","",203,[[["trybufferunordered"],["context"],["pin",["trybufferunordered"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",203,[[["trybufferunordered"],["context"],["pin",["trybufferunordered"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",178,[[["context"],["pin",["inspecterr"]],["inspecterr"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",178,[[["pin",["inspecterr"]],["inspecterr"],["item"]],["result"]]],[11,"poll_flush","","",178,[[["context"],["pin",["inspecterr"]],["inspecterr"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",178,[[["context"],["pin",["inspecterr"]],["inspecterr"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",175,[[["pin",["maperr"]],["context"],["maperr"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",175,[[["pin",["maperr"]],["item"],["maperr"]],["result"]]],[11,"poll_flush","","",175,[[["pin",["maperr"]],["context"],["maperr"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",175,[[["pin",["maperr"]],["context"],["maperr"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",173,[[["context"],["pin",["errinto"]],["errinto"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",173,[[["pin",["errinto"]],["errinto"],["item"]],["result"]]],[11,"poll_flush","","",173,[[["context"],["pin",["errinto"]],["errinto"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",173,[[["context"],["pin",["errinto"]],["errinto"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",169,[[["context"],["pin",["takewhile"]],["takewhile"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",169,[[["pin",["takewhile"]],["takewhile"],["item"]],["result"]]],[11,"poll_flush","","",169,[[["context"],["pin",["takewhile"]],["takewhile"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",169,[[["context"],["pin",["takewhile"]],["takewhile"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",153,[[["context"],["pin",["flatten"]],["flatten"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",153,[[["pin",["flatten"]],["flatten"],["item"]],["result"]]],[11,"poll_flush","","",153,[[["context"],["pin",["flatten"]],["flatten"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",153,[[["context"],["pin",["flatten"]],["flatten"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",177,[[["context"],["inspectok"],["pin",["inspectok"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",177,[[["item"],["inspectok"],["pin",["inspectok"]]],["result"]]],[11,"poll_flush","","",177,[[["context"],["inspectok"],["pin",["inspectok"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",177,[[["context"],["inspectok"],["pin",["inspectok"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::sink","",137,[[["buffer"],["pin",["buffer"]],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",137,[[["buffer"],["pin",["buffer"]],["item"]],["result"]]],[11,"poll_flush","","",137,[[["buffer"],["pin",["buffer"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",137,[[["buffer"],["pin",["buffer"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",167,[[["pin",["skipwhile"]],["context"],["skipwhile"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",167,[[["pin",["skipwhile"]],["item"],["skipwhile"]],["result"]]],[11,"poll_flush","","",167,[[["pin",["skipwhile"]],["context"],["skipwhile"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",167,[[["pin",["skipwhile"]],["context"],["skipwhile"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",159,[[["inspect"],["context"],["pin",["inspect"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",159,[[["inspect"],["item"],["pin",["inspect"]]],["result"]]],[11,"poll_flush","","",159,[[["inspect"],["context"],["pin",["inspect"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",159,[[["inspect"],["context"],["pin",["inspect"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",183,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",183,[[["pin",["tryflatten"]],["item"],["tryflatten"]],["result"]]],[11,"poll_flush","","",183,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",183,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",200,[[["pin",["splitsink"]],["splitsink"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",200,[[["pin",["splitsink"]],["splitsink"],["item"]],["result"]]],[11,"poll_flush","","",200,[[["pin",["splitsink"]],["splitsink"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",200,[[["pin",["splitsink"]],["splitsink"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",165,[[["pin",["scan"]],["scan"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",165,[[["pin",["scan"]],["scan"],["item"]],["result"]]],[11,"poll_flush","","",165,[[["pin",["scan"]],["scan"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",165,[[["pin",["scan"]],["scan"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",160,[[["pin",["map"]],["map"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",160,[[["pin",["map"]],["map"],["item"]],["result"]]],[11,"poll_flush","","",160,[[["pin",["map"]],["map"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",160,[[["pin",["map"]],["map"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",176,[[["context"],["pin",["orelse"]],["orelse"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",176,[[["pin",["orelse"]],["orelse"],["item"]],["result"]]],[11,"poll_flush","","",176,[[["context"],["pin",["orelse"]],["orelse"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",176,[[["context"],["pin",["orelse"]],["orelse"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::sink","",133,[[["context"],["pin",["with"]],["with"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",133,[[["u"],["pin",["with"]],["with"]],["result"]]],[11,"poll_flush","","",133,[[["context"],["pin",["with"]],["with"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",133,[[["context"],["pin",["with"]],["with"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",131,[[["pin",["sinkerrinto"]],["context"],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",131,[[["pin",["sinkerrinto"]],["item"],["sinkerrinto"]],["result"]]],[11,"poll_flush","","",131,[[["pin",["sinkerrinto"]],["context"],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",131,[[["pin",["sinkerrinto"]],["context"],["sinkerrinto"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",182,[[["context"],["pin",["tryfiltermap"]],["tryfiltermap"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",182,[[["pin",["tryfiltermap"]],["tryfiltermap"],["item"]],["result"]]],[11,"poll_flush","","",182,[[["context"],["pin",["tryfiltermap"]],["tryfiltermap"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",182,[[["context"],["pin",["tryfiltermap"]],["tryfiltermap"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",168,[[["take"],["pin",["take"]],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",168,[[["take"],["pin",["take"]],["item"]],["result"]]],[11,"poll_flush","","",168,[[["take"],["pin",["take"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",168,[[["take"],["pin",["take"]],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::sink","",134,[[["pin",["fanout"]],["fanout"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",134,[[["pin",["fanout"]],["fanout"],["item"]],["result"]]],[11,"poll_flush","","",134,[[["pin",["fanout"]],["fanout"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",134,[[["pin",["fanout"]],["fanout"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::future","",70,[[["flattensink"],["context"],["pin",["flattensink"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",70,[[["flattensink"],["item"],["pin",["flattensink"]]],["result"]]],[11,"poll_flush","","",70,[[["flattensink"],["context"],["pin",["flattensink"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",70,[[["flattensink"],["context"],["pin",["flattensink"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","futures::stream","",166,[[["context"],["skip"],["pin",["skip"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",166,[[["item"],["skip"],["pin",["skip"]]],["result"]]],[11,"poll_flush","","",166,[[["context"],["skip"],["pin",["skip"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",166,[[["context"],["skip"],["pin",["skip"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::future","",77,[[["tryflattenstream"],["context"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",77,[[["tryflattenstream"],["item"],["pin",["tryflattenstream"]]],["result"]]],[11,"poll_flush","","",77,[[["tryflattenstream"],["context"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",77,[[["tryflattenstream"],["context"],["pin",["tryflattenstream"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",5,[[["pin",["either"]],["item"],["either"]],["result"]]],[11,"poll_flush","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures::sink","",132,[[["context"],["sinkmaperr"],["pin",["sinkmaperr"]]],[["result"],["poll",["result"]]]]],[11,"start_send","","",132,[[["item"],["sinkmaperr"],["pin",["sinkmaperr"]]],["result"]]],[11,"poll_flush","","",132,[[["context"],["sinkmaperr"],["pin",["sinkmaperr"]]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",132,[[["context"],["sinkmaperr"],["pin",["sinkmaperr"]]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",136,[[["context"],["pin",["withflatmap"]],["withflatmap"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",136,[[["u"],["pin",["withflatmap"]],["withflatmap"]],["result"]]],[11,"poll_flush","","",136,[[["context"],["pin",["withflatmap"]],["withflatmap"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",136,[[["context"],["pin",["withflatmap"]],["withflatmap"]],[["result"],["poll",["result"]]]]],[11,"partial_cmp","futures::io","",94,[[["allowstdio"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"le","","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"gt","","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"ge","","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"as_mut","","",118,[[["self"]]]],[11,"next","futures::stream::futures_unordered","",195,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",195,[[["self"]]]],[11,"next","","",194,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",194,[[["self"]]]],[11,"next","","",193,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",193,[[["self"]]]],[11,"next","","",192,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",192,[[["self"]]]],[11,"fmt","futures::future","",86,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","futures::future","",44,[[["pin",["lazy"]],["context"],["lazy"]],["poll"]]],[11,"poll","","",79,[[["context"],["pin",["joinall"]],["joinall"]],["poll"]]],[11,"poll","futures::io","",101,[[["pin",["copybuf"]],["context"],["copybuf"]],["poll"]]],[11,"poll","futures::stream","",148,[[["context"],["collect"],["pin",["collect"]]],["poll"]]],[11,"poll","","",161,[[["pin",["next"]],["next"],["context"]],["poll"]]],[11,"poll","futures::future","",64,[[["pin",["map"]],["context"],["map"]],["poll"]]],[11,"poll","futures::io","",112,[[["context"],["pin",["readuntil"]],["readuntil"]],["poll"]]],[11,"poll","","",109,[[["context"],["readline"],["pin",["readline"]]],["poll"]]],[11,"poll","futures::stream","",155,[[["pin",["forward"]],["context"],["forward"]],["poll"]]],[11,"poll","futures::future","",61,[[["pin",["fuse"]],["context"],["fuse"]],["poll"]]],[11,"poll","","",50,[[["join4"],["context"],["pin",["join4"]]],["poll"]]],[11,"poll","futures::io","",100,[[["context"],["pin",["copy"]],["copy"]],["poll"]]],[11,"poll","futures::stream","",162,[[["context"],["pin",["selectnextsome"]],["selectnextsome"]],["poll"]]],[11,"poll","futures::io","",107,[[["context"],["pin",["readexact"]],["readexact"]],["poll"]]],[11,"poll","futures::stream","",179,[[["context"],["pin",["trynext"]],["trynext"]],["poll"]]],[11,"poll","futures::future","",83,[[["pin",["abortable"]],["context"],["abortable"]],["poll"]]],[11,"poll","","",67,[[["context"],["pin",["nevererror"]],["nevererror"]],["poll"]]],[11,"poll","futures::io","",110,[[["context"],["readtoend"],["pin",["readtoend"]]],["poll"]]],[11,"poll","","",122,[[["context"],["pin",["writevectored"]],["writevectored"]],["poll"]]],[11,"poll","futures::future","",66,[[["uniterror"],["pin",["uniterror"]],["context"]],[["poll",["result"]],["result"]]]],[11,"poll","","",68,[[["pin",["andthen"]],["context"],["andthen"]],["poll"]]],[11,"poll","futures::stream","",186,[[["tryfold"],["pin",["tryfold"]],["context"]],["poll"]]],[11,"poll","futures::future","",57,[[["tryselect"],["context"],["pin",["tryselect"]]],["poll"]]],[11,"poll","","",82,[[["pin",["selectok"]],["context"],["selectok"]],["poll"]]],[11,"poll","futures::stream","",158,[[["context"],["streamfuture"],["pin",["streamfuture"]]],["poll"]]],[11,"poll","futures::future","",73,[[["context"],["mapok"],["pin",["mapok"]]],["poll"]]],[11,"poll","futures::stream","",149,[[["context"],["concat"],["pin",["concat"]]],["poll"]]],[11,"poll","futures::sink","",127,[[["pin",["close"]],["close"],["context"]],["poll"]]],[11,"poll","futures::future","",60,[[["flatten"],["pin",["flatten"]],["context"]],["poll"]]],[11,"poll","futures::io","",115,[[["context"],["pin",["seek"]],["seek"]],["poll"]]],[11,"poll","futures::future","",65,[[["context"],["pin",["then"]],["then"]],["poll"]]],[11,"poll","futures::stream","",180,[[["pin",["tryforeach"]],["context"],["tryforeach"]],["poll"]]],[11,"poll","","",163,[[["peek"],["pin",["peek"]],["context"]],["poll"]]],[11,"poll","","",185,[[["context"],["tryconcat"],["pin",["tryconcat"]]],["poll"]]],[11,"poll","","",198,[[["foreachconcurrent"],["context"],["pin",["foreachconcurrent"]]],["poll"]]],[11,"poll","futures::future","",58,[[["context"],["pin",["optionfuture"]],["optionfuture"]],["poll"]]],[11,"poll","futures::io","",119,[[["context"],["write"],["pin",["write"]]],["poll"]]],[11,"poll","futures::future","",72,[[["context"],["pin",["maperr"]],["maperr"]],["poll"]]],[11,"poll","","",88,[[["context"],["pin",["remotehandle"]],["remotehandle"]],["poll"]]],[11,"poll","","",54,[[["pin",["tryjoin3"]],["tryjoin3"],["context"]],["poll"]]],[11,"poll","","",62,[[["inspect"],["pin",["inspect"]],["context"]],["poll"]]],[11,"poll","","",52,[[["select"],["context"],["pin",["select"]]],["poll"]]],[11,"poll","","",53,[[["context"],["pin",["tryjoin"]],["tryjoin"]],["poll"]]],[11,"poll","","",51,[[["pin",["join5"]],["join5"],["context"]],["poll"]]],[11,"poll","futures::io","",113,[[["pin",["readvectored"]],["context"],["readvectored"]],["poll"]]],[11,"poll","futures::stream","",154,[[["fold"],["context"],["pin",["fold"]]],["poll"]]],[11,"poll","futures::sink","",130,[[["sendall"],["context"],["pin",["sendall"]]],["poll"]]],[11,"poll","futures::future","",74,[[["context"],["orelse"],["pin",["orelse"]]],["poll"]]],[11,"poll","futures::sink","",129,[[["context"],["pin",["send"]],["send"]],["poll"]]],[11,"poll","futures::future","",87,[[["context"],["remote"],["pin",["remote"]]],["poll"]]],[11,"poll","","",78,[[["unwraporelse"],["context"],["pin",["unwraporelse"]]],["poll"]]],[11,"poll","","",49,[[["context"],["pin",["join3"]],["join3"]],["poll"]]],[11,"poll","","",71,[[["context"],["intofuture"],["pin",["intofuture"]]],["poll"]]],[11,"poll","","",69,[[["errinto"],["context"],["pin",["errinto"]]],["poll"]]],[11,"poll","","",75,[[["context"],["pin",["inspectok"]],["inspectok"]],["poll"]]],[11,"poll","","",5,[[["pin",["either"]],["context"],["either"]],["poll"]]],[11,"poll","futures::stream","",204,[[["context"],["pin",["tryforeachconcurrent"]],["tryforeachconcurrent"]],["poll"]]],[11,"poll","futures::future","",4,[[["context"],["maybedone"],["pin",["maybedone"]]],["poll"]]],[11,"poll","","",55,[[["tryjoin4"],["context"],["pin",["tryjoin4"]]],["poll"]]],[11,"poll","","",46,[[["pollfn"],["context"],["pin",["pollfn"]]],["poll"]]],[11,"poll","futures::io","",120,[[["pin",["writeall"]],["writeall"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll","futures::future","",76,[[["pin",["inspecterr"]],["inspecterr"],["context"]],["poll"]]],[11,"poll","","",56,[[["pin",["tryjoin5"]],["context"],["tryjoin5"]],["poll"]]],[11,"poll","","",90,[[["context"],["shared"],["pin",["shared"]]],["poll"]]],[11,"poll","","",89,[[["catchunwind"],["context"],["pin",["catchunwind"]]],["poll"]]],[11,"poll","futures::lock","",125,[[["context"],["pin",["mutexlockfuture"]],["mutexlockfuture"]],["poll"]]],[11,"poll","futures::io","",111,[[["readtostring"],["pin",["readtostring"]],["context"]],["poll"]]],[11,"poll","futures::future","",47,[[["pin",["ready"]],["context"],["ready"]],["poll"]]],[11,"poll","futures::stream","",184,[[["pin",["trycollect"]],["context"],["trycollect"]],["poll"]]],[11,"poll","futures::io","",103,[[["context"],["pin",["flush"]],["flush"]],["poll"]]],[11,"poll","","",106,[[["context"],["pin",["read"]],["read"]],["poll"]]],[11,"poll","futures::future","",80,[[["selectall"],["context"],["pin",["selectall"]]],["poll"]]],[11,"poll","futures::sink","",128,[[["context"],["flush"],["pin",["flush"]]],["poll"]]],[11,"poll","futures::io","",99,[[["pin",["close"]],["context"],["close"]],["poll"]]],[11,"poll","futures::future","",45,[[["context"],["pending"],["pin",["pending"]]],["poll"]]],[11,"poll","","",81,[[["tryjoinall"],["pin",["tryjoinall"]],["context"]],["poll"]]],[11,"poll","futures::stream","",156,[[["foreach"],["context"],["pin",["foreach"]]],["poll"]]],[11,"poll","futures::future","",48,[[["context"],["pin",["join"]],["join"]],["poll"]]],[11,"poll_seek","futures::io","",97,[[["seekfrom"],["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","",94,[[["seekfrom"],["pin",["allowstdio"]],["allowstdio"],["context"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",96,[[["pin",["bufwriter"]],["seekfrom"],["bufwriter"],["context"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",95,[[["pin",["bufreader"]],["seekfrom"],["context"],["bufreader"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"poll_seek","futures::future","",5,[[["pin",["either"]],["seekfrom"],["either"],["context"]],[["poll",["result"]],["result",["u64","error"]]]]],[11,"drop","futures::lock","",123,[[["self"]]]],[11,"drop","futures::future","",90,[[["self"]]]],[11,"drop","futures::stream","",191,[[["self"]]]],[11,"drop","futures::lock","",126,[[["self"]]]],[11,"drop","","",125,[[["self"]]]],[11,"deref_mut","","",123,[[["self"]],["u"]]],[11,"deref_mut","","",126,[[["self"]],["t"]]],[11,"eq","futures::future","",86,[[["self"],["aborted"]],["bool"]]],[11,"eq","futures::io","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"ne","","",94,[[["allowstdio"],["self"]],["bool"]]],[11,"is_terminated","futures::future","",69,[[["self"]],["bool"]]],[11,"is_terminated","","",75,[[["self"]],["bool"]]],[11,"is_terminated","","",44,[[["self"]],["bool"]]],[11,"is_terminated","","",60,[[["self"]],["bool"]]],[11,"is_terminated","","",68,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",161,[[["self"]],["bool"]]],[11,"is_terminated","","",204,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",51,[[["self"]],["bool"]]],[11,"is_terminated","","",47,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",156,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",72,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",162,[[["self"]],["bool"]]],[11,"is_terminated","","",198,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",73,[[["self"]],["bool"]]],[11,"is_terminated","","",49,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",148,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",58,[[["self"]],["bool"]]],[11,"is_terminated","","",76,[[["self"]],["bool"]]],[11,"is_terminated","futures::lock","",125,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",61,[[["self"]],["bool"]]],[11,"is_terminated","","",50,[[["self"]],["bool"]]],[11,"is_terminated","","",78,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",163,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",52,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",154,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",48,[[["self"]],["bool"]]],[11,"is_terminated","","",62,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",155,[[["self"]],["bool"]]],[11,"is_terminated","","",158,[[["self"]],["bool"]]],[11,"is_terminated","","",184,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",67,[[["self"]],["bool"]]],[11,"is_terminated","","",66,[[["self"]],["bool"]]],[11,"is_terminated","","",74,[[["self"]],["bool"]]],[11,"is_terminated","","",71,[[["self"]],["bool"]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",179,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",90,[[["self"]],["bool"]]],[11,"is_terminated","","",45,[[["self"]],["bool"]]],[11,"is_terminated","","",64,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",186,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",65,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",149,[[["self"]],["bool"]]],[11,"cmp","futures::io","",94,[[["allowstdio"],["self"]],["ordering"]]],[11,"fill_buf","","",94,[[["self"]],[["error"],["result",["error"]]]]],[11,"consume","","",94,[[["self"],["usize"]]]],[11,"spawn_local_obj","futures::stream","",191,[[["self"],["localfutureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"read","futures::io","",94,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_vectored","","",94,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_end","","",94,[[["self"],["vec"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_string","","",94,[[["string"],["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_exact","","",94,[[["self"]],[["error"],["result",["error"]]]]],[11,"clone","futures::future","",45,[[["self"]],["pending"]]],[11,"clone","futures::io","",97,[[["self"]],["cursor"]]],[11,"clone","","",94,[[["self"]],["allowstdio"]]],[11,"clone","futures::future","",90,[[["self"]],["shared"]]],[11,"clone","","",5,[[["self"]],["either"]]],[11,"clone","","",47,[[["self"]],["ready"]]],[11,"clone","","",83,[[["self"]],["abortable"]]],[11,"clone","","",86,[[["self"]],["aborted"]]],[11,"clone","","",58,[[["self"]],["optionfuture"]]],[11,"clone","futures::sink","",132,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::future","",84,[[["self"]],["aborthandle"]]],[11,"fmt","futures::stream::futures_unordered","",195,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",194,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",94,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",87,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",171,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",123,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",64,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",107,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",169,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",204,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",187,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",124,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",126,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",145,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",120,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",183,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",192,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",197,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",81,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",162,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",111,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",143,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",150,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",132,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",196,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",60,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",144,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",104,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",149,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",95,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",184,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",148,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",186,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",86,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",175,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",114,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",203,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",119,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",158,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",180,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",67,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",98,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",136,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",116,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",139,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",156,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",154,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",127,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",173,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",117,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",202,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",80,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",106,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",84,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",131,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",179,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",191,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",166,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",82,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",108,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",57,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",153,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",133,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::lock","",125,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",90,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",128,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",164,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",178,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",155,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",109,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",190,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",134,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",138,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",140,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",96,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",72,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",174,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",83,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",105,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",157,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",135,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",65,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",163,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",130,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",129,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",112,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",118,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",142,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",110,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",122,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream::futures_unordered","",193,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",113,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",159,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",121,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",70,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",151,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",141,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",172,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",188,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",160,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",185,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",165,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",189,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",68,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",182,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",78,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",181,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",199,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",89,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",97,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",167,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",200,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",161,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",198,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",201,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",152,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::io","",115,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::sink","",137,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",168,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::future","",88,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::stream","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_next","","",141,[[["context"],["pin",["pending"]],["pending"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",141,[[["self"]]]],[11,"poll_next","","",176,[[["context"],["pin",["orelse"]],["orelse"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",176,[[["self"]]]],[11,"poll_next","futures::sink","",137,[[["pin",["buffer"]],["buffer"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",137,[[["self"]]]],[11,"poll_next","futures::stream","",182,[[["tryfiltermap"],["pin",["tryfiltermap"]],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"size_hint","","",182,[[["self"]]]],[11,"poll_next","futures::sink","",136,[[["pin",["withflatmap"]],["withflatmap"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",136,[[["self"]]]],[11,"poll_next","futures::stream","",197,[[["context"],["pin",["buffered"]],["buffered"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",197,[[["self"]]]],[11,"poll_next","","",199,[[["context"],["pin",["splitstream"]],["splitstream"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",175,[[["pin",["maperr"]],["context"],["maperr"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",175,[[["self"]]]],[11,"poll_next","futures::future","",63,[[["intostream"],["pin",["intostream"]],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",63,[[["self"]]]],[11,"poll_next","futures::stream","",151,[[["context"],["filter"],["pin",["filter"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",151,[[["self"]]]],[11,"poll_next","","",146,[[["pin",["tryunfold"]],["context"],["tryunfold"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_next","","",138,[[["pin",["iter"]],["iter"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",138,[[["self"]]]],[11,"poll_next","","",152,[[["filtermap"],["context"],["pin",["filtermap"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",152,[[["self"]]]],[11,"poll_next","","",147,[[["context"],["pin",["chain"]],["chain"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",147,[[["self"]]]],[11,"poll_next","futures::sink","",132,[[["context"],["pin",["sinkmaperr"]],["sinkmaperr"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",132,[[["self"]]]],[11,"poll_next","futures::stream","",177,[[["pin",["inspectok"]],["inspectok"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",177,[[["self"]]]],[11,"poll_next","futures::sink","",133,[[["context"],["with"],["pin",["with"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",133,[[["self"]]]],[11,"poll_next","futures::stream","",190,[[["context"],["pin",["futuresordered"]],["futuresordered"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",190,[[["self"]]]],[11,"poll_next","","",203,[[["context"],["pin",["trybufferunordered"]],["trybufferunordered"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",164,[[["peekable"],["pin",["peekable"]],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",164,[[["self"]]]],[11,"poll_next","","",171,[[["context"],["zip"],["pin",["zip"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",171,[[["self"]]]],[11,"poll_next","","",174,[[["mapok"],["context"],["pin",["mapok"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",174,[[["self"]]]],[11,"poll_next","","",140,[[["context"],["pin",["empty"]],["empty"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",140,[[["self"]]]],[11,"poll_next","","",188,[[["pin",["intostream"]],["context"],["intostream"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",188,[[["self"]]]],[11,"poll_next","","",167,[[["pin",["skipwhile"]],["skipwhile"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",167,[[["self"]]]],[11,"poll_next","futures::future","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",160,[[["context"],["map"],["pin",["map"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",160,[[["self"]]]],[11,"poll_next","","",178,[[["inspecterr"],["pin",["inspecterr"]],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",178,[[["self"]]]],[11,"poll_next","","",144,[[["pin",["select"]],["select"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",139,[[["repeat"],["context"],["pin",["repeat"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",139,[[["self"]]]],[11,"poll_next","","",159,[[["context"],["pin",["inspect"]],["inspect"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",159,[[["self"]]]],[11,"poll_next","","",191,[[["context"],["futuresunordered"],["pin",["futuresunordered"]]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",191,[[["self"]]]],[11,"poll_next","","",166,[[["context"],["pin",["skip"]],["skip"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",166,[[["self"]]]],[11,"poll_next","futures::future","",59,[[["context"],["pin",["flattenstream"]],["flattenstream"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",70,[[["pin",["flattensink"]],["context"],["flattensink"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",169,[[["pin",["takewhile"]],["context"],["takewhile"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",169,[[["self"]]]],[11,"poll_next","futures::future","",77,[[["tryflattenstream"],["context"],["pin",["tryflattenstream"]]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",201,[[["context"],["pin",["selectall"]],["selectall"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",145,[[["context"],["pin",["unfold"]],["unfold"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",150,[[["enumerate"],["pin",["enumerate"]],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",150,[[["self"]]]],[11,"poll_next","","",170,[[["context"],["pin",["then"]],["then"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",170,[[["self"]]]],[11,"poll_next","","",172,[[["pin",["andthen"]],["context"],["andthen"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",172,[[["self"]]]],[11,"poll_next","","",202,[[["catchunwind"],["context"],["pin",["catchunwind"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",202,[[["self"]]]],[11,"poll_next","","",183,[[["pin",["tryflatten"]],["context"],["tryflatten"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",181,[[["context"],["tryfilter"],["pin",["tryfilter"]]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",181,[[["self"]]]],[11,"poll_next","futures::io","",105,[[["context"],["lines"],["pin",["lines"]]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures::stream","",168,[[["take"],["pin",["take"]],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",168,[[["self"]]]],[11,"poll_next","","",165,[[["context"],["pin",["scan"]],["scan"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",165,[[["self"]]]],[11,"poll_next","","",173,[[["errinto"],["context"],["pin",["errinto"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",173,[[["self"]]]],[11,"poll_next","futures::sink","",131,[[["context"],["pin",["sinkerrinto"]],["sinkerrinto"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",131,[[["self"]]]],[11,"poll_next","futures::stream","",157,[[["pin",["fuse"]],["context"],["fuse"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",157,[[["self"]]]],[11,"poll_next","","",189,[[["pin",["chunks"]],["context"],["chunks"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",189,[[["self"]]]],[11,"poll_next","","",142,[[["context"],["once"],["pin",["once"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",142,[[["self"]]]],[11,"poll_next","","",143,[[["context"],["pin",["pollfn"]],["pollfn"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",196,[[["context"],["bufferunordered"],["pin",["bufferunordered"]]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",196,[[["self"]]]],[11,"poll_next","","",153,[[["context"],["flatten"],["pin",["flatten"]]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",187,[[["context"],["pin",["tryskipwhile"]],["tryskipwhile"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",187,[[["self"]]]],[11,"deref","futures::lock","",123,[[["self"]],["u"]]],[11,"deref","","",126,[[["self"]],["t"]]],[11,"as_ref","futures::io","",118,[[["self"]]]],[11,"is_terminated","futures::sink","",131,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",174,[[["self"]],["bool"]]],[11,"is_terminated","","",188,[[["self"]],["bool"]]],[11,"is_terminated","","",167,[[["self"]],["bool"]]],[11,"is_terminated","","",183,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",136,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",159,[[["self"]],["bool"]]],[11,"is_terminated","","",196,[[["self"]],["bool"]]],[11,"is_terminated","","",170,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",77,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",160,[[["self"]],["bool"]]],[11,"is_terminated","","",144,[[["self"]],["bool"]]],[11,"is_terminated","","",140,[[["self"]],["bool"]]],[11,"is_terminated","","",201,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",132,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",189,[[["self"]],["bool"]]],[11,"is_terminated","","",168,[[["self"]],["bool"]]],[11,"is_terminated","","",145,[[["self"]],["bool"]]],[11,"is_terminated","","",202,[[["self"]],["bool"]]],[11,"is_terminated","","",177,[[["self"]],["bool"]]],[11,"is_terminated","","",187,[[["self"]],["bool"]]],[11,"is_terminated","","",178,[[["self"]],["bool"]]],[11,"is_terminated","","",169,[[["self"]],["bool"]]],[11,"is_terminated","","",173,[[["self"]],["bool"]]],[11,"is_terminated","","",182,[[["self"]],["bool"]]],[11,"is_terminated","","",150,[[["self"]],["bool"]]],[11,"is_terminated","","",171,[[["self"]],["bool"]]],[11,"is_terminated","","",139,[[["self"]],["bool"]]],[11,"is_terminated","","",164,[[["self"]],["bool"]]],[11,"is_terminated","","",147,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",172,[[["self"]],["bool"]]],[11,"is_terminated","","",157,[[["self"]],["bool"]]],[11,"is_terminated","","",141,[[["self"]],["bool"]]],[11,"is_terminated","","",153,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",59,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",175,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",63,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",166,[[["self"]],["bool"]]],[11,"is_terminated","","",142,[[["self"]],["bool"]]],[11,"is_terminated","futures::sink","",137,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",151,[[["self"]],["bool"]]],[11,"is_terminated","futures::future","",70,[[["self"]],["bool"]]],[11,"is_terminated","futures::stream","",176,[[["self"]],["bool"]]],[11,"is_terminated","","",181,[[["self"]],["bool"]]],[11,"is_terminated","","",191,[[["self"]],["bool"]]],[11,"is_terminated","","",152,[[["self"]],["bool"]]],[11,"is_terminated","","",165,[[["self"]],["bool"]]],[11,"default","futures::lock","",124,[[],["mutex"]]],[11,"default","futures::stream","",201,[[],["selectall"]]],[11,"default","","",190,[[],["futuresordered"]]],[11,"default","futures::io","",97,[[],["cursor"]]],[11,"default","futures::stream","",191,[[],["futuresunordered"]]],[11,"from","futures::future","",58,[[["option"]],["optionfuture"]]],[11,"from","futures::lock","",124,[[["t"]],["mutex"]]],[11,"from_iter","futures::stream","",191,[[["i"]],["futuresunordered"]]],[11,"from_iter","","",190,[[["t"]],["futuresordered"]]],[11,"from_iter","","",201,[[["t"]],["selectall"]]],[11,"from_iter","futures::future","",82,[[["t"]],["selectok"]]],[11,"from_iter","","",79,[[["t"]],["joinall"]]],[11,"from_iter","","",81,[[["t"]],["tryjoinall"]]],[11,"from_iter","","",80,[[["t"]],["selectall"]]],[11,"poll_read","futures::io","",102,[[["pin",["empty"]],["context"],["empty"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::future","",5,[[["pin",["either"]],["either"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",5,[[["pin",["either"]],["either"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::io","",108,[[["readhalf"],["context"],["pin",["readhalf"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",108,[[["readhalf"],["context"],["pin",["readhalf"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",98,[[["pin",["chain"]],["context"],["chain"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",98,[[["pin",["chain"]],["context"],["chain"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",114,[[["pin",["repeat"]],["repeat"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",114,[[["pin",["repeat"]],["repeat"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","","",117,[[["take"],["pin",["take"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::stream","",205,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read","futures::io","",94,[[["pin",["allowstdio"]],["allowstdio"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","",94,[[["pin",["allowstdio"]],["allowstdio"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"write","","",94,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"write_vectored","","",94,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"flush","","",94,[[["self"]],[["error"],["result",["error"]]]]],[11,"write_all","","",94,[[["self"]],[["error"],["result",["error"]]]]],[11,"write_fmt","","",94,[[["self"],["arguments"]],[["error"],["result",["error"]]]]],[11,"spawn_obj","futures::stream","",191,[[["self"],["futureobj"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"poll_write","futures::io","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",96,[[["pin",["bufwriter"]],["bufwriter"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",121,[[["writehalf"],["pin",["writehalf"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",121,[[["writehalf"],["pin",["writehalf"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",121,[[["context"],["writehalf"],["pin",["writehalf"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",121,[[["context"],["writehalf"],["pin",["writehalf"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",94,[[["pin",["allowstdio"]],["allowstdio"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",94,[[["pin",["allowstdio"]],["allowstdio"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",94,[[["context"],["pin",["allowstdio"]],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",94,[[["context"],["pin",["allowstdio"]],["allowstdio"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::stream","",205,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",205,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",205,[[["pin",["intoasyncread"]],["context"],["intoasyncread"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::io","",97,[[["cursor"],["pin",["cursor"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",97,[[["cursor"],["pin",["cursor"]],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",95,[[["pin",["bufreader"]],["context"],["bufreader"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",116,[[["pin",["sink"]],["context"],["sink"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",116,[[["pin",["sink"]],["context"],["sink"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",116,[[["pin",["sink"]],["context"],["sink"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",116,[[["pin",["sink"]],["context"],["sink"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",97,[[["cursor"],["context"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",97,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",97,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",97,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",97,[[["context"],["cursor"],["pin",["cursor"]]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","futures::future","",5,[[["pin",["either"]],["either"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","",5,[[["pin",["either"]],["either"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_close","","",5,[[["pin",["either"]],["context"],["either"]],[["poll",["result"]],["result",["error"]]]]],[11,"from","futures::task","",43,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",43,[[["box",["future"]],["future"]],["localfutureobj"]]],[11,"from","","",43,[[["box"]],["localfutureobj"]]],[11,"from","","",42,[[["box"]],["futureobj"]]],[11,"from","","",42,[[["pin",["box"]],["box"]],["futureobj"]]],[11,"from","","",42,[[["pin",["box"]],["box",["future"]]],["futureobj"]]],[11,"from","","",42,[[["box",["future"]],["future"]],["futureobj"]]],[11,"from","","",43,[[["box",["future"]],["pin",["box"]]],["localfutureobj"]]],[11,"from","","",43,[[["pin",["box"]],["box"]],["localfutureobj"]]],[11,"fmt","","",210,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",211,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",210,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",42,[[["pin",["futureobj"]],["context"],["futureobj"]],["poll"]]],[11,"poll","","",43,[[["pin",["localfutureobj"]],["localfutureobj"],["context"]],["poll"]]],[11,"drop","","",43,[[["self"]]]],[11,"deref","","",211,[[["self"]],["waker"]]],[11,"eq","futures::channel::mpsc","",40,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",40,[[["self"],["trysenderror"]],["bool"]]],[11,"eq","","",39,[[["senderror"],["self"]],["bool"]]],[11,"ne","","",39,[[["senderror"],["self"]],["bool"]]],[11,"eq","futures::channel::oneshot","",34,[[["canceled"],["self"]],["bool"]]],[11,"clone","futures::channel::mpsc","",40,[[["self"]],["trysenderror"]]],[11,"clone","","",36,[[["self"]],["unboundedsender"]]],[11,"clone","futures::channel::oneshot","",34,[[["self"]],["canceled"]]],[11,"clone","futures::channel::mpsc","",35,[[["self"]],["sender"]]],[11,"clone","","",39,[[["self"]],["senderror"]]],[11,"poll_ready","","",35,[[["sender"],["context"],["pin",["sender"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",35,[[["sender"],["pin",["sender"]],["t"]],["result"]]],[11,"poll_flush","","",35,[[["sender"],["context"],["pin",["sender"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",35,[[["sender"],["context"],["pin",["sender"]]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",36,[[["context"],["unboundedsender"],["pin",["unboundedsender"]]],[["poll",["result"]],["result"]]]],[11,"start_send","","",36,[[["unboundedsender"],["pin",["unboundedsender"]],["t"]],["result"]]],[11,"poll_flush","","",36,[[["context"],["unboundedsender"],["pin",["unboundedsender"]]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",36,[[["context"],["unboundedsender"],["pin",["unboundedsender"]]],[["poll",["result"]],["result"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::oneshot","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::oneshot","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",38,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll_next","","",37,[[["receiver"],["context"],["pin",["receiver"]]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",38,[[["pin",["unboundedreceiver"]],["unboundedreceiver"],["context"]],[["option"],["poll",["option"]]]]],[11,"is_terminated","","",37,[[["self"]],["bool"]]],[11,"is_terminated","","",38,[[["self"]],["bool"]]],[11,"fmt","futures::channel::oneshot","",34,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","futures::channel::mpsc","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","futures::channel::oneshot","",32,[[["receiver"],["pin",["receiver"]],["context"]],[["poll",["result"]],["result",["canceled"]]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","futures::channel::mpsc","",38,[[["self"]]]],[11,"drop","futures::channel::oneshot","",32,[[["self"]]]],[11,"drop","futures::channel::mpsc","",37,[[["self"]]]],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent…",32,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",32,[[["self"]],[["canceled"],["result",["option","canceled"]],["option"]]]],[11,"send","","Completes this oneshot with a successful result.",33,[[["t"]],["result"]]],[11,"poll_canceled","","Polls this `Sender` half to detect whether its associated…",33,[[["context"],["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",33,[[["self"]],["bool"]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this `Sender`, returning the…",35,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"start_send","","Send a message on the channel.",35,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed…",35,[[["context"],["self"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",35,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",35,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",35,[[["self"]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",35,[[["self"],["sender"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",35,[[["self"],["h"]]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",36,[[["context"],["self"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",36,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",36,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",36,[[["self"]]]],[11,"start_send","","Send a message on the channel.",36,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"unbounded_send","","Sends a message along this channel.",36,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",36,[[["self"],["unboundedsender"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",36,[[["self"],["h"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",37,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",37,[[["self"]],[["tryrecverror"],["option"],["result",["option","tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",38,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",38,[[["self"]],[["tryrecverror"],["option"],["result",["option","tryrecverror"]]]]],[11,"is_full","","Returns true if this error is a result of the channel…",39,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",39,[[["self"]],["bool"]]],[11,"is_full","","Returns true if this error is a result of the channel…",40,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",40,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",40,[[],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",40,[[],["senderror"]]],[11,"new","futures::task","Create a `FutureObj` from a custom trait object…",42,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",43,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",43,[[],["futureobj"]]],[11,"output_mut","futures::future","Returns an [`Option`] containing a mutable reference to…",4,[[["maybedone"],["pin",["maybedone"]]],["option"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without…",4,[[["maybedone"],["pin",["maybedone"]]],["option"]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",47,[[],["t"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,[[],["t"]]],[11,"terminated","","Creates a new `Fuse`-wrapped future which is already…",61,[[],["fuse"]]],[11,"new","","Creates a new `Abortable` future using an existing…",83,[[["abortregistration"],["fut"]],["abortable"]]],[11,"new_pair","","Creates an (`AbortHandle`, `AbortRegistration`) pair which…",84,[[]]],[11,"abort","","Abort the `Abortable` future associated with this handle.",84,[[["self"]]]],[11,"forget","","Drops this handle without canceling the underlying future.",88,[[]]],[11,"peek","","Returns [`Some`] containing a reference to this…",90,[[["self"]],["option"]]],[11,"new","futures::io","Creates a new I/O error from a known kind of error as well…",91,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",91,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",91,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",91,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",91,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",91,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",91,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",91,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",92,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",92,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",93,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",93,[[["usize"]]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",94,[[["t"]],["allowstdio"]]],[11,"get_ref","","Returns a reference to the contained IO object.",94,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",94,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",94,[[],["t"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",95,[[["r"]],["bufreader"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",95,[[["usize"],["r"]],["bufreader"]]],[11,"get_ref","","Gets a reference to the underlying reader.",95,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",95,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",95,[[["pin",["bufreader"]],["bufreader"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",95,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",95,[[["self"]]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",96,[[["w"]],["bufwriter"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",96,[[["w"],["usize"]],["bufwriter"]]],[11,"get_ref","","Gets a reference to the underlying writer.",96,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",96,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",96,[[["pin",["bufwriter"]],["bufwriter"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",96,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",96,[[["self"]]]],[11,"new","","Creates a new cursor wrapping the provided underlying…",97,[[["t"]],["cursor"]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",97,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",97,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",97,[[["self"]],["t"]]],[11,"position","","Returns the current position of this cursor.",97,[[["self"]],["u64"]]],[11,"set_position","","Sets the position of this cursor.",97,[[["self"],["u64"]]]],[11,"get_ref","","Gets references to the underlying readers in this `Chain`.",98,[[["self"]]]],[11,"get_mut","","Gets mutable references to the underlying readers in this…",98,[[["self"]]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers…",98,[[["pin",["chain"]],["chain"]]]],[11,"into_inner","","Consumes the `Chain`, returning the wrapped readers.",98,[[]]],[11,"limit","","Returns the remaining number of bytes that can be read…",117,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",117,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",117,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",117,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",117,[[["take"],["pin",["take"]]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",117,[[],["r"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",118,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",118,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",118,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",118,[[],["t"]]],[11,"start","","Returns the starting index of this window into the…",118,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",118,[[["self"]],["usize"]]],[11,"set","","Changes the range of this window to the range specified.",118,[[["self"],["r"]]]],[11,"map","futures::lock","Returns a locked view over a portion of the locked data.",123,[[["mappedmutexguard"],["f"]],["mappedmutexguard"]]],[11,"new","","Creates a new futures-aware mutex.",124,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",124,[[],["t"]]],[11,"try_lock","","Attempt to acquire the lock immediately.",124,[[["self"]],[["mutexguard"],["option",["mutexguard"]]]]],[11,"lock","","Acquire the lock asynchronously.",124,[[["self"]],["mutexlockfuture"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",124,[[["self"]],["t"]]],[11,"map","","Returns a locked view over a portion of the locked data.",126,[[["mutexguard"],["f"]],["mappedmutexguard"]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sink.",131,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",131,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",131,[[["pin",["sinkerrinto"]],["sinkerrinto"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",131,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",132,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",132,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",132,[[["sinkmaperr"],["pin",["sinkmaperr"]]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",132,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",133,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",133,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",133,[[["pin",["with"]],["with"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",133,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sinks.",134,[[["self"]]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",134,[[["self"]]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",134,[[["pin",["fanout"]],["fanout"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",134,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",136,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",136,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",136,[[["pin",["withflatmap"]],["withflatmap"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",136,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",137,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",137,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",137,[[["buffer"],["pin",["buffer"]]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",137,[[],["si"]]],[11,"get_ref","futures::stream","Acquires a reference to the underlying streams that this…",144,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",144,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",144,[[["pin",["select"]],["select"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",144,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",150,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",150,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",150,[[["enumerate"],["pin",["enumerate"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",150,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",151,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",151,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",151,[[["filter"],["pin",["filter"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",151,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",152,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",152,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",152,[[["filtermap"],["pin",["filtermap"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",152,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",153,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",153,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",153,[[["flatten"],["pin",["flatten"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",153,[[],["st"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",157,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",157,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",157,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",157,[[["fuse"],["pin",["fuse"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",157,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",158,[[["self"]],[["option"],["st"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",158,[[["self"]],[["st"],["option"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",158,[[["streamfuture"],["pin",["streamfuture"]]],[["option",["pin"]],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",158,[[],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",159,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",159,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",159,[[["pin",["inspect"]],["inspect"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",159,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",160,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",160,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",160,[[["map"],["pin",["map"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",160,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",164,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",164,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",164,[[["pin",["peekable"]],["peekable"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",164,[[],["st"]]],[11,"peek","","Produces a `Peek` future which retrieves a reference to…",164,[[["pin",["peekable"]],["peekable"]],["peek"]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",164,[[["context"],["pin",["peekable"]],["peekable"]],[["poll",["option"]],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",165,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",165,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",165,[[["pin",["scan"]],["scan"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",165,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",166,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",166,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",166,[[["pin",["skip"]],["skip"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",166,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",167,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",167,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",167,[[["pin",["skipwhile"]],["skipwhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",167,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",168,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",168,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",168,[[["take"],["pin",["take"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",168,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",169,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",169,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",169,[[["pin",["takewhile"]],["takewhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",169,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",170,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",170,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",170,[[["pin",["then"]],["then"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",170,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",171,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",171,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",171,[[["zip"],["pin",["zip"]]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",171,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",172,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",172,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",172,[[["pin",["andthen"]],["andthen"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",172,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",173,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",173,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",173,[[["errinto"],["pin",["errinto"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",173,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",174,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",174,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",174,[[["mapok"],["pin",["mapok"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",174,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",175,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",175,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",175,[[["pin",["maperr"]],["maperr"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",175,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",176,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",176,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",176,[[["pin",["orelse"]],["orelse"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",176,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",177,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",177,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",177,[[["pin",["inspectok"]],["inspectok"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",177,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",178,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",178,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",178,[[["inspecterr"],["pin",["inspecterr"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",178,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",181,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",181,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",181,[[["tryfilter"],["pin",["tryfilter"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",181,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",182,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",182,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",182,[[["tryfiltermap"],["pin",["tryfiltermap"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",182,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",183,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",183,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",183,[[["pin",["tryflatten"]],["tryflatten"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",183,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",187,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",187,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",187,[[["pin",["tryskipwhile"]],["tryskipwhile"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",187,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",188,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",188,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",188,[[["pin",["intostream"]],["intostream"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",188,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",189,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",189,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",189,[[["pin",["chunks"]],["chunks"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",189,[[],["st"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",190,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",190,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",190,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",190,[[["self"],["fut"]]]],[11,"new","","Constructs a new, empty [`FuturesUnordered`].",191,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",191,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures.",191,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",191,[[["self"],["fut"]]]],[11,"iter","","Returns an iterator that allows inspecting each future in…",191,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",191,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in…",191,[[["futuresunordered"],["pin",["futuresunordered"]]],["iterpinmut"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",196,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",196,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",196,[[["bufferunordered"],["pin",["bufferunordered"]]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",196,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",197,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",197,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",197,[[["pin",["buffered"]],["buffered"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",197,[[],["st"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",199,[[["splitsink"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",200,[[["splitstream"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"new","","Constructs a new, empty `SelectAll`",201,[[],["selectall"]]],[11,"len","","Returns the number of streams contained in the set.",201,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no streams",201,[[["self"]],["bool"]]],[11,"push","","Push a stream into the set.",201,[[["self"],["st"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",203,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",203,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",203,[[["pin",["trybufferunordered"]],["trybufferunordered"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",203,[[],["st"]]],[11,"from_waker","futures::task","Create a new `Context` from a `&Waker`.",206,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",206,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",26,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",26,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",26,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",26,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",26,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",26,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",26,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",207,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",207,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",207,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",207,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",208,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",209,[[],["rawwakervtable"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",210,[[],["spawnerror"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",210,[[["self"]],["bool"]]],[11,"new","","Create a new [`WakerRef`] from a [`Waker`] reference.",211,[[["waker"]],["wakerref"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",211,[[["waker"],["manuallydrop",["waker"]]],["wakerref"]]],[11,"new","","Create an `AtomicWaker`.",212,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",212,[[["waker"],["self"]]]],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",212,[[["self"]]]],[11,"take","","Returns the last `Waker` passed to `register`, so that the…",212,[[["self"]],[["waker"],["option",["waker"]]]]]],"p":[[8,"Future"],[8,"TryFuture"],[8,"FusedFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[4,"Either"],[8,"FutureExt"],[8,"TryFutureExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[8,"Stream"],[8,"TryStream"],[8,"Sink"],[8,"SinkExt"],[8,"FusedStream"],[8,"StreamExt"],[8,"TryStreamExt"],[3,"ReuniteError"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"ArcWake"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Lazy"],[3,"Pending"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"OptionFuture"],[3,"FlattenStream"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"Then"],[3,"UnitError"],[3,"NeverError"],[3,"AndThen"],[3,"ErrInto"],[3,"FlattenSink"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"JoinAll"],[3,"SelectAll"],[3,"TryJoinAll"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortHandle"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Remote"],[3,"RemoteHandle"],[3,"CatchUnwind"],[3,"Shared"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Cursor"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadExact"],[3,"ReadHalf"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"ReadVectored"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteAll"],[3,"WriteHalf"],[3,"WriteVectored"],[3,"MappedMutexGuard"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"Close"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"With"],[3,"Fanout"],[3,"Drain"],[3,"WithFlatMap"],[3,"Buffer"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Pending"],[3,"Once"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"TryUnfold"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peek"],[3,"Peekable"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Zip"],[3,"AndThen"],[3,"ErrInto"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TrySkipWhile"],[3,"IntoStream"],[3,"Chunks"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"SelectAll"],[3,"CatchUnwind"],[3,"TryBufferUnordered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"]]};
searchIndex["futures_channel"] = {"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[11,"is_full","","Returns true if this error is a result of the channel…",0,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",0,[[["self"]],["bool"]]],[11,"is_full","","Returns true if this error is a result of the channel…",1,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",1,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",1,[[],["t"]]],[11,"into_send_error","","Drops the message and converts into a `SendError`.",1,[[],["senderror"]]],[11,"try_send","","Attempts to send a message on this `Sender`, returning the…",2,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"start_send","","Send a message on the channel.",2,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed…",2,[[["self"],["context"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",2,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",2,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",2,[[["self"]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[["self"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[["self"],["h"]]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context"],["self"]],[["poll",["result"]],["result",["senderror"]]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",3,[[["self"]],["bool"]]],[11,"close_channel","","Closes this channel from the sender side, preventing any…",3,[[["self"]]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if…",3,[[["self"]]]],[11,"start_send","","Send a message on the channel.",3,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[["self"],["t"]],[["trysenderror"],["result",["trysenderror"]]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[["self"]],["bool"]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[["self"],["h"]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",4,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",4,[[["self"]],[["option"],["tryrecverror"],["result",["option","tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",5,[[["self"]]]],[11,"try_next","","Tries to receive the next message without notifying a…",5,[[["self"]],[["option"],["tryrecverror"],["result",["option","tryrecverror"]]]]],[0,"oneshot","futures_channel","A channel for sending a single message between…",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another…",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[3,"Canceled","","Error returned from a `Receiver` when the corresponding…",null,null],[5,"channel","","Creates a new one-shot channel for sending values across…",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[["t"]],["result"]]],[11,"poll_canceled","","Polls this `Sender` half to detect whether its associated…",6,[[["self"],["context"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",6,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing any subsequent…",7,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",7,[[["self"]],[["option"],["canceled"],["result",["option","canceled"]]]]],[11,"from","futures_channel::mpsc","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll_next","","",4,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","futures_channel::oneshot","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"drop","futures_channel::mpsc","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","futures_channel::oneshot","",6,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"clone","futures_channel::mpsc","",0,[[["self"]],["senderror"]]],[11,"clone","","",1,[[["self"]],["trysenderror"]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",3,[[["self"]],["unboundedsender"]]],[11,"clone","futures_channel::oneshot","",9,[[["self"]],["canceled"]]],[11,"eq","futures_channel::mpsc","",0,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",0,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",1,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",1,[[["self"],["trysenderror"]],["bool"]]],[11,"eq","futures_channel::oneshot","",9,[[["canceled"],["self"]],["bool"]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::oneshot","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_channel::oneshot","",9,[[["formatter"],["self"]],["result"]]],[11,"poll","","",7,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["canceled"]]]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"poll_ready","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",2,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",3,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Canceled"]]};
searchIndex["futures_core"] = {"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[8,"Future","futures_core::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value,…",0,[[["pin"],["self"],["context"]],["poll"]]],[6,"BoxFuture","","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",1,[[["self"]],["bool"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",2,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",3,[[["self"]]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",4,[[["self"]],["bool"]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",5,null],[16,"Error","","The type of failures yielded by this future",5,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",5,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[0,"task","futures_core","Task notification.",null,null],[3,"Context","futures_core::task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",6,null],[13,"Pending","","Represents that a value is not ready yet.",6,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[14,"ready","futures_core","Extracts the successful type of a `Poll<T>`.",null,null],[11,"from","futures_core::task","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"clone","","",8,[[["self"]],["waker"]]],[11,"clone","","",10,[[["self"]],["rawwakervtable"]]],[11,"clone","","",6,[[["self"]],["poll"]]],[11,"drop","","",8,[[["self"]]]],[11,"eq","","",10,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",10,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",9,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",9,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",6,[[["poll"],["self"]],["bool"]]],[11,"ne","","",6,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",6,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from","","",6,[[["t"]],["poll"]]],[11,"partial_cmp","","",6,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["poll"],["self"]],["bool"]]],[11,"le","","",6,[[["poll"],["self"]],["bool"]]],[11,"gt","","",6,[[["poll"],["self"]],["bool"]]],[11,"ge","","",6,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",6,[[],["result"]]],[11,"from_error","","",6,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",6,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",6,[[],["result"]]],[11,"from_error","","",6,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",6,[[],[["result"],["poll",["result"]]]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",7,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",7,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",6,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",6,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",6,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",6,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",6,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",6,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",6,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",8,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",8,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",8,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",8,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",9,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",10,[[],["rawwakervtable"]]]],"p":[[8,"Future"],[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"],[4,"Poll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]};
searchIndex["futures_io"] = {"doc":"Asynchronous I/O","i":[[3,"Error","futures_io","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",0,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,null],[13,"ConnectionReset","","The connection was reset by the remote server.",0,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",0,null],[13,"NotConnected","","The network operation failed because it was not connected…",0,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",0,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",0,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,null],[13,"AlreadyExists","","An entity already exists, often a file.",0,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",0,null],[13,"InvalidInput","","A parameter was incorrect.",0,null],[13,"InvalidData","","Data not valid for the operation were encountered.",0,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",0,null],[13,"WriteZero","","An error returned when an operation could not be completed…",0,null],[13,"Interrupted","","This operation was interrupted.",0,null],[13,"Other","","Any I/O error not part of this list.",0,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",0,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",1,null],[13,"End","","Sets the offset to the size of this object plus the…",1,null],[13,"Current","","Sets the offset to the current position plus the specified…",1,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"poll_close","","Attempt to close the object.",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",4,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",5,[[["pin"],["self"],["usize"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"cmp","","",0,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",8,[[["self"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"deref","","",7,[[["self"]]]],[11,"deref","","",8,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",6,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",6,[[["nulerror"]],["error"]]],[11,"from","","",6,[[["intoinnererror"]],["error"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",1,[[["self"]],["seekfrom"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",0,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",1,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",1,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"new","","Creates a new I/O error from a known kind of error as well…",6,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",6,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",6,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",6,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",6,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",6,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",6,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",7,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",7,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",8,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",8,[[["usize"]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",2,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",3,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]]],"p":[[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"]]};
searchIndex["futures_sink"] = {"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",0,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",0,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[8,"Sink"]]};
searchIndex["futures_task"] = {"doc":"Tools for working with tasks.","i":[[3,"Context","futures_task","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"Pending","","Represents that a value is not ready yet.",0,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",1,[[],["self"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",1,[[["self"]],["bool"]]],[11,"new","","Create a new [`WakerRef`] from a [`Waker`] reference.",2,[[["waker"]],["self"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",2,[[["manuallydrop",["waker"]],["waker"]],["self"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",3,[[["unsafefutureobj"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",3,[[],["futureobj"]]],[11,"new","","Create a `FutureObj` from a custom trait object…",4,[[["send"],["unsafefutureobj"]],["futureobj"]]],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",5,[[["futureobj"],["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",5,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",6,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",6,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",7,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",7,[[["arc"]]]],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",8,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",8,[[]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",10,[[["self"]],["waker"]]],[11,"clone","","",12,[[["self"]],["rawwakervtable"]]],[11,"clone","","",0,[[["self"]],["poll"]]],[11,"drop","","",10,[[["self"]]]],[11,"eq","","",12,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",12,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",11,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",11,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",0,[[["poll"],["self"]],["bool"]]],[11,"ne","","",0,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",0,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"from","","",0,[[["t"]],["poll"]]],[11,"partial_cmp","","",0,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["poll"],["self"]],["bool"]]],[11,"le","","",0,[[["poll"],["self"]],["bool"]]],[11,"gt","","",0,[[["poll"],["self"]],["bool"]]],[11,"ge","","",0,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",0,[[],["result"]]],[11,"from_error","","",0,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",0,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",0,[[],["result"]]],[11,"from_error","","",0,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",0,[[],[["result"],["poll",["result"]]]]],[11,"drop","","",3,[[["self"]]]],[11,"from","","",3,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",4,[[["box"]],["self"]]],[11,"from","","",4,[[["box",["future"]],["future"]],["self"]]],[11,"from","","",4,[[["pin",["box"]],["box"]],["self"]]],[11,"from","","",4,[[["pin",["box"]],["box",["future"]]],["self"]]],[11,"from","","",3,[[["box"]],["self"]]],[11,"from","","",3,[[["future"],["box",["future"]]],["self"]]],[11,"from","","",3,[[["pin",["box"]],["box"]],["self"]]],[11,"from","","",3,[[["pin",["box"]],["box",["future"]]],["self"]]],[11,"deref","","",2,[[["self"]],["waker"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"poll","","",3,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",9,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",9,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",0,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",0,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",0,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",0,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",0,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",0,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",0,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",10,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",10,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",10,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",10,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",11,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",12,[[],["rawwakervtable"]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",5,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",6,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"wake","","Indicates that the associated task is ready to make…",7,[[["arc"]]]]],"p":[[4,"Poll"],[3,"SpawnError"],[3,"WakerRef"],[3,"LocalFutureObj"],[3,"FutureObj"],[8,"Spawn"],[8,"LocalSpawn"],[8,"ArcWake"],[8,"UnsafeFutureObj"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]};
searchIndex["futures_util"] = {"doc":"Combinators and utilities for working with `Future`s,…","i":[[14,"ready","futures_util","Extracts the successful type of a `Poll<T>`.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[0,"future","","Futures",null,null],[6,"BoxFuture","futures_util::future","An owned dynamically typed [`Future`] for use in cases…",null,null],[6,"LocalBoxFuture","","`BoxFuture`, but without the `Send` requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns `true` if the underlying future should no longer…",0,[[["self"]],["bool"]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value,…",1,[[["pin"],["self"],["context"]],["poll"]]],[8,"TryFuture","","A convenience for futures that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this `TryFuture` as if it were a `Future`.",2,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the `flatten` method.",null,null],[3,"FlattenStream","","Stream for the `flatten_stream` method.",null,null],[3,"Fuse","","Future for the `fuse` method.",null,null],[3,"Inspect","","Future for the `inspect` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"Map","","Future for the `map` method.",null,null],[3,"NeverError","","Future for the `never_error` combinator.",null,null],[3,"Then","","Future for the `then` method.",null,null],[3,"UnitError","","Future for the `unit_error` combinator.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` method.",null,null],[3,"Remote","","A future which sends its output to the corresponding…",null,null],[3,"RemoteHandle","","The handle to a remote future returned by `remote_handle`.…",null,null],[3,"Shared","","Future for the `shared` method.",null,null],[3,"AndThen","","Future for the `and_then` method.",null,null],[3,"ErrInto","","Future for the `err_into` method.",null,null],[3,"InspectErr","","Future for the `inspect_err` method.",null,null],[3,"InspectOk","","Future for the `inspect_ok` method.",null,null],[3,"IntoFuture","","Future for the `into_future` method.",null,null],[3,"MapErr","","Future for the `map_err` method.",null,null],[3,"MapOk","","Future for the `map_ok` method.",null,null],[3,"OrElse","","Future for the `or_else` method.",null,null],[3,"TryFlattenStream","","Stream for the `try_flatten_stream` method.",null,null],[3,"UnwrapOrElse","","Future for the `unwrap_or_else` method.",null,null],[3,"FlattenSink","","Sink for the `flatten_sink` method.",null,null],[3,"Lazy","","Future for the [`lazy`] function.",null,null],[3,"Pending","","Future for the [`pending()`] function.",null,null],[3,"OptionFuture","","A future representing a value which may or may not be…",null,null],[3,"PollFn","","Future for the [`poll_fn`] function.",null,null],[3,"Ready","","Future for the `ready` function.",null,null],[3,"Join","","Future for the `join` function.",null,null],[3,"Join3","","Future for the [`join3`] function.",null,null],[3,"Join4","","Future for the [`join4`] function.",null,null],[3,"Join5","","Future for the [`join5`] function.",null,null],[3,"JoinAll","","Future for the [`join_all`] function.",null,null],[3,"Select","","Future for the [`select()`] function.",null,null],[3,"SelectAll","","Future for the [`select_all`] function.",null,null],[3,"TryJoin","","Future for the `try_join` function.",null,null],[3,"TryJoin3","","Future for the [`try_join3`] function.",null,null],[3,"TryJoin4","","Future for the [`try_join4`] function.",null,null],[3,"TryJoin5","","Future for the [`try_join5`] function.",null,null],[3,"TryJoinAll","","Future for the [`try_join_all`] function.",null,null],[3,"TrySelect","","Future for the [`try_select()`] function.",null,null],[3,"SelectOk","","Future for the [`select_ok`] function.",null,null],[3,"Abortable","","A future which can be remotely short-circuited using an…",null,null],[3,"AbortHandle","","A handle to a `Abortable` future.",null,null],[3,"AbortRegistration","","A registration handle for a `Abortable` future. Values of…",null,null],[3,"Aborted","","Indicator that the `Abortable` future was aborted.",null,null],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",4,null],[13,"Done","","The output of the completed future",4,null],[13,"Gone","","The empty variant after the result of a [`MaybeDone`] has…",4,null],[4,"Either","","Combines two different futures, streams, or sinks having…",null,null],[13,"Left","","First branch of the type",5,null],[13,"Right","","Second branch of the type",5,null],[5,"lazy","","Creates a new future that allows delayed execution of a…",null,[[["f"]],["lazy"]]],[5,"pending","","Creates a future which never resolves, representing a…",null,[[],["pending"]]],[5,"maybe_done","","Wraps a future into a `MaybeDone`",null,[[["future"]],[["future"],["maybedone"]]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",null,[[["f"]],["pollfn"]]],[5,"err","","Create a future that is immediately ready with an error…",null,[[["e"]],[["ready",["result"]],["result"]]]],[5,"ok","","Create a future that is immediately ready with a success…",null,[[["t"]],[["ready",["result"]],["result"]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[["t"]],["ready"]]],[5,"join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["join"]]],[5,"join3","","Same as `join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["join3"]]],[5,"join4","","Same as `join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["join4"]]],[5,"join5","","Same as `join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["join5"]]],[5,"join_all","","Creates a future which represents a collection of the…",null,[[["i"]],["joinall"]]],[5,"select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["select"]]],[5,"select_all","","Creates a new future which will select over a list of…",null,[[["i"]],["selectall"]]],[5,"try_join","","Joins the result of two futures, waiting for them both to…",null,[[["fut1"],["fut2"]],["tryjoin"]]],[5,"try_join3","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut1"],["fut2"]],["tryjoin3"]]],[5,"try_join4","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut2"],["fut4"],["fut1"]],["tryjoin4"]]],[5,"try_join5","","Same as `try_join`, but with more futures.",null,[[["fut3"],["fut5"],["fut2"],["fut4"],["fut1"]],["tryjoin5"]]],[5,"try_join_all","","Creates a future which represents either a collection of…",null,[[["i"]],["tryjoinall"]]],[5,"try_select","","Waits for either one of two differently-typed futures to…",null,[[["a"],["b"]],["tryselect"]]],[5,"select_ok","","Creates a new future which will select the first…",null,[[["i"]],["selectok"]]],[5,"abortable","","Creates a new `Abortable` future and a `AbortHandle` which…",null,[[["fut"]]]],[11,"terminated","","Creates a new `Fuse`-wrapped future which is already…",6,[[],["fuse"]]],[11,"forget","","Drops this handle without canceling the underlying future.",7,[[]]],[11,"peek","","Returns [`Some`] containing a reference to this…",8,[[["self"]],["option"]]],[11,"output_mut","","Returns an [`Option`] containing a mutable reference to…",4,[[["pin"],["self"]],["option"]]],[11,"take_output","","Attempt to take the output of a `MaybeDone` without…",4,[[["pin"],["self"]],["option"]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",9,[[],["t"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,[[],["t"]]],[11,"new","","Creates a new `Abortable` future using an existing…",10,[[["abortregistration"],["fut"]],["self"]]],[11,"new_pair","","Creates an (`AbortHandle`, `AbortRegistration`) pair which…",11,[[]]],[11,"abort","","Abort the `Abortable` future associated with this handle.",11,[[["self"]]]],[8,"FutureExt","","An extension trait for `Future`s that provides a variety…",null,null],[11,"map","","Map this future's output to a different type, returning a…",12,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",12,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",12,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",12,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",12,[[],["boxfuture"]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",12,[[],["localboxfuture"]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",12,[[["self"],["context"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",12,[[],["option"]]],[8,"TryFutureExt","","Adapters specific to [`Result`]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful…",13,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",13,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",13,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",13,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",13,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",13,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",13,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",13,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",13,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",13,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",13,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",13,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",13,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[0,"stream","futures_util","Streams",null,null],[6,"BoxStream","futures_util::stream","An owned dynamically typed [`Stream`] for use in cases…",null,null],[6,"LocalBoxStream","","`BoxStream`, but without the `Send` requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns `true` if the stream should no longer be polled.",14,[[["self"]],["bool"]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",15,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",15,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",15,[[["self"]]]],[8,"TryStream","","A convenience for streams that return `Result` values that…",null,null],[16,"Ok","","The type of successful values yielded by this future",16,null],[16,"Error","","The type of failures yielded by this future",16,null],[10,"try_poll_next","","Poll this `TryStream` as if it were a `Stream`.",16,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[3,"Chain","","Stream for the `chain` method.",null,null],[3,"Collect","","Future for the `collect` method.",null,null],[3,"Concat","","Future for the `concat` method.",null,null],[3,"Enumerate","","Stream for the `enumerate` method.",null,null],[3,"Filter","","Stream for the `filter` method.",null,null],[3,"FilterMap","","Stream for the `filter_map` method.",null,null],[3,"Flatten","","Stream for the `flatten` method.",null,null],[3,"Fold","","Future for the `fold` method.",null,null],[3,"ForEach","","Future for the `for_each` method.",null,null],[3,"Fuse","","Stream for the `fuse` method.",null,null],[3,"Inspect","","Stream for the `inspect` method.",null,null],[3,"Map","","Stream for the `map` method.",null,null],[3,"Next","","Future for the `next` method.",null,null],[3,"Peek","","Future for the `Peekable::peek()` function from [`Peekable`]",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Scan","","Stream for the `scan` method.",null,null],[3,"SelectNextSome","","Future for the `select_next_some` method.",null,null],[3,"Skip","","Stream for the `skip` method.",null,null],[3,"SkipWhile","","Stream for the `skip_while` method.",null,null],[3,"StreamFuture","","Future for the `into_future` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"TakeWhile","","Stream for the `take_while` method.",null,null],[3,"Then","","Stream for the `then` method.",null,null],[3,"Zip","","Stream for the `zip` method.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` method.",null,null],[3,"Chunks","","Stream for the `chunks` method.",null,null],[3,"Forward","","Future for the `forward` method.",null,null],[3,"BufferUnordered","","Stream for the `buffer_unordered` method.",null,null],[3,"Buffered","","Stream for the `buffered` method.",null,null],[3,"ForEachConcurrent","","Future for the `for_each_concurrent` method.",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"AndThen","","Stream for the `and_then` method.",null,null],[3,"ErrInto","","Stream for the `err_into` method.",null,null],[3,"InspectErr","","Stream for the `inspect_err` method.",null,null],[3,"InspectOk","","Stream for the `inspect_ok` method.",null,null],[3,"IntoStream","","Stream for the `into_stream` method.",null,null],[3,"MapErr","","Stream for the `map_err` method.",null,null],[3,"MapOk","","Stream for the `map_ok` method.",null,null],[3,"OrElse","","Stream for the `or_else` method.",null,null],[3,"TryCollect","","Future for the `try_collect` method.",null,null],[3,"TryConcat","","Future for the `try_concat` method.",null,null],[3,"TryFilter","","Stream for the `try_filter` method.",null,null],[3,"TryFilterMap","","Stream for the `try_filter_map` method.",null,null],[3,"TryFlatten","","Stream for the `try_flatten` method.",null,null],[3,"TryFold","","Future for the `try_fold` method.",null,null],[3,"TryForEach","","Future for the `try_for_each` method.",null,null],[3,"TryNext","","Future for the `try_next` method.",null,null],[3,"TrySkipWhile","","Stream for the `try_skip_while` method.",null,null],[3,"TryUnfold","","Stream for the [`try_unfold`] function.",null,null],[3,"IntoAsyncRead","","Reader for the `into_async_read` method.",null,null],[3,"TryBufferUnordered","","Stream for the `try_buffer_unordered` method.",null,null],[3,"TryForEachConcurrent","","Future for the `try_for_each_concurrent` method.",null,null],[3,"Iter","","Stream for the [`iter`] function.",null,null],[3,"Repeat","","Stream for the [`repeat`] function.",null,null],[3,"Empty","","Stream for the [`empty`] function.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"Pending","","Stream for the [`pending()`] function.",null,null],[3,"PollFn","","Stream for the [`poll_fn`] function.",null,null],[3,"Select","","Stream for the [`select()`] function.",null,null],[3,"Unfold","","Stream for the [`unfold`] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[3,"SelectAll","","An unbounded set of streams",null,null],[5,"try_unfold","","Creates a `TryStream` from a seed and a closure returning…",null,[[["t"],["f"]],["tryunfold"]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty"]]],[5,"once","","Creates a stream of a single element.",null,[[["future"]],[["future"],["once"]]]],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending"]]],[5,"poll_fn","","Creates a new stream wrapping a function returning…",null,[[["f"]],["pollfn"]]],[5,"select","","This function will attempt to pull items from both…",null,[[["st1"],["st2"]],["select"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",null,[[["t"],["f"]],["unfold"]]],[5,"select_all","","Convert a list of streams into a `Stream` of results from…",null,[[["i"]],["selectall"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",18,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",19,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",20,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",21,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[],["st"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",22,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",22,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],[["st"],["option"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],[["st"],["option"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",23,[[["pin"],["self"]],[["option",["pin"]],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",24,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",25,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",25,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",25,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",25,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",26,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[],["st"]]],[11,"peek","","Produces a `Peek` future which retrieves a reference to…",26,[[["pin"],["self"]],["peek"]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",26,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",27,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",28,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",29,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",30,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",30,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",30,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",30,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",31,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",32,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",32,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",32,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",32,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",33,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",34,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",35,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",35,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",35,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",35,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",36,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",36,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",36,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",36,[[],["st"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",37,[[["splitsink"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",38,[[["splitstream"]],[["result",["reuniteerror"]],["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",39,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",39,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",39,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",39,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",40,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",40,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",40,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",40,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",41,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",41,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",41,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",41,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",42,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",42,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",42,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",42,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",43,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",43,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",43,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",43,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",44,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",44,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",44,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",44,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",45,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",45,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",45,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",45,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",46,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",46,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",46,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",46,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",47,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",47,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",47,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",47,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",48,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",48,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",48,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",48,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",49,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",49,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",49,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",49,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",50,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",50,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",50,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",50,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",51,[[["self"]],["st"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",51,[[["self"]],["st"]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",51,[[["pin"],["self"]],[["pin"],["st"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,[[],["st"]]],[11,"get_ref","","Acquires a reference to the underlying streams that this…",52,[[["self"]]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams…",52,[[["self"]]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying…",52,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying streams.",52,[[]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",53,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",53,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",53,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",53,[[["self"],["fut"]]]],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"Iter","futures_util::stream::futures_unordered","Immutable iterator over all the futures in the unordered…",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[11,"new","","Constructs a new, empty [`FuturesUnordered`].",54,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",54,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures.",54,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",54,[[["self"],["fut"]]]],[11,"iter","","Returns an iterator that allows inspecting each future in…",54,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",54,[[["self"]],["itermut"]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in…",54,[[["pin"],["self"]],["iterpinmut"]]],[11,"new","futures_util::stream","Constructs a new, empty `SelectAll`",55,[[],["selectall"]]],[11,"len","","Returns the number of streams contained in the set.",55,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no streams",55,[[["self"]],["bool"]]],[11,"push","","Push a stream into the set.",55,[[["self"],["st"]]]],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Creates a future that resolves to the next item in the…",56,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",56,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",56,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",56,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",56,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",56,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",56,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",56,[[],[["extend"],["default"],["collect"]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",56,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",56,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",56,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",56,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",56,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",56,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",56,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",56,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",56,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",56,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",56,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",56,[[],["boxstream"]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",56,[[],["localboxstream"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",56,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",56,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",56,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",56,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",56,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",56,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",56,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",56,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",56,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",56,[[["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",56,[[["self"]],["selectnextsome"]]],[8,"TryStreamExt","","Adapters specific to `Result`-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts…",57,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",57,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",57,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",57,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",57,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",57,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",57,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",57,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",57,[[],[["trycollect"],["default"],["extend"]]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",57,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",57,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",57,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",57,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",57,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",57,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",57,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",57,[[],["intoasyncread"]]],[0,"sink","futures_util","Sinks",null,null],[8,"Sink","futures_util::sink","A `Sink` is a value into which other values can be sent,…",null,null],[16,"Error","","The type of value produced by the sink when an error occurs.",58,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each…",58,[[["pin"],["self"],["item"]],["result"]]],[10,"poll_flush","","Flush any remaining output from this sink.",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_close","","Flush any remaining output and close this sink, if…",58,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[3,"Close","","Future for the `close` method.",null,null],[3,"Drain","","Sink for the [`drain`] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"SinkErrInto","","Sink for the `sink_err_into` method.",null,null],[3,"SinkMapErr","","Sink for the `sink_map_err` method.",null,null],[3,"Send","","Future for the `send` method.",null,null],[3,"SendAll","","Future for the `send_all` method.",null,null],[3,"With","","Sink for the `with` method.",null,null],[3,"WithFlatMap","","Sink for the `with_flat_map` method.",null,null],[3,"Buffer","","Sink for the `buffer` method.",null,null],[5,"drain","","Create a sink that will just discard all items given to it.",null,[[],["drain"]]],[11,"get_ref","","Get a shared reference to the inner sinks.",59,[[["self"]]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",59,[[["self"]]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",59,[[["pin"],["self"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",59,[[]]],[11,"get_ref","","Get a shared reference to the inner sink.",60,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",60,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",60,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",60,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",61,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",61,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",61,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",61,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",62,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",62,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",62,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",62,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",63,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",63,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",63,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",63,[[],["si"]]],[11,"get_ref","","Get a shared reference to the inner sink.",64,[[["self"]],["si"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",64,[[["self"]],["si"]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sink.",64,[[["pin"],["self"]],[["si"],["pin"]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",64,[[],["si"]]],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of…",null,null],[11,"with","","Composes a function in front of the sink.",65,[[["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",65,[[["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",65,[[["f"]],["sinkmaperr"]]],[11,"sink_err_into","","Map this sink's error to a different error type using the…",65,[[],["sinkerrinto"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",65,[[["usize"]],["buffer"]]],[11,"close","","Close the sink.",65,[[["self"]],["close"]]],[11,"fanout","","Fanout items to multiple sinks.",65,[[["si"]],["fanout"]]],[11,"flush","","Flush the sink, processing all pending items.",65,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",65,[[["self"],["item"]],["send"]]],[11,"send_all","","A future that completes after the given stream has been…",65,[[["st"],["self"]],[["sendall"],["sized"]]]],[11,"left_sink","","Wrap this sink in an `Either` sink, making it the…",65,[[],["either"]]],[11,"right_sink","","Wrap this stream in an `Either` stream, making it the…",65,[[],["either"]]],[0,"task","futures_util","Task notification",null,null],[8,"ArcWake","futures_util::task","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make…",66,[[["arc"]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make…",66,[[["arc"]]]],[5,"waker","","Creates a [`Waker`] from an `Arc<impl ArcWake>`.",null,[[["arc"]],["waker"]]],[5,"waker_ref","","Creates a reference to a [`Waker`] from a reference to…",null,[[["arc"]],["wakerref"]]],[3,"WakerRef","","A [`Waker`] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[3,"Context","","The `Context` of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current…",null,null],[13,"Ready","","Represents that a value is immediately ready.",67,null],[13,"Pending","","Represents that a value is not ready yet.",67,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying…",null,null],[3,"RawWaker","","A `RawWaker` allows the implementor of a task executor to…",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies…",null,null],[8,"Spawn","","The `Spawn` trait allows for pushing futures onto an…",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",68,[[["self"],["futureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status","","Determines whether the executor is able to spawn new tasks.",68,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[8,"LocalSpawn","","The `LocalSpawn` is similar to [`Spawn`], but allows…",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",69,[[["self"],["localfutureobj"]],[["spawnerror"],["result",["spawnerror"]]]]],[11,"status_local","","Determines whether the executor is able to spawn new tasks.",69,[[["self"]],[["spawnerror"],["result",["spawnerror"]]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for…",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat…",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [`Waker`] which does nothing when `wake()` is…",null,[[],["waker"]]],[5,"noop_waker_ref","","Get a static reference to a [`Waker`] which does nothing…",null,[[],["waker"]]],[8,"SpawnExt","","Extension trait for `Spawn`.",null,null],[11,"spawn","","Spawns a task that polls the given future with output `()`…",70,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",70,[[["self"],["fut"]],[["result",["remotehandle","spawnerror"]],["remotehandle"],["spawnerror"]]]],[8,"LocalSpawnExt","","Extension trait for `LocalSpawn`.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",71,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",71,[[["self"],["fut"]],[["result",["remotehandle","spawnerror"]],["remotehandle"],["spawnerror"]]]],[0,"never","futures_util","Definition of the `Never` type, a stand-in for the `!`…",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[0,"io","futures_util","IO",null,null],[8,"AsyncRead","futures_util::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",72,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_read_vectored","","Attempt to read from the `AsyncRead` into `bufs` using…",72,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",73,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write_vectored","","Attempt to write bytes from `bufs` into the object using…",73,[[["pin"],["context"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",73,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_close","","Attempt to close the object.",73,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",74,[[["pin"],["seekfrom"],["context"],["self"]],[["poll",["result"]],["result",["u64","error"]]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer,…",75,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",75,[[["pin"],["self"],["usize"]]]],[3,"Error","","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",76,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",76,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",76,null],[13,"ConnectionReset","","The connection was reset by the remote server.",76,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",76,null],[13,"NotConnected","","The network operation failed because it was not connected…",76,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",76,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",76,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",76,null],[13,"AlreadyExists","","An entity already exists, often a file.",76,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",76,null],[13,"InvalidInput","","A parameter was incorrect.",76,null],[13,"InvalidData","","Data not valid for the operation were encountered.",76,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",76,null],[13,"WriteZero","","An error returned when an operation could not be completed…",76,null],[13,"Interrupted","","This operation was interrupted.",76,null],[13,"Other","","Any I/O error not part of this list.",76,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",76,null],[3,"IoSlice","","A buffer type used with `Write::write_vectored`.",null,null],[3,"IoSliceMut","","A buffer type used with `Read::read_vectored`.",null,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O…",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",77,null],[13,"End","","Sets the offset to the size of this object plus the…",77,null],[13,"Current","","Sets the offset to the current position plus the specified…",77,null],[3,"AllowStdIo","","A simple wrapper type which allows types which implement…",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Chain","","Reader for the `chain` method.",null,null],[3,"Close","","Future for the `close` method.",null,null],[3,"Copy","","Future for the [`copy()`] function.",null,null],[3,"CopyBuf","","Future for the [`copy_buf()`] function.",null,null],[3,"Cursor","","A `Cursor` wraps an in-memory buffer and provides it with…",null,null],[3,"Empty","","Reader for the [`empty()`] function.",null,null],[3,"Flush","","Future for the `flush` method.",null,null],[3,"IntoSink","","Sink for the `into_sink` method.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Read","","Future for the `read` method.",null,null],[3,"ReadVectored","","Future for the `read_vectored` method.",null,null],[3,"ReadExact","","Future for the `read_exact` method.",null,null],[3,"ReadLine","","Future for the `read_line` method.",null,null],[3,"ReadToEnd","","Future for the `read_to_end` method.",null,null],[3,"ReadToString","","Future for the `read_to_string` method.",null,null],[3,"ReadUntil","","Future for the `read_until` method.",null,null],[3,"Repeat","","Reader for the [`repeat()`] function.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[3,"Sink","","Writer for the [`sink()`] function.",null,null],[3,"ReadHalf","","The readable half of an object returned from…",null,null],[3,"WriteHalf","","The writable half of an object returned from…",null,null],[3,"Take","","Reader for the `take` method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the `write` method.",null,null],[3,"WriteVectored","","Future for the `write_vectored` method.",null,null],[3,"WriteAll","","Future for the `write_all` method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],[["copy"],["sized"]]]],[5,"copy_buf","","Creates a future which copies all the bytes from one…",null,[[["w"],["r"]],[["copybuf"],["sized"]]]],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty"]]],[5,"repeat","","Creates an instance of a reader that infinitely repeats…",null,[[["u8"]],["repeat"]]],[5,"sink","","Creates an instance of a writer which will successfully…",null,[[],["sink"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",78,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",78,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",78,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",78,[[],["t"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",79,[[["r"]],["self"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",79,[[["usize"],["r"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying reader.",79,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",79,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",79,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",79,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",79,[[["self"]]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",80,[[["w"]],["self"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",80,[[["w"],["usize"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying writer.",80,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",80,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",80,[[["pin"],["self"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",80,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",80,[[["self"]]]],[11,"get_ref","","Gets references to the underlying readers in this `Chain`.",81,[[["self"]]]],[11,"get_mut","","Gets mutable references to the underlying readers in this…",81,[[["self"]]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers…",81,[[["pin"],["self"]]]],[11,"into_inner","","Consumes the `Chain`, returning the wrapped readers.",81,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying…",82,[[["t"]],["cursor"]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",82,[[],["t"]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",82,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",82,[[["self"]],["t"]]],[11,"position","","Returns the current position of this cursor.",82,[[["self"]],["u64"]]],[11,"set_position","","Sets the position of this cursor.",82,[[["self"],["u64"]]]],[11,"limit","","Returns the remaining number of bytes that can be read…",83,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",83,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",83,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",83,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",83,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",83,[[],["r"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",84,[[["t"]],["self"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",84,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",84,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",84,[[],["t"]]],[11,"start","","Returns the starting index of this window into the…",84,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",84,[[["self"]],["usize"]]],[11,"set","","Changes the range of this window to the range specified.",84,[[["self"],["rangebounds",["usize"]],["usize"]]]],[8,"AsyncReadExt","","An extension trait which adds utility methods to…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with…",85,[[["r"]],["chain"]]],[11,"read","","Tries to read some bytes directly into the given `buf` in…",85,[[["self"]],["read"]]],[11,"read_vectored","","Creates a future which will read from the `AsyncRead` into…",85,[[["self"]],["readvectored"]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to…",85,[[["self"]],["readexact"]]],[11,"read_to_end","","Creates a future which will read all the bytes from this…",85,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Creates a future which will read all the bytes from this…",85,[[["self"],["string"]],["readtostring"]]],[11,"split","","Helper method for splitting this read/write object into…",85,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most…",85,[[["u64"]],["take"]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to…",null,null],[11,"flush","","Creates a future which will entirely flush this…",86,[[["self"]],["flush"]]],[11,"close","","Creates a future which will entirely close this…",86,[[["self"]],["close"]]],[11,"write","","Creates a future which will write bytes from `buf` into…",86,[[["self"]],["write"]]],[11,"write_vectored","","Creates a future which will write bytes from `bufs` into…",86,[[["self"]],["writevectored"]]],[11,"write_all","","Write data into this object.",86,[[["self"]],["writeall"]]],[11,"into_sink","","Allow using an [`AsyncWrite`] as a `Sink``<Item:…",86,[[],[["asref"],["intosink"]]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",87,[[["seekfrom"],["self"]],["seek"]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Creates a future which will read all the bytes associated…",88,[[["vec"],["self"],["u8"]],["readuntil"]]],[11,"read_line","","Creates a future which will read all the bytes associated…",88,[[["self"],["string"]],["readline"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",88,[[],["lines"]]],[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures_util::lock","An RAII guard returned by the `MutexGuard::map` and…",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been…",null,null],[3,"MutexGuard","","An RAII guard returned by the `lock` and `try_lock`…",null,null],[11,"new","","Creates a new futures-aware mutex.",89,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",89,[[],["t"]]],[11,"try_lock","","Attempt to acquire the lock immediately.",89,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"lock","","Acquire the lock asynchronously.",89,[[["self"]],["mutexlockfuture"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",89,[[["self"]],["t"]]],[11,"map","","Returns a locked view over a portion of the locked data.",90,[[["f"]],[["sized"],["mappedmutexguard"]]]],[11,"map","","Returns a locked view over a portion of the locked data.",91,[[["f"]],[["mappedmutexguard"],["sized"]]]],[11,"from","futures_util::task","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"try_poll","","",92,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"try_poll","","",93,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures_util::future","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"try_poll","","",94,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"try_poll_next","","",95,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"try_poll","","",6,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"try_poll","","",96,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"try_poll_next","","",97,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"try_poll","","",98,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"try_poll","","",99,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"try_poll","","",100,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"try_poll","","",101,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"try_poll","","",102,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll","","",7,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"try_poll","","",104,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"try_poll","","",105,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll","","",107,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"try_poll","","",108,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"try_poll","","",109,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll","","",110,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"try_poll","","",111,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"try_poll_next","","",112,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"try_poll","","",113,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"try_poll_next","","",114,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"try_poll","","",115,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"try_poll","","",116,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"try_poll","","",118,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"try_poll","","",9,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"try_poll","","",126,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"try_poll","","",127,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"try_poll","","",128,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"try_poll","","",129,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"try_poll","","",130,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"try_poll","","",131,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"try_poll","","",132,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"try_poll","","",10,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"to_string","","",134,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll","","",5,[[["pin"],["f"],["context"]],["poll"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"try_poll_next","","",135,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"try_poll","","",137,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"try_poll_next","","",19,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"try_poll_next","","",20,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"try_poll_next","","",21,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"try_poll","","",138,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_poll_next","","",22,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"try_poll_next","","",24,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"try_poll_next","","",25,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"try_poll_next","","",26,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"try_poll_next","","",34,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"try_poll","","",142,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_poll_next","","",27,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"try_poll_next","","",28,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"try_poll_next","","",29,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"try_poll_next","","",30,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"try_poll_next","","",31,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"try_poll_next","","",143,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"try_poll","","",144,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"try_poll_next","","",35,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"try_poll_next","","",36,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"try_poll_next","","",37,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"try_poll_next","","",39,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"try_poll_next","","",40,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"try_poll_next","","",42,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"try_poll_next","","",41,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"try_poll_next","","",43,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"try_poll_next","","",45,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"try_poll_next","","",44,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"try_poll_next","","",46,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"try_poll","","",146,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"try_poll","","",147,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"try_poll_next","","",47,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"try_poll_next","","",48,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"try_poll_next","","",49,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"try_poll","","",148,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"try_poll","","",149,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"try_poll","","",150,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"try_poll_next","","",50,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"try_poll_next","","",151,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"try_poll_next","","",51,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"try_poll","","",153,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"try_poll_next","","",154,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"try_poll_next","","",155,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"try_poll_next","","",156,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"try_poll_next","","",157,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"try_poll_next","","",158,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"try_poll_next","","",159,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"try_poll_next","","",52,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"try_poll_next","","",160,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"try_poll_next","","",53,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream::futures_unordered","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"try_poll_next","","",54,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"try_poll_next","","",55,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::stream::futures_unordered","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"into_iter","","",161,[[],["i"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"into_iter","","",162,[[],["i"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"into_iter","","",163,[[],["i"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"into_iter","","",164,[[],["i"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","futures_util::sink","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"try_poll","","",165,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"try_poll","","",167,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"try_poll_next","","",60,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"try_poll_next","","",61,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"try_poll","","",168,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"try_poll","","",169,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll_next","","",62,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll_next","","",63,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"try_poll_next","","",64,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","futures_util::task","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"from","","",67,[[],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_string","","",176,[[["self"]],["string"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","futures_util::io","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_string","","",177,[[["self"]],["string"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"try_poll","","",180,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"try_poll","","",181,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"try_poll","","",182,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"try_poll","","",184,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"try_poll_next","","",186,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"try_poll","","",187,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"try_poll","","",188,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"try_poll","","",189,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"try_poll","","",190,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"try_poll","","",191,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"try_poll","","",192,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"try_poll","","",193,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"try_poll","","",195,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"try_poll","","",199,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"try_poll","","",200,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"try_poll","","",201,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","futures_util::lock","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"from","","",89,[[],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"cmp","futures_util::io","",76,[[["errorkind"],["self"]],["ordering"]]],[11,"deref_mut","","",179,[[["self"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"deref","","",178,[[["self"]]]],[11,"deref","","",179,[[["self"]]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",177,[[["errorkind"]],["error"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",177,[[["nulerror"]],["error"]]],[11,"from","","",177,[[["intoinnererror"]],["error"]]],[11,"description","","",177,[[["self"]],["str"]]],[11,"cause","","",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",179,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",178,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",77,[[["self"]],["seekfrom"]]],[11,"clone","","",76,[[["self"]],["errorkind"]]],[11,"partial_cmp","","",76,[[["errorkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","",77,[[["seekfrom"],["self"]],["bool"]]],[11,"ne","","",77,[[["seekfrom"],["self"]],["bool"]]],[11,"eq","","",76,[[["errorkind"],["self"]],["bool"]]],[11,"clone","futures_util::task","",173,[[["self"]],["waker"]]],[11,"clone","","",175,[[["self"]],["rawwakervtable"]]],[11,"clone","","",67,[[["self"]],["poll"]]],[11,"drop","","",173,[[["self"]]]],[11,"eq","","",175,[[["self"],["rawwakervtable"]],["bool"]]],[11,"ne","","",175,[[["self"],["rawwakervtable"]],["bool"]]],[11,"eq","","",174,[[["self"],["rawwaker"]],["bool"]]],[11,"ne","","",174,[[["self"],["rawwaker"]],["bool"]]],[11,"eq","","",67,[[["poll"],["self"]],["bool"]]],[11,"ne","","",67,[[["poll"],["self"]],["bool"]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",174,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",175,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",172,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",173,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",67,[[["poll"],["self"]],["ordering"]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"from","","",67,[[["t"]],["poll"]]],[11,"partial_cmp","","",67,[[["poll"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",67,[[["poll"],["self"]],["bool"]]],[11,"le","","",67,[[["poll"],["self"]],["bool"]]],[11,"gt","","",67,[[["poll"],["self"]],["bool"]]],[11,"ge","","",67,[[["poll"],["self"]],["bool"]]],[11,"into_result","","",67,[[],["result"]]],[11,"from_error","","",67,[[],[["poll",["option"]],["option",["result"]]]]],[11,"from_ok","","",67,[[],[["poll",["option"]],["option",["result"]]]]],[11,"into_result","","",67,[[],["result"]]],[11,"from_error","","",67,[[],[["result"],["poll",["result"]]]]],[11,"from_ok","","",67,[[],[["result"],["poll",["result"]]]]],[11,"default","","",171,[[],["atomicwaker"]]],[11,"fmt","","",171,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",93,[[["futureobj"]],["localfutureobj"]]],[11,"from","","",93,[[["box",["future"]],["future"]],["localfutureobj"]]],[11,"from","","",93,[[["box"]],["localfutureobj"]]],[11,"from","","",92,[[["box"]],["futureobj"]]],[11,"from","","",92,[[["pin",["box"]],["box"]],["futureobj"]]],[11,"from","","",92,[[["pin",["box"]],["box",["future"]]],["futureobj"]]],[11,"from","","",92,[[["box",["future"]],["future"]],["futureobj"]]],[11,"from","","",93,[[["box",["future"]],["pin",["box"]]],["localfutureobj"]]],[11,"from","","",93,[[["pin",["box"]],["box"]],["localfutureobj"]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",176,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",92,[[["pin",["futureobj"]],["context"],["futureobj"]],["poll"]]],[11,"poll","","",93,[[["localfutureobj"],["pin",["localfutureobj"]],["context"]],["poll"]]],[11,"drop","","",93,[[["self"]]]],[11,"deref","","",170,[[["self"]],["waker"]]],[11,"drop","futures_util::future","",8,[[["self"]]]],[11,"drop","futures_util::stream::futures_unordered","",54,[[["self"]]]],[11,"drop","futures_util::lock","",202,[[["self"]]]],[11,"drop","","",90,[[["self"]]]],[11,"drop","","",91,[[["self"]]]],[11,"as_mut","futures_util::io","",84,[[["self"]]]],[11,"as_ref","","",84,[[["self"]]]],[11,"from","futures_util::future","",117,[[["option"]],["self"]]],[11,"from","futures_util::lock","",89,[[["t"]],["self"]]],[11,"next","futures_util::stream::futures_unordered","",163,[[["self"]],[["pin"],["option",["pin"]]]]],[11,"size_hint","","",163,[[["self"]]]],[11,"next","","",162,[[["self"]],[["option"],["fut"]]]],[11,"size_hint","","",162,[[["self"]]]],[11,"next","","",164,[[["self"]],[["option",["pin"]],["pin"]]]],[11,"size_hint","","",164,[[["self"]]]],[11,"next","","",161,[[["self"]],[["fut"],["option"]]]],[11,"size_hint","","",161,[[["self"]]]],[11,"clone","futures_util::future","",8,[[["self"]],["self"]]],[11,"clone","","",116,[[["self"]],["self"]]],[11,"clone","","",117,[[["self"]],["optionfuture"]]],[11,"clone","","",9,[[["self"]],["ready"]]],[11,"clone","","",5,[[["self"]],["either"]]],[11,"clone","","",10,[[["self"]],["abortable"]]],[11,"clone","","",11,[[["self"]],["aborthandle"]]],[11,"clone","","",134,[[["self"]],["aborted"]]],[11,"clone","futures_util::sink","",61,[[["self"]],["sinkmaperr"]]],[11,"clone","futures_util::io","",78,[[["self"]],["allowstdio"]]],[11,"clone","","",82,[[["self"]],["cursor"]]],[11,"default","futures_util::stream","",53,[[],["futuresordered"]]],[11,"default","futures_util::stream::futures_unordered","",54,[[],["futuresunordered"]]],[11,"default","futures_util::stream","",55,[[],["selectall"]]],[11,"default","futures_util::io","",82,[[],["cursor"]]],[11,"default","futures_util::lock","",89,[[],["mutex"]]],[11,"cmp","futures_util::io","",78,[[["self"],["allowstdio"]],["ordering"]]],[11,"eq","futures_util::future","",134,[[["aborted"],["self"]],["bool"]]],[11,"eq","futures_util::io","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"partial_cmp","","",78,[[["self"],["allowstdio"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",78,[[["self"],["allowstdio"]],["bool"]]],[11,"deref","futures_util::lock","",90,[[["self"]],["t"]]],[11,"deref","","",91,[[["self"]],["u"]]],[11,"deref_mut","","",90,[[["self"]],["t"]]],[11,"deref_mut","","",91,[[["self"]],["u"]]],[11,"fmt","futures_util::future","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream::futures_unordered","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::sink","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::io","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::lock","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::future","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","futures_util::stream","",17,[[["formatter"],["self"]],["result"]]],[11,"hash","futures_util::io","",78,[[["self"],["__h"]]]],[11,"from_iter","futures_util::future","",123,[[["intoiterator"]],["self"]]],[11,"from_iter","","",125,[[["intoiterator"]],["self"]]],[11,"from_iter","","",130,[[["intoiterator"]],["self"]]],[11,"from_iter","","",132,[[["intoiterator"]],["self"]]],[11,"from_iter","futures_util::stream","",53,[[["t"]],["self"]]],[11,"from_iter","futures_util::stream::futures_unordered","",54,[[["i"]],["self"]]],[11,"from_iter","futures_util::stream","",55,[[["intoiterator"]],["self"]]],[11,"fill_buf","futures_util::io","",78,[[["self"]],["result"]]],[11,"consume","","",78,[[["self"],["usize"]]]],[11,"read","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_vectored","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_end","","",78,[[["self"],["vec"]],[["result",["usize"]],["usize"]]]],[11,"read_to_string","","",78,[[["self"],["string"]],[["result",["usize"]],["usize"]]]],[11,"read_exact","","",78,[[["self"]],["result"]]],[11,"seek","","",78,[[["seekfrom"],["self"]],[["result",["u64"]],["u64"]]]],[11,"write","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_vectored","","",78,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",78,[[["self"]],["result"]]],[11,"write_all","","",78,[[["self"]],["result"]]],[11,"write_fmt","","",78,[[["arguments"],["self"]],["result"]]],[11,"poll","futures_util::future","",94,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",6,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",98,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",100,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",96,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",101,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll","","",99,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",102,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",7,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",103,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",104,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",105,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",107,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",106,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",108,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",109,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",110,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",111,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",113,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",115,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",116,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",4,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",117,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",118,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",9,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",119,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",120,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",121,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",122,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",123,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",124,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",125,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",126,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",127,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",128,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",129,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",130,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",131,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",132,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",5,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",10,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::stream","",136,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",137,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",138,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",144,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",139,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",23,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",140,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",142,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",141,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",145,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",150,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",149,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",146,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",147,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",148,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",153,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::sink","",165,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",167,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",168,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",169,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","futures_util::io","",180,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",181,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",182,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",184,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",187,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",188,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",189,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",190,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",191,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",192,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",193,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",195,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",199,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",200,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",201,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll","futures_util::lock","",202,[[["pin"],["self"],["context"]],["poll"]]],[11,"is_terminated","futures_util::future","",94,[[["self"]],["bool"]]],[11,"is_terminated","","",6,[[["self"]],["bool"]]],[11,"is_terminated","","",98,[[["self"]],["bool"]]],[11,"is_terminated","","",100,[[["self"]],["bool"]]],[11,"is_terminated","","",96,[[["self"]],["bool"]]],[11,"is_terminated","","",101,[[["self"]],["bool"]]],[11,"is_terminated","","",99,[[["self"]],["bool"]]],[11,"is_terminated","","",8,[[["self"]],["bool"]]],[11,"is_terminated","","",104,[[["self"]],["bool"]]],[11,"is_terminated","","",105,[[["self"]],["bool"]]],[11,"is_terminated","","",107,[[["self"]],["bool"]]],[11,"is_terminated","","",106,[[["self"]],["bool"]]],[11,"is_terminated","","",108,[[["self"]],["bool"]]],[11,"is_terminated","","",109,[[["self"]],["bool"]]],[11,"is_terminated","","",110,[[["self"]],["bool"]]],[11,"is_terminated","","",111,[[["self"]],["bool"]]],[11,"is_terminated","","",113,[[["self"]],["bool"]]],[11,"is_terminated","","",115,[[["self"]],["bool"]]],[11,"is_terminated","","",116,[[["self"]],["bool"]]],[11,"is_terminated","","",4,[[["self"]],["bool"]]],[11,"is_terminated","","",117,[[["self"]],["bool"]]],[11,"is_terminated","","",9,[[["self"]],["bool"]]],[11,"is_terminated","","",119,[[["self"]],["bool"]]],[11,"is_terminated","","",120,[[["self"]],["bool"]]],[11,"is_terminated","","",121,[[["self"]],["bool"]]],[11,"is_terminated","","",122,[[["self"]],["bool"]]],[11,"is_terminated","","",124,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",136,[[["self"]],["bool"]]],[11,"is_terminated","","",137,[[["self"]],["bool"]]],[11,"is_terminated","","",138,[[["self"]],["bool"]]],[11,"is_terminated","","",144,[[["self"]],["bool"]]],[11,"is_terminated","","",139,[[["self"]],["bool"]]],[11,"is_terminated","","",23,[[["self"]],["bool"]]],[11,"is_terminated","","",140,[[["self"]],["bool"]]],[11,"is_terminated","","",142,[[["self"]],["bool"]]],[11,"is_terminated","","",141,[[["self"]],["bool"]]],[11,"is_terminated","","",145,[[["self"]],["bool"]]],[11,"is_terminated","","",150,[[["self"]],["bool"]]],[11,"is_terminated","","",146,[[["self"]],["bool"]]],[11,"is_terminated","","",148,[[["self"]],["bool"]]],[11,"is_terminated","","",153,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::lock","",202,[[["self"]],["bool"]]],[11,"poll_next","futures_util::future","",95,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",97,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",97,[[["self"]]]],[11,"poll_next","","",114,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",112,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","futures_util::stream","",135,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",135,[[["self"]]]],[11,"poll_next","","",18,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",18,[[["self"]]]],[11,"poll_next","","",19,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",19,[[["self"]]]],[11,"poll_next","","",20,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",20,[[["self"]]]],[11,"poll_next","","",21,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",22,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"poll_next","","",24,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"poll_next","","",25,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",25,[[["self"]]]],[11,"poll_next","","",26,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",26,[[["self"]]]],[11,"poll_next","","",27,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",27,[[["self"]]]],[11,"poll_next","","",28,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",28,[[["self"]]]],[11,"poll_next","","",29,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",29,[[["self"]]]],[11,"poll_next","","",30,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",30,[[["self"]]]],[11,"poll_next","","",31,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",31,[[["self"]]]],[11,"poll_next","","",32,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",32,[[["self"]]]],[11,"poll_next","","",33,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",33,[[["self"]]]],[11,"poll_next","","",34,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"poll_next","","",35,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",35,[[["self"]]]],[11,"poll_next","","",36,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",36,[[["self"]]]],[11,"poll_next","","",37,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",143,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",143,[[["self"]]]],[11,"poll_next","","",39,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",39,[[["self"]]]],[11,"poll_next","","",40,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",40,[[["self"]]]],[11,"poll_next","","",41,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",41,[[["self"]]]],[11,"poll_next","","",42,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",42,[[["self"]]]],[11,"poll_next","","",43,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",43,[[["self"]]]],[11,"poll_next","","",44,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",44,[[["self"]]]],[11,"poll_next","","",45,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",45,[[["self"]]]],[11,"poll_next","","",46,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",46,[[["self"]]]],[11,"poll_next","","",47,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",47,[[["self"]]]],[11,"poll_next","","",48,[[["pin"],["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"size_hint","","",48,[[["self"]]]],[11,"poll_next","","",49,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",151,[[["pin"],["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"poll_next","","",50,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",50,[[["self"]]]],[11,"poll_next","","",51,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",154,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",154,[[["self"]]]],[11,"poll_next","","",155,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",155,[[["self"]]]],[11,"poll_next","","",156,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",156,[[["self"]]]],[11,"poll_next","","",157,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",157,[[["self"]]]],[11,"poll_next","","",158,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",158,[[["self"]]]],[11,"poll_next","","",159,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",52,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",160,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",53,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",53,[[["self"]]]],[11,"poll_next","futures_util::stream::futures_unordered","",54,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",54,[[["self"]]]],[11,"poll_next","futures_util::stream","",55,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","futures_util::sink","",60,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",60,[[["self"]]]],[11,"poll_next","","",61,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",61,[[["self"]]]],[11,"poll_next","","",62,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",62,[[["self"]]]],[11,"poll_next","","",63,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",63,[[["self"]]]],[11,"poll_next","","",64,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",64,[[["self"]]]],[11,"poll_next","futures_util::io","",186,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"is_terminated","futures_util::future","",95,[[["self"]],["bool"]]],[11,"is_terminated","","",97,[[["self"]],["bool"]]],[11,"is_terminated","","",114,[[["self"]],["bool"]]],[11,"is_terminated","","",112,[[["self"]],["bool"]]],[11,"is_terminated","","",5,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",135,[[["self"]],["bool"]]],[11,"is_terminated","","",18,[[["self"]],["bool"]]],[11,"is_terminated","","",19,[[["self"]],["bool"]]],[11,"is_terminated","","",20,[[["self"]],["bool"]]],[11,"is_terminated","","",21,[[["self"]],["bool"]]],[11,"is_terminated","","",22,[[["self"]],["bool"]]],[11,"is_terminated","","",24,[[["self"]],["bool"]]],[11,"is_terminated","","",25,[[["self"]],["bool"]]],[11,"is_terminated","","",26,[[["self"]],["bool"]]],[11,"is_terminated","","",27,[[["self"]],["bool"]]],[11,"is_terminated","","",28,[[["self"]],["bool"]]],[11,"is_terminated","","",29,[[["self"]],["bool"]]],[11,"is_terminated","","",30,[[["self"]],["bool"]]],[11,"is_terminated","","",31,[[["self"]],["bool"]]],[11,"is_terminated","","",32,[[["self"]],["bool"]]],[11,"is_terminated","","",33,[[["self"]],["bool"]]],[11,"is_terminated","","",34,[[["self"]],["bool"]]],[11,"is_terminated","","",35,[[["self"]],["bool"]]],[11,"is_terminated","","",143,[[["self"]],["bool"]]],[11,"is_terminated","","",39,[[["self"]],["bool"]]],[11,"is_terminated","","",40,[[["self"]],["bool"]]],[11,"is_terminated","","",41,[[["self"]],["bool"]]],[11,"is_terminated","","",42,[[["self"]],["bool"]]],[11,"is_terminated","","",43,[[["self"]],["bool"]]],[11,"is_terminated","","",44,[[["self"]],["bool"]]],[11,"is_terminated","","",45,[[["self"]],["bool"]]],[11,"is_terminated","","",46,[[["self"]],["bool"]]],[11,"is_terminated","","",47,[[["self"]],["bool"]]],[11,"is_terminated","","",48,[[["self"]],["bool"]]],[11,"is_terminated","","",49,[[["self"]],["bool"]]],[11,"is_terminated","","",50,[[["self"]],["bool"]]],[11,"is_terminated","","",155,[[["self"]],["bool"]]],[11,"is_terminated","","",156,[[["self"]],["bool"]]],[11,"is_terminated","","",157,[[["self"]],["bool"]]],[11,"is_terminated","","",158,[[["self"]],["bool"]]],[11,"is_terminated","","",52,[[["self"]],["bool"]]],[11,"is_terminated","","",160,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream::futures_unordered","",54,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::stream","",55,[[["self"]],["bool"]]],[11,"is_terminated","futures_util::sink","",60,[[["self"]],["bool"]]],[11,"is_terminated","","",61,[[["self"]],["bool"]]],[11,"is_terminated","","",63,[[["self"]],["bool"]]],[11,"is_terminated","","",64,[[["self"]],["bool"]]],[11,"spawn_obj","futures_util::stream::futures_unordered","",54,[[["futureobj"],["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_obj","","",54,[[["localfutureobj"],["self"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"poll_ready","futures_util::future","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",114,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",114,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",112,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",112,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",5,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::stream","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",18,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",18,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",19,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",19,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",20,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",20,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",21,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",22,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",22,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",24,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",24,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",25,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",25,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",26,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",26,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",27,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",27,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",28,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",28,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",29,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",29,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",30,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",30,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",31,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",31,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",33,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",33,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",34,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",34,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",35,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",35,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",36,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",36,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",38,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",38,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",38,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",38,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",39,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",39,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",40,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",40,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",41,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",41,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",42,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",42,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",43,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",43,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",44,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",44,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",45,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",45,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",46,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",46,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",47,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",47,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",48,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",48,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",49,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",49,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",50,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",50,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",51,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",51,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::sink","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",166,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",166,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",59,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",59,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",60,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",60,[[["context"],["pin"],["self"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",61,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",61,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",62,[[["u"],["pin"],["self"]],["result"]]],[11,"poll_flush","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",62,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",63,[[["u"],["pin"],["self"]],["result"]]],[11,"poll_flush","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",63,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",64,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",64,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_ready","futures_util::io","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",185,[[["pin"],["self"],["item"]],["result"]]],[11,"poll_flush","","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",185,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_read","futures_util::future","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_vectored","","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","futures_util::io","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",81,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",81,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",183,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",194,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",194,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",197,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_vectored","","",197,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read","","",83,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write","futures_util::future","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_vectored","","",5,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",152,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",152,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","futures_util::io","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",78,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",79,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",80,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",82,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",196,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_vectored","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",198,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_seek","futures_util::future","",5,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","futures_util::io","",78,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",79,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",80,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_seek","","",82,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_fill_buf","futures_util::future","",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",5,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","futures_util::stream","",152,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",152,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","futures_util::io","",78,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",78,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",79,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",79,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",80,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",80,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",81,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",81,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",82,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",82,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",183,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",183,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",83,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",83,[[["pin"],["self"],["usize"]]]],[11,"new","futures_util::task","Create a `FutureObj` from a custom trait object…",92,[[["f"]],["futureobj"]]],[11,"new","","Create a `LocalFutureObj` from a custom trait object…",93,[[["f"]],["localfutureobj"]]],[11,"into_future_obj","","Converts the `LocalFutureObj` into a `FutureObj`.",93,[[],["futureobj"]]],[11,"map","futures_util::future","Map this future's output to a different type, returning a…",12,[[["f"]],["map"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["f"]],["then"]]],[11,"left_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"right_future","","Wrap this future in an `Either` future, making it the…",12,[[],["either"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the output of…",12,[[],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[],["fuse"]]],[11,"inspect","","Do something with the output of a future before passing it…",12,[[["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[],["shared"]]],[11,"remote_handle","","Turn this future into a future that yields `()` on…",12,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",12,[[],["boxfuture"]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",12,[[],["localboxfuture"]]],[11,"unit_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["uniterror"]]],[11,"never_error","","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…",12,[[],["nevererror"]]],[11,"poll_unpin","","A convenience for calling `Future::poll` on `Unpin` future…",12,[[["self"],["context"]],["poll"]]],[11,"now_or_never","","Evaluates and consumes the future, returning the resulting…",12,[[],["option"]]],[11,"flatten_sink","","Flattens the execution of this future when the successful…",13,[[],["flattensink"]]],[11,"map_ok","","Maps this future's success value to a different value.",13,[[["f"]],["mapok"]]],[11,"map_ok_or_else","","Maps this future's success value to a different value, and…",13,[[["f"],["e"]],["mapokorelse"]]],[11,"map_err","","Maps this future's error value to a different value.",13,[[["f"]],["maperr"]]],[11,"err_into","","Maps this future's `Error` to a new error type using the…",13,[[],["errinto"]]],[11,"and_then","","Executes another future after this one resolves…",13,[[["f"]],["andthen"]]],[11,"or_else","","Executes another future if this one resolves to an error.…",13,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of a future before…",13,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of a future before…",13,[[["f"]],["inspecterr"]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful…",13,[[],["tryflattenstream"]]],[11,"unwrap_or_else","","Unwraps this future's ouput, producing a future with this…",13,[[["f"]],["unwraporelse"]]],[11,"into_future","","Wraps a [`TryFuture`] into a type that implements `Future`.",13,[[],["intofuture"]]],[11,"try_poll_unpin","","A convenience method for calling [`TryFuture::try_poll`]…",13,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"next","futures_util::stream","Creates a future that resolves to the next item in the…",56,[[["self"]],["next"]]],[11,"into_future","","Converts this stream into a future of `(next_item,…",56,[[],["streamfuture"]]],[11,"map","","Maps this stream's items to a different type, returning a…",56,[[["f"]],["map"]]],[11,"enumerate","","Creates a stream which gives the current iteration count…",56,[[],["enumerate"]]],[11,"filter","","Filters the values produced by this stream according to…",56,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",56,[[["f"]],["filtermap"]]],[11,"then","","Computes from this stream's items new items of a different…",56,[[["f"]],["then"]]],[11,"collect","","Transforms a stream into a collection, returning a future…",56,[[],[["extend"],["default"],["collect"]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",56,[[],["concat"]]],[11,"fold","","Execute an accumulating asynchronous computation over a…",56,[[["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",56,[[],["flatten"]]],[11,"scan","","Combinator similar to [`StreamExt::fold`] that holds…",56,[[["s"],["f"]],["scan"]]],[11,"skip_while","","Skip elements on this stream while the provided…",56,[[["f"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the provided…",56,[[["f"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreach"]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided…",56,[[["f"]],["foreachconcurrent"]]],[11,"take","","Creates a new stream of at most `n` items of the…",56,[[["usize"]],["take"]]],[11,"skip","","Creates a new stream which skips `n` items of the…",56,[[["usize"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll_next` will never again be…",56,[[],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",56,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",56,[[],["catchunwind"]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",56,[[],["boxstream"]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",56,[[],["localboxstream"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",56,[[["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",56,[[["usize"]],["bufferunordered"]]],[11,"zip","","An adapter for zipping two streams together.",56,[[["st"]],["zip"]]],[11,"chain","","Adapter for chaining two streams.",56,[[["st"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",56,[[],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",56,[[["usize"]],["chunks"]]],[11,"forward","","A future that completes after the given stream has been…",56,[[["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",56,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards…",56,[[["f"]],["inspect"]]],[11,"left_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"right_stream","","Wrap this stream in an `Either` stream, making it the…",56,[[],["either"]]],[11,"poll_next_unpin","","A convenience method for calling [`Stream::poll_next`] on…",56,[[["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"select_next_some","","Returns a [`Future`] that resolves when the next item in…",56,[[["self"]],["selectnextsome"]]],[11,"err_into","","Wraps the current stream in a new stream which converts…",57,[[],["errinto"]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["mapok"]]],[11,"map_err","","Wraps the current stream in a new stream which maps the…",57,[[["f"]],["maperr"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",57,[[["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",57,[[["f"]],["orelse"]]],[11,"inspect_ok","","Do something with the success value of this stream,…",57,[[["f"]],["inspectok"]]],[11,"inspect_err","","Do something with the error value of this stream,…",57,[[["f"]],["inspecterr"]]],[11,"into_stream","","Wraps a [`TryStream`] into a type that implements `Stream`",57,[[],["intostream"]]],[11,"try_next","","Creates a future that attempts to resolve the next item in…",57,[[["self"]],["trynext"]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeach"]]],[11,"try_skip_while","","Skip elements on this stream while the provided…",57,[[["f"]],["tryskipwhile"]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the…",57,[[["f"]],["tryforeachconcurrent"]]],[11,"try_collect","","Attempt to transform a stream into a collection, returning…",57,[[],[["trycollect"],["default"],["extend"]]]],[11,"try_filter","","Attempt to filter the values produced by this stream…",57,[[["f"]],["tryfilter"]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",57,[[["f"]],["tryfiltermap"]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous…",57,[[],["tryflatten"]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous…",57,[[["t"],["f"]],["tryfold"]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",57,[[],["tryconcat"]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream…",57,[[["usize"]],["trybufferunordered"]]],[11,"try_poll_next_unpin","","A convenience method for calling…",57,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"into_async_read","","Adapter that converts this stream into an `AsyncRead`.",57,[[],["intoasyncread"]]],[11,"new","futures_util::task","Create a new [`WakerRef`] from a [`Waker`] reference.",170,[[["waker"]],["wakerref"]]],[11,"new_unowned","","Create a new [`WakerRef`] from a [`Waker`] that must not…",170,[[["waker"],["manuallydrop",["waker"]]],["wakerref"]]],[11,"new","","Create an `AtomicWaker`.",171,[[],["atomicwaker"]]],[11,"register","","Registers the waker to be notified on calls to `wake`.",171,[[["waker"],["self"]]]],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",171,[[["self"]]]],[11,"take","","Returns the last `Waker` passed to `register`, so that the…",171,[[["self"]],[["waker"],["option",["waker"]]]]],[11,"from_waker","","Create a new `Context` from a `&Waker`.",172,[[["waker"]],["context"]]],[11,"waker","","Returns a reference to the `Waker` for the current task.",172,[[["self"]],["waker"]]],[11,"map","","Changes the ready value of this `Poll` with the closure…",67,[[["f"]],["poll"]]],[11,"is_ready","","Returns `true` if this is `Poll::Ready`",67,[[["self"]],["bool"]]],[11,"is_pending","","Returns `true` if this is `Poll::Pending`",67,[[["self"]],["bool"]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",67,[[["f"]],[["result"],["poll",["result"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",67,[[["f"]],[["poll",["result"]],["result"]]]],[11,"map_ok","","Changes the success value of this `Poll` with the closure…",67,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"map_err","","Changes the error value of this `Poll` with the closure…",67,[[["f"]],[["option",["result"]],["poll",["option"]]]]],[11,"wake","","Wake up the task associated with this `Waker`.",173,[[]]],[11,"wake_by_ref","","Wake up the task associated with this `Waker` without…",173,[[["self"]]]],[11,"will_wake","","Returns `true` if this `Waker` and another `Waker` have…",173,[[["waker"],["self"]],["bool"]]],[11,"from_raw","","Creates a new `Waker` from [`RawWaker`].",173,[[["rawwaker"]],["waker"]]],[11,"new","","Creates a new `RawWaker` from the provided `data` pointer…",174,[[["rawwakervtable"]],["rawwaker"]]],[11,"new","","Creates a new `RawWakerVTable` from the provided `clone`,…",175,[[],["rawwakervtable"]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",176,[[],["spawnerror"]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut…",176,[[["self"]],["bool"]]],[11,"spawn","","Spawns a task that polls the given future with output `()`…",70,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion…",70,[[["self"],["fut"]],[["result",["remotehandle","spawnerror"]],["remotehandle"],["spawnerror"]]]],[11,"spawn_local","","Spawns a task that polls the given future with output `()`…",71,[[["self"],["fut"]],[["result",["spawnerror"]],["spawnerror"]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion…",71,[[["self"],["fut"]],[["result",["remotehandle","spawnerror"]],["remotehandle"],["spawnerror"]]]],[11,"new","futures_util::io","Creates a new I/O error from a known kind of error as well…",177,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",177,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",177,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",177,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",177,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",177,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",177,[[["self"]],["errorkind"]]],[11,"new","","Creates a new `IoSlice` wrapping a byte slice.",178,[[],["ioslice"]]],[11,"advance","","Advance the internal cursor of the slice.",178,[[["usize"]]]],[11,"new","","Creates a new `IoSliceMut` wrapping a byte slice.",179,[[],["ioslicemut"]]],[11,"advance","","Advance the internal cursor of the slice.",179,[[["usize"]]]]],"p":[[8,"FusedFuture"],[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[4,"Either"],[3,"Fuse"],[3,"RemoteHandle"],[3,"Shared"],[3,"Ready"],[3,"Abortable"],[3,"AbortHandle"],[8,"FutureExt"],[8,"TryFutureExt"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[3,"ReuniteError"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"SplitStream"],[3,"SplitSink"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"IntoStream"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TrySkipWhile"],[3,"TryBufferUnordered"],[3,"Select"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"SelectAll"],[8,"StreamExt"],[8,"TryStreamExt"],[8,"Sink"],[3,"Fanout"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[8,"SinkExt"],[8,"ArcWake"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Chain"],[3,"Cursor"],[3,"Take"],[3,"Window"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Flatten"],[3,"FlattenStream"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"NeverError"],[3,"Then"],[3,"UnitError"],[3,"CatchUnwind"],[3,"Remote"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"FlattenSink"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Fold"],[3,"ForEach"],[3,"Next"],[3,"Peek"],[3,"SelectNextSome"],[3,"CatchUnwind"],[3,"Forward"],[3,"ForEachConcurrent"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TryForEach"],[3,"TryNext"],[3,"TryUnfold"],[3,"IntoAsyncRead"],[3,"TryForEachConcurrent"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Unfold"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"Close"],[3,"Drain"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[3,"MutexLockFuture"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],["mappedsequence"]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[["u"],["f"]],["u"]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[["t"]]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[["t"]]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray"]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray"]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray"]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],["option"]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","generic_array::iter","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"map","generic_array","",10,[[["f"]],["mappedsequence"]]],[11,"zip","","",10,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","",10,[[["u"],["f"]],["u"]]],[11,"generate","","",10,[[["f"]],["genericarray"]]],[11,"append","","",10,[[["t"]]]],[11,"prepend","","",10,[[["t"]]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","generic_array::iter","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","generic_array","",10,[[["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["genericarray"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["genericarray"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","generic_array::iter","",3,[[["self"]]]],[11,"hash","generic_array","",10,[[["self"],["h"]]]],[11,"next","generic_array::iter","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"count","","",3,[[],["usize"]]],[11,"nth","","",3,[[["self"],["usize"]],["option"]]],[11,"last","","",3,[[],["option"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"from_iter","generic_array","",10,[[["i"]],["genericarray"]]],[11,"into_iter","","",10,[[]]],[11,"len","generic_array::iter","",3,[[["self"]],["usize"]]],[11,"as_ref","generic_array","",10,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["genericarray"]]],[11,"clone","generic_array::iter","",3,[[["self"]],["self"]]],[11,"default","generic_array","",10,[[],["self"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["option",["i32"]],["i32"]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["heck"] = {"doc":"heck is a case conversion library.","i":[[8,"CamelCase","heck","This trait defines a camel case conversion.",null,null],[10,"to_camel_case","","Convert this type to camel case.",0,[[["self"]]]],[8,"KebabCase","","This trait defines a kebab case conversion.",null,null],[10,"to_kebab_case","","Convert this type to kebab case.",1,[[["self"]]]],[8,"MixedCase","","This trait defines a mixed case conversion.",null,null],[10,"to_mixed_case","","Convert this type to mixed case.",2,[[["self"]]]],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",null,null],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,[[["self"]]]],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",null,null],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,[[["self"]]]],[8,"SnakeCase","","This trait defines a camel case conversion.",null,null],[10,"to_snake_case","","Convert this type to snake case.",5,[[["self"]]]],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",null,null],[10,"to_snek_case","","Convert this type to snek case.",6,[[["self"]]]],[8,"TitleCase","","This trait defines a title case conversion.",null,null],[10,"to_title_case","","Convert this type to title case.",7,[[["self"]]]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]};
searchIndex["hex"] = {"doc":"Encoding and decoding hex strings.","i":[[4,"FromHexError","hex","The error type for decoding a hex string into `Vec<u8>` or…",null,null],[13,"InvalidHexCharacter","","An invalid character was found. Valid ones are: `0...9`,…",0,null],[12,"c","hex::FromHexError","",0,null],[12,"index","","",0,null],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,null],[13,"InvalidStringLength","","If the hex string is decoded into a fixed sized container,…",0,null],[5,"encode","","Encodes `data` as hex string using lowercase characters.",null,[[["asref"]],["string"]]],[5,"encode_upper","","Encodes `data` as hex string using uppercase characters.",null,[[["asref"]],["string"]]],[5,"decode","","Decodes a hex string into raw bytes.",null,[[["asref"]],[["vec",["u8"]],["fromhexerror"],["result",["vec","fromhexerror"]]]]],[5,"decode_to_slice","","Decode a hex string into a mutable bytes slice.",null,[[["asref"]],[["fromhexerror"],["result",["fromhexerror"]]]]],[5,"encode_to_slice","","Encodes some bytes into a mutable slice of bytes.",null,[[["asref"]],[["fromhexerror"],["result",["fromhexerror"]]]]],[8,"ToHex","","Encoding values as hex string.",null,null],[10,"encode_hex","","Encode the hex strict representing `self` into the…",1,[[["self"]],[["fromiterator",["char"]],["char"]]]],[10,"encode_hex_upper","","Encode the hex strict representing `self` into the…",1,[[["self"]],[["fromiterator",["char"]],["char"]]]],[8,"FromHex","","Types that can be decoded from a hex string.",null,null],[16,"Error","","",2,null],[10,"from_hex","","Creates an instance of type `Self` from the given hex…",2,[[["asref"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["fromhexerror"]]],[11,"eq","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["hmac"] = {"doc":"Generic implementation of Hash-based Message…","i":[[8,"Mac","hmac","The `Mac` trait defines methods for a Message…",null,null],[16,"OutputSize","","",0,null],[16,"KeySize","","",0,null],[10,"new","","Create new MAC instance from key with fixed size.",0,[[["genericarray"]],["self"]]],[11,"new_varkey","","Create new MAC instance from key with variable size.",0,[[],[["result",["invalidkeylength"]],["invalidkeylength"]]]],[10,"input","","Process input data.",0,[[["self"]]]],[10,"reset","","Reset `Mac` instance.",0,[[["self"]]]],[10,"result","","Obtain the result of a `Mac` computation as a `MacResult`…",0,[[],["macresult"]]],[11,"result_reset","","Obtain the result of a `Mac` computation as a `MacResult`…",0,[[["self"]],["macresult"]]],[11,"verify","","Check if code is correct for the processed input.",0,[[],[["macerror"],["result",["macerror"]]]]],[3,"Hmac","","The `Hmac` struct represents an HMAC using a given hash…",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["hmac"]]],[11,"new","","",1,[[["genericarray"]],["self"]]],[11,"new_varkey","","",1,[[],[["result",["invalidkeylength"]],["invalidkeylength"]]]],[11,"input","","",1,[[["self"]]]],[11,"result","","",1,[[],["macresult"]]],[11,"reset","","",1,[[["self"]]]]],"p":[[8,"Mac"],[3,"Hmac"]]};
searchIndex["hostname"] = {"doc":"A crate with utilities to get and set the system's host…","i":[[5,"get","hostname","Return the system hostname.",null,[[],[["result",["osstring"]],["osstring"]]]]],"p":[]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","i":[[3,"Config","idna","",null,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"domain_to_ascii","","The domain to ASCII algorithm.",null,[[["str"]],[["string"],["errors"],["result",["string","errors"]]]]],[5,"domain_to_ascii_strict","","The domain to ASCII algorithm, with the `beStrict` flag set.",null,[[["str"]],[["string"],["errors"],["result",["string","errors"]]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,[[["str"]]]],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,[[["str"]],[["string"],["option",["string"]]]]],[5,"decode","","Convert Punycode to Unicode.",null,[[["str"]],[["option",["vec"]],["vec",["char"]]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,[[["str"]],[["string"],["option",["string"]]]]],[5,"encode","","Convert Unicode to Punycode.",null,[[],[["string"],["option",["string"]]]]],[11,"use_std3_ascii_rules","idna","",0,[[["bool"]],["self"]]],[11,"transitional_processing","","",0,[[["bool"]],["self"]]],[11,"verify_dns_length","","",0,[[["bool"]],["self"]]],[11,"check_hyphens","","",0,[[["bool"]],["self"]]],[11,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",0,[[["str"]],[["string"],["result",["string","errors"]],["errors"]]]],[11,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",0,[[["str"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Config"],[3,"Errors"]]};
searchIndex["indexmap"] = {"doc":"[`IndexMap`] is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",0,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,null],[8,"MutableKeys","","Opt-in mutable access to keys.",null,null],[16,"Key","","",1,null],[16,"Value","","",1,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",1,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",1,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",1,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",2,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",2,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",2,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",2,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",2,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",2,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"and_modify","","Modifies the entry if it is occupied.",0,[[["f"]],["self"]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",0,[[],["v"]]],[11,"key","","",3,[[["self"]],["k"]]],[11,"get","","",3,[[["self"]],["v"]]],[11,"get_mut","","",3,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",3,[[["self"]],["usize"]]],[11,"into_mut","","",3,[[],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"into_key","","",4,[[],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",4,[[["self"]],["usize"]]],[11,"insert","","",4,[[["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",2,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",2,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",2,[[["self"],["k"],["v"]],["option"]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[["self"],["k"],["v"]]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",2,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",2,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",2,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",2,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",2,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",2,[[["self"],["q"]],[["v"],["option"]]]],[11,"get_full","","Return item index, key and value",2,[[["self"],["q"]],["option"]]],[11,"get_mut","","",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full_mut","","",2,[[["self"],["q"]],["option"]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",2,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",2,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",2,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",2,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",2,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Create a new set. (Does not allocate.)",5,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",5,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",5,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of elements in the set.",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",5,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",5,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",5,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",5,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",5,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",5,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",5,[[["self"],["t"]],["bool"]]],[11,"insert_full","","Insert the value into the set, and get its index.",5,[[["self"],["t"]]]],[11,"iter","","Return an iterator over the values of the set, in their…",5,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",5,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",5,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",5,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",5,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",5,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",5,[[["self"],["q"]],[["t"],["option"]]]],[11,"get_full","","Return item index and value",5,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",5,[[["self"],["t"]],["option"]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",5,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",5,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",5,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",5,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",5,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",5,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",5,[[["self"],["usize"]],[["t"],["option"]]]],[11,"swap_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["k"],["self"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","indexmap::set","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","indexmap::map","",2,[[["self"],["q"]],["option"]]],[11,"retain2","","",2,[[["self"],["f"]]]],[11,"__private_marker","","",2,[[["self"]],["privatemarker"]]],[11,"next_back","","",7,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"len","indexmap::map","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","indexmap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator"],["self"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator"],["self"]]]],[11,"extend","indexmap::set","",5,[[["self"],["intoiterator"]]]],[11,"extend","","",5,[[["self"],["intoiterator"]]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",5,[[]]],[11,"next","indexmap::map","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"count","","",7,[[],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[],["option"]]],[11,"collect","","",7,[[],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"count","","",8,[[],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[],["option"]]],[11,"collect","","",8,[[],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"count","","",9,[[],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[],["option"]]],[11,"collect","","",9,[[],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"count","","",10,[[],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[],["option"]]],[11,"collect","","",10,[[],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"count","","",11,[[],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[],["option"]]],[11,"collect","","",11,[[],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"count","","",12,[[],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[],["option"]]],[11,"collect","","",12,[[],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"count","","",13,[[],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[],["option"]]],[11,"collect","","",13,[[],["c"]]],[11,"next","indexmap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"count","","",14,[[],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[],["option"]]],[11,"collect","","",14,[[],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"count","","",15,[[],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[],["option"]]],[11,"collect","","",15,[[],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"count","","",16,[[],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[],["option"]]],[11,"collect","","",16,[[],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["b"],["f"]],["b"]]],[11,"clone","indexmap::map","",2,[[["self"]],["indexmap"]]],[11,"clone","","",7,[[["self"]],["keys"]]],[11,"clone","","",8,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["iter"]]],[11,"clone","indexmap::set","",5,[[["self"]],["indexset"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",2,[[],["self"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",5,[[],["self"]]],[11,"eq","indexmap::map","",2,[[["self"],["indexmap"]],["bool"]]],[11,"eq","indexmap::set","",5,[[["indexset"],["self"]],["bool"]]],[11,"fmt","indexmap::map","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","indexmap::set","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"index","indexmap::map","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"from_iter","","Create an `IndexMap` from the sequence of key-value pairs…",2,[[["intoiterator"]],["self"]]],[11,"from_iter","indexmap::set","",5,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IndexSet"],[8,"Equivalent"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O…","i":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,[[]]],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",null,[[]]],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,[[],[["option",["iovec"]],["iovec"]]]],[11,"from_bytes_mut","","",0,[[],[["iovec"],["option",["iovec"]]]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]]],"p":[[3,"IoVec"]]};
searchIndex["itoa"] = {"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["integer"],["write"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer"],["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",35,null],[12,"ee_origin","","",35,null],[12,"ee_type","","",35,null],[12,"ee_code","","",35,null],[12,"ee_pad","","",35,null],[12,"ee_info","","",35,null],[12,"ee_data","","",35,null],[3,"epoll_event","","",null,null],[12,"events","","",36,null],[12,"u64","","",36,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",37,null],[12,"sun_path","","",37,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",38,null],[3,"utsname","","",null,null],[12,"sysname","","",39,null],[12,"nodename","","",39,null],[12,"release","","",39,null],[12,"version","","",39,null],[12,"machine","","",39,null],[12,"domainname","","",39,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",40,null],[12,"sigev_signo","","",40,null],[12,"sigev_notify","","",40,null],[12,"sigev_notify_thread_id","","",40,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",41,null],[12,"rlim_max","","",41,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",42,null],[12,"gl_pathv","","",42,null],[12,"gl_offs","","",42,null],[12,"gl_flags","","",42,null],[3,"passwd","","",null,null],[12,"pw_name","","",43,null],[12,"pw_passwd","","",43,null],[12,"pw_uid","","",43,null],[12,"pw_gid","","",43,null],[12,"pw_gecos","","",43,null],[12,"pw_dir","","",43,null],[12,"pw_shell","","",43,null],[3,"spwd","","",null,null],[12,"sp_namp","","",44,null],[12,"sp_pwdp","","",44,null],[12,"sp_lstchg","","",44,null],[12,"sp_min","","",44,null],[12,"sp_max","","",44,null],[12,"sp_warn","","",44,null],[12,"sp_inact","","",44,null],[12,"sp_expire","","",44,null],[12,"sp_flag","","",44,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",45,null],[12,"dqb_bsoftlimit","","",45,null],[12,"dqb_curspace","","",45,null],[12,"dqb_ihardlimit","","",45,null],[12,"dqb_isoftlimit","","",45,null],[12,"dqb_curinodes","","",45,null],[12,"dqb_btime","","",45,null],[12,"dqb_itime","","",45,null],[12,"dqb_valid","","",45,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",46,null],[12,"ssi_errno","","",46,null],[12,"ssi_code","","",46,null],[12,"ssi_pid","","",46,null],[12,"ssi_uid","","",46,null],[12,"ssi_fd","","",46,null],[12,"ssi_tid","","",46,null],[12,"ssi_band","","",46,null],[12,"ssi_overrun","","",46,null],[12,"ssi_trapno","","",46,null],[12,"ssi_status","","",46,null],[12,"ssi_int","","",46,null],[12,"ssi_ptr","","",46,null],[12,"ssi_utime","","",46,null],[12,"ssi_stime","","",46,null],[12,"ssi_addr","","",46,null],[12,"ssi_addr_lsb","","",46,null],[12,"ssi_syscall","","",46,null],[12,"ssi_call_addr","","",46,null],[12,"ssi_arch","","",46,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",47,null],[12,"it_value","","",47,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",48,null],[12,"mr_type","","",48,null],[12,"mr_alen","","",48,null],[12,"mr_address","","",48,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",49,null],[12,"if_name","","",49,null],[3,"msginfo","","",null,null],[12,"msgpool","","",50,null],[12,"msgmap","","",50,null],[12,"msgmax","","",50,null],[12,"msgmnb","","",50,null],[12,"msgmni","","",50,null],[12,"msgssz","","",50,null],[12,"msgtql","","",50,null],[12,"msgseg","","",50,null],[3,"sembuf","","",null,null],[12,"sem_num","","",51,null],[12,"sem_op","","",51,null],[12,"sem_flg","","",51,null],[3,"input_event","","",null,null],[12,"time","","",52,null],[12,"type_","","",52,null],[12,"code","","",52,null],[12,"value","","",52,null],[3,"input_id","","",null,null],[12,"bustype","","",53,null],[12,"vendor","","",53,null],[12,"product","","",53,null],[12,"version","","",53,null],[3,"input_absinfo","","",null,null],[12,"value","","",54,null],[12,"minimum","","",54,null],[12,"maximum","","",54,null],[12,"fuzz","","",54,null],[12,"flat","","",54,null],[12,"resolution","","",54,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",55,null],[12,"len","","",55,null],[12,"index","","",55,null],[12,"keycode","","",55,null],[12,"scancode","","",55,null],[3,"input_mask","","",null,null],[12,"type_","","",56,null],[12,"codes_size","","",56,null],[12,"codes_ptr","","",56,null],[3,"ff_replay","","",null,null],[12,"length","","",57,null],[12,"delay","","",57,null],[3,"ff_trigger","","",null,null],[12,"button","","",58,null],[12,"interval","","",58,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",59,null],[12,"attack_level","","",59,null],[12,"fade_length","","",59,null],[12,"fade_level","","",59,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",60,null],[12,"envelope","","",60,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",61,null],[12,"end_level","","",61,null],[12,"envelope","","",61,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",62,null],[12,"left_saturation","","",62,null],[12,"right_coeff","","",62,null],[12,"left_coeff","","",62,null],[12,"deadband","","",62,null],[12,"center","","",62,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",63,null],[12,"period","","",63,null],[12,"magnitude","","",63,null],[12,"offset","","",63,null],[12,"phase","","",63,null],[12,"envelope","","",63,null],[12,"custom_len","","",63,null],[12,"custom_data","","",63,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",64,null],[12,"weak_magnitude","","",64,null],[3,"ff_effect","","",null,null],[12,"type_","","",65,null],[12,"id","","",65,null],[12,"direction","","",65,null],[12,"trigger","","",65,null],[12,"replay","","",65,null],[12,"u","","",65,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",66,null],[12,"dlpi_name","","",66,null],[12,"dlpi_phdr","","",66,null],[12,"dlpi_phnum","","",66,null],[12,"dlpi_adds","","",66,null],[12,"dlpi_subs","","",66,null],[12,"dlpi_tls_modid","","",66,null],[12,"dlpi_tls_data","","",66,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",68,null],[12,"e_type","","",68,null],[12,"e_machine","","",68,null],[12,"e_version","","",68,null],[12,"e_entry","","",68,null],[12,"e_phoff","","",68,null],[12,"e_shoff","","",68,null],[12,"e_flags","","",68,null],[12,"e_ehsize","","",68,null],[12,"e_phentsize","","",68,null],[12,"e_phnum","","",68,null],[12,"e_shentsize","","",68,null],[12,"e_shnum","","",68,null],[12,"e_shstrndx","","",68,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",70,null],[12,"st_info","","",70,null],[12,"st_other","","",70,null],[12,"st_shndx","","",70,null],[12,"st_value","","",70,null],[12,"st_size","","",70,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_flags","","",71,null],[12,"p_align","","",71,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",72,null],[12,"p_flags","","",72,null],[12,"p_offset","","",72,null],[12,"p_vaddr","","",72,null],[12,"p_paddr","","",72,null],[12,"p_filesz","","",72,null],[12,"p_memsz","","",72,null],[12,"p_align","","",72,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",74,null],[12,"sh_type","","",74,null],[12,"sh_flags","","",74,null],[12,"sh_addr","","",74,null],[12,"sh_offset","","",74,null],[12,"sh_size","","",74,null],[12,"sh_link","","",74,null],[12,"sh_info","","",74,null],[12,"sh_addralign","","",74,null],[12,"sh_entsize","","",74,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",76,null],[12,"ch_reserved","","",76,null],[12,"ch_size","","",76,null],[12,"ch_addralign","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",84,null],[12,"nl_pid","","",84,null],[12,"nl_groups","","",84,null],[3,"dirent","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"dirent64","","",null,null],[12,"d_ino","","",86,null],[12,"d_off","","",86,null],[12,"d_reclen","","",86,null],[12,"d_type","","",86,null],[12,"d_name","","",86,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",87,null],[12,"salg_type","","",87,null],[12,"salg_feat","","",87,null],[12,"salg_mask","","",87,null],[12,"salg_name","","",87,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",88,null],[12,"iv","","",88,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",89,null],[12,"mq_maxmsg","","",89,null],[12,"mq_msgsize","","",89,null],[12,"mq_curmsgs","","",89,null],[3,"statx","","",null,null],[12,"stx_mask","","",90,null],[12,"stx_blksize","","",90,null],[12,"stx_attributes","","",90,null],[12,"stx_nlink","","",90,null],[12,"stx_uid","","",90,null],[12,"stx_gid","","",90,null],[12,"stx_mode","","",90,null],[12,"__statx_pad1","","",90,null],[12,"stx_ino","","",90,null],[12,"stx_size","","",90,null],[12,"stx_blocks","","",90,null],[12,"stx_attributes_mask","","",90,null],[12,"stx_atime","","",90,null],[12,"stx_btime","","",90,null],[12,"stx_ctime","","",90,null],[12,"stx_mtime","","",90,null],[12,"stx_rdev_major","","",90,null],[12,"stx_rdev_minor","","",90,null],[12,"stx_dev_major","","",90,null],[12,"stx_dev_minor","","",90,null],[12,"__statx_pad2","","",90,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",91,null],[12,"tv_nsec","","",91,null],[12,"__statx_timestamp_pad1","","",91,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",92,null],[12,"aio_lio_opcode","","",92,null],[12,"aio_reqprio","","",92,null],[12,"aio_buf","","",92,null],[12,"aio_nbytes","","",92,null],[12,"aio_sigevent","","",92,null],[12,"aio_offset","","",92,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",93,null],[12,"e_exit","","",93,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",94,null],[12,"tv_usec","","",94,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",95,null],[12,"gl_pathv","","",95,null],[12,"gl_offs","","",95,null],[12,"gl_flags","","",95,null],[3,"msghdr","","",null,null],[12,"msg_name","","",96,null],[12,"msg_namelen","","",96,null],[12,"msg_iov","","",96,null],[12,"msg_iovlen","","",96,null],[12,"msg_control","","",96,null],[12,"msg_controllen","","",96,null],[12,"msg_flags","","",96,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",97,null],[12,"cmsg_level","","",97,null],[12,"cmsg_type","","",97,null],[3,"termios","","",null,null],[12,"c_iflag","","",98,null],[12,"c_oflag","","",98,null],[12,"c_cflag","","",98,null],[12,"c_lflag","","",98,null],[12,"c_line","","",98,null],[12,"c_cc","","",98,null],[12,"c_ispeed","","",98,null],[12,"c_ospeed","","",98,null],[3,"mallinfo","","",null,null],[12,"arena","","",99,null],[12,"ordblks","","",99,null],[12,"smblks","","",99,null],[12,"hblks","","",99,null],[12,"hblkhd","","",99,null],[12,"usmblks","","",99,null],[12,"fsmblks","","",99,null],[12,"uordblks","","",99,null],[12,"fordblks","","",99,null],[12,"keepcost","","",99,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",100,null],[12,"nlmsg_type","","",100,null],[12,"nlmsg_flags","","",100,null],[12,"nlmsg_seq","","",100,null],[12,"nlmsg_pid","","",100,null],[3,"nlmsgerr","","",null,null],[12,"error","","",101,null],[12,"msg","","",101,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",102,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",103,null],[12,"nm_block_nr","","",103,null],[12,"nm_frame_size","","",103,null],[12,"nm_frame_nr","","",103,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",104,null],[12,"nm_len","","",104,null],[12,"nm_group","","",104,null],[12,"nm_pid","","",104,null],[12,"nm_uid","","",104,null],[12,"nm_gid","","",104,null],[3,"nlattr","","",null,null],[12,"nla_len","","",105,null],[12,"nla_type","","",105,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",106,null],[12,"rt_dst","","",106,null],[12,"rt_gateway","","",106,null],[12,"rt_genmask","","",106,null],[12,"rt_flags","","",106,null],[12,"rt_pad2","","",106,null],[12,"rt_pad3","","",106,null],[12,"rt_tos","","",106,null],[12,"rt_class","","",106,null],[12,"rt_pad4","","",106,null],[12,"rt_metric","","",106,null],[12,"rt_dev","","",106,null],[12,"rt_mtu","","",106,null],[12,"rt_window","","",106,null],[12,"rt_irtt","","",106,null],[3,"timex","","",null,null],[12,"modes","","",107,null],[12,"offset","","",107,null],[12,"freq","","",107,null],[12,"maxerror","","",107,null],[12,"esterror","","",107,null],[12,"status","","",107,null],[12,"constant","","",107,null],[12,"precision","","",107,null],[12,"tolerance","","",107,null],[12,"time","","",107,null],[12,"tick","","",107,null],[12,"ppsfreq","","",107,null],[12,"jitter","","",107,null],[12,"shift","","",107,null],[12,"stabil","","",107,null],[12,"jitcnt","","",107,null],[12,"calcnt","","",107,null],[12,"errcnt","","",107,null],[12,"stbcnt","","",107,null],[12,"tai","","",107,null],[12,"__unused1","","",107,null],[12,"__unused2","","",107,null],[12,"__unused3","","",107,null],[12,"__unused4","","",107,null],[12,"__unused5","","",107,null],[12,"__unused6","","",107,null],[12,"__unused7","","",107,null],[12,"__unused8","","",107,null],[12,"__unused9","","",107,null],[12,"__unused10","","",107,null],[12,"__unused11","","",107,null],[3,"ntptimeval","","",null,null],[12,"time","","",108,null],[12,"maxerror","","",108,null],[12,"esterror","","",108,null],[12,"tai","","",108,null],[12,"__glibc_reserved1","","",108,null],[12,"__glibc_reserved2","","",108,null],[12,"__glibc_reserved3","","",108,null],[12,"__glibc_reserved4","","",108,null],[3,"utmpx","","",null,null],[12,"ut_type","","",109,null],[12,"ut_pid","","",109,null],[12,"ut_line","","",109,null],[12,"ut_id","","",109,null],[12,"ut_user","","",109,null],[12,"ut_host","","",109,null],[12,"ut_exit","","",109,null],[12,"ut_session","","",109,null],[12,"ut_tv","","",109,null],[12,"ut_addr_v6","","",109,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",110,null],[12,"loads","","",110,null],[12,"totalram","","",110,null],[12,"freeram","","",110,null],[12,"sharedram","","",110,null],[12,"bufferram","","",110,null],[12,"totalswap","","",110,null],[12,"freeswap","","",110,null],[12,"procs","","",110,null],[12,"pad","","",110,null],[12,"totalhigh","","",110,null],[12,"freehigh","","",110,null],[12,"mem_unit","","",110,null],[12,"_f","","",110,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",111,null],[12,"msg_stime","","",111,null],[12,"msg_rtime","","",111,null],[12,"msg_ctime","","",111,null],[12,"msg_qnum","","",111,null],[12,"msg_qbytes","","",111,null],[12,"msg_lspid","","",111,null],[12,"msg_lrpid","","",111,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",112,null],[12,"sa_mask","","",112,null],[12,"sa_flags","","",112,null],[12,"sa_restorer","","",112,null],[3,"statfs","","",null,null],[12,"f_type","","",113,null],[12,"f_bsize","","",113,null],[12,"f_blocks","","",113,null],[12,"f_bfree","","",113,null],[12,"f_bavail","","",113,null],[12,"f_files","","",113,null],[12,"f_ffree","","",113,null],[12,"f_fsid","","",113,null],[12,"f_namelen","","",113,null],[12,"f_frsize","","",113,null],[3,"flock","","",null,null],[12,"l_type","","",114,null],[12,"l_whence","","",114,null],[12,"l_start","","",114,null],[12,"l_len","","",114,null],[12,"l_pid","","",114,null],[3,"flock64","","",null,null],[12,"l_type","","",115,null],[12,"l_whence","","",115,null],[12,"l_start","","",115,null],[12,"l_len","","",115,null],[12,"l_pid","","",115,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",116,null],[12,"si_errno","","",116,null],[12,"si_code","","",116,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",117,null],[12,"ss_flags","","",117,null],[12,"ss_size","","",117,null],[3,"stat","","",null,null],[12,"st_dev","","",118,null],[12,"st_ino","","",118,null],[12,"st_nlink","","",118,null],[12,"st_mode","","",118,null],[12,"st_uid","","",118,null],[12,"st_gid","","",118,null],[12,"st_rdev","","",118,null],[12,"st_size","","",118,null],[12,"st_blksize","","",118,null],[12,"st_blocks","","",118,null],[12,"st_atime","","",118,null],[12,"st_atime_nsec","","",118,null],[12,"st_mtime","","",118,null],[12,"st_mtime_nsec","","",118,null],[12,"st_ctime","","",118,null],[12,"st_ctime_nsec","","",118,null],[3,"stat64","","",null,null],[12,"st_dev","","",119,null],[12,"st_ino","","",119,null],[12,"st_nlink","","",119,null],[12,"st_mode","","",119,null],[12,"st_uid","","",119,null],[12,"st_gid","","",119,null],[12,"st_rdev","","",119,null],[12,"st_size","","",119,null],[12,"st_blksize","","",119,null],[12,"st_blocks","","",119,null],[12,"st_atime","","",119,null],[12,"st_atime_nsec","","",119,null],[12,"st_mtime","","",119,null],[12,"st_mtime_nsec","","",119,null],[12,"st_ctime","","",119,null],[12,"st_ctime_nsec","","",119,null],[3,"statfs64","","",null,null],[12,"f_type","","",120,null],[12,"f_bsize","","",120,null],[12,"f_blocks","","",120,null],[12,"f_bfree","","",120,null],[12,"f_bavail","","",120,null],[12,"f_files","","",120,null],[12,"f_ffree","","",120,null],[12,"f_fsid","","",120,null],[12,"f_namelen","","",120,null],[12,"f_frsize","","",120,null],[12,"f_flags","","",120,null],[12,"f_spare","","",120,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",121,null],[12,"f_frsize","","",121,null],[12,"f_blocks","","",121,null],[12,"f_bfree","","",121,null],[12,"f_bavail","","",121,null],[12,"f_files","","",121,null],[12,"f_ffree","","",121,null],[12,"f_favail","","",121,null],[12,"f_fsid","","",121,null],[12,"f_flag","","",121,null],[12,"f_namemax","","",121,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",122,null],[12,"exponent","","",122,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",123,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",124,null],[12,"swd","","",124,null],[12,"ftw","","",124,null],[12,"fop","","",124,null],[12,"rip","","",124,null],[12,"rdp","","",124,null],[12,"mxcsr","","",124,null],[12,"mxcr_mask","","",124,null],[12,"_st","","",124,null],[12,"_xmm","","",124,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",125,null],[12,"r14","","",125,null],[12,"r13","","",125,null],[12,"r12","","",125,null],[12,"rbp","","",125,null],[12,"rbx","","",125,null],[12,"r11","","",125,null],[12,"r10","","",125,null],[12,"r9","","",125,null],[12,"r8","","",125,null],[12,"rax","","",125,null],[12,"rcx","","",125,null],[12,"rdx","","",125,null],[12,"rsi","","",125,null],[12,"rdi","","",125,null],[12,"orig_rax","","",125,null],[12,"rip","","",125,null],[12,"cs","","",125,null],[12,"eflags","","",125,null],[12,"rsp","","",125,null],[12,"ss","","",125,null],[12,"fs_base","","",125,null],[12,"gs_base","","",125,null],[12,"ds","","",125,null],[12,"es","","",125,null],[12,"fs","","",125,null],[12,"gs","","",125,null],[3,"user","","",null,null],[12,"regs","","",126,null],[12,"u_fpvalid","","",126,null],[12,"i387","","",126,null],[12,"u_tsize","","",126,null],[12,"u_dsize","","",126,null],[12,"u_ssize","","",126,null],[12,"start_code","","",126,null],[12,"start_stack","","",126,null],[12,"signal","","",126,null],[12,"u_ar0","","",126,null],[12,"u_fpstate","","",126,null],[12,"magic","","",126,null],[12,"u_comm","","",126,null],[12,"u_debugreg","","",126,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",127,null],[12,"fpregs","","",127,null],[3,"ipc_perm","","",null,null],[12,"__key","","",128,null],[12,"uid","","",128,null],[12,"gid","","",128,null],[12,"cuid","","",128,null],[12,"cgid","","",128,null],[12,"mode","","",128,null],[12,"__seq","","",128,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",129,null],[12,"shm_segsz","","",129,null],[12,"shm_atime","","",129,null],[12,"shm_dtime","","",129,null],[12,"shm_ctime","","",129,null],[12,"shm_cpid","","",129,null],[12,"shm_lpid","","",129,null],[12,"shm_nattch","","",129,null],[3,"termios2","","",null,null],[12,"c_iflag","","",130,null],[12,"c_oflag","","",130,null],[12,"c_cflag","","",130,null],[12,"c_lflag","","",130,null],[12,"c_line","","",130,null],[12,"c_cc","","",130,null],[12,"c_ispeed","","",130,null],[12,"c_ospeed","","",130,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",131,null],[12,"imr_address","","",131,null],[12,"imr_ifindex","","",131,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",132,null],[12,"swd","","",132,null],[12,"ftw","","",132,null],[12,"fop","","",132,null],[12,"rip","","",132,null],[12,"rdp","","",132,null],[12,"mxcsr","","",132,null],[12,"mxcr_mask","","",132,null],[12,"st_space","","",132,null],[12,"xmm_space","","",132,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",133,null],[12,"uc_link","","",133,null],[12,"uc_stack","","",133,null],[12,"uc_mcontext","","",133,null],[12,"uc_sigmask","","",133,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",134,null],[12,"f_frsize","","",134,null],[12,"f_blocks","","",134,null],[12,"f_bfree","","",134,null],[12,"f_bavail","","",134,null],[12,"f_files","","",134,null],[12,"f_ffree","","",134,null],[12,"f_favail","","",134,null],[12,"f_fsid","","",134,null],[12,"f_flag","","",134,null],[12,"f_namemax","","",134,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",135,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t"],["usize"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",116,[[["self"]]]],[11,"si_value","","",116,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"fmt","","",136,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",153,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",154,[[["self"]],["file"]]],[11,"clone","","",155,[[["self"]],["fpos_t"]]],[11,"clone","","",156,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",137,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",138,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["sock_extended_err"]]],[11,"clone","","",36,[[["self"]],["epoll_event"]]],[11,"clone","","",37,[[["self"]],["sockaddr_un"]]],[11,"clone","","",38,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",39,[[["self"]],["utsname"]]],[11,"clone","","",40,[[["self"]],["sigevent"]]],[11,"clone","","",157,[[["self"]],["fpos64_t"]]],[11,"clone","","",41,[[["self"]],["rlimit64"]]],[11,"clone","","",42,[[["self"]],["glob_t"]]],[11,"clone","","",43,[[["self"]],["passwd"]]],[11,"clone","","",44,[[["self"]],["spwd"]]],[11,"clone","","",45,[[["self"]],["dqblk"]]],[11,"clone","","",46,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",47,[[["self"]],["itimerspec"]]],[11,"clone","","",139,[[["self"]],["fsid_t"]]],[11,"clone","","",48,[[["self"]],["packet_mreq"]]],[11,"clone","","",140,[[["self"]],["cpu_set_t"]]],[11,"clone","","",49,[[["self"]],["if_nameindex"]]],[11,"clone","","",50,[[["self"]],["msginfo"]]],[11,"clone","","",51,[[["self"]],["sembuf"]]],[11,"clone","","",52,[[["self"]],["input_event"]]],[11,"clone","","",53,[[["self"]],["input_id"]]],[11,"clone","","",54,[[["self"]],["input_absinfo"]]],[11,"clone","","",55,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",56,[[["self"]],["input_mask"]]],[11,"clone","","",57,[[["self"]],["ff_replay"]]],[11,"clone","","",58,[[["self"]],["ff_trigger"]]],[11,"clone","","",59,[[["self"]],["ff_envelope"]]],[11,"clone","","",60,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",61,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",62,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",63,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",64,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",65,[[["self"]],["ff_effect"]]],[11,"clone","","",66,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",67,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",69,[[["self"]],["elf32_sym"]]],[11,"clone","","",70,[[["self"]],["elf64_sym"]]],[11,"clone","","",71,[[["self"]],["elf32_phdr"]]],[11,"clone","","",72,[[["self"]],["elf64_phdr"]]],[11,"clone","","",73,[[["self"]],["elf32_shdr"]]],[11,"clone","","",74,[[["self"]],["elf64_shdr"]]],[11,"clone","","",75,[[["self"]],["elf32_chdr"]]],[11,"clone","","",76,[[["self"]],["elf64_chdr"]]],[11,"clone","","",77,[[["self"]],["ucred"]]],[11,"clone","","",78,[[["self"]],["mntent"]]],[11,"clone","","",141,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",142,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",79,[[["self"]],["genlmsghdr"]]],[11,"clone","","",80,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",81,[[["self"]],["arpd_request"]]],[11,"clone","","",82,[[["self"]],["inotify_event"]]],[11,"clone","","",83,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",84,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",85,[[["self"]],["dirent"]]],[11,"clone","","",86,[[["self"]],["dirent64"]]],[11,"clone","","",87,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",88,[[["self"]],["af_alg_iv"]]],[11,"clone","","",89,[[["self"]],["mq_attr"]]],[11,"clone","","",90,[[["self"]],["statx"]]],[11,"clone","","",91,[[["self"]],["statx_timestamp"]]],[11,"clone","","",92,[[["self"]],["aiocb"]]],[11,"clone","","",93,[[["self"]],["__exit_status"]]],[11,"clone","","",94,[[["self"]],["__timeval"]]],[11,"clone","","",95,[[["self"]],["glob64_t"]]],[11,"clone","","",96,[[["self"]],["msghdr"]]],[11,"clone","","",97,[[["self"]],["cmsghdr"]]],[11,"clone","","",98,[[["self"]],["termios"]]],[11,"clone","","",99,[[["self"]],["mallinfo"]]],[11,"clone","","",100,[[["self"]],["nlmsghdr"]]],[11,"clone","","",101,[[["self"]],["nlmsgerr"]]],[11,"clone","","",102,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",104,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",105,[[["self"]],["nlattr"]]],[11,"clone","","",106,[[["self"]],["rtentry"]]],[11,"clone","","",107,[[["self"]],["timex"]]],[11,"clone","","",108,[[["self"]],["ntptimeval"]]],[11,"clone","","",109,[[["self"]],["utmpx"]]],[11,"clone","","",143,[[["self"]],["sigset_t"]]],[11,"clone","","",110,[[["self"]],["sysinfo"]]],[11,"clone","","",111,[[["self"]],["msqid_ds"]]],[11,"clone","","",112,[[["self"]],["sigaction"]]],[11,"clone","","",113,[[["self"]],["statfs"]]],[11,"clone","","",114,[[["self"]],["flock"]]],[11,"clone","","",115,[[["self"]],["flock64"]]],[11,"clone","","",116,[[["self"]],["siginfo_t"]]],[11,"clone","","",117,[[["self"]],["stack_t"]]],[11,"clone","","",118,[[["self"]],["stat"]]],[11,"clone","","",119,[[["self"]],["stat64"]]],[11,"clone","","",120,[[["self"]],["statfs64"]]],[11,"clone","","",121,[[["self"]],["statvfs64"]]],[11,"clone","","",144,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",122,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",123,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",124,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",125,[[["self"]],["user_regs_struct"]]],[11,"clone","","",126,[[["self"]],["user"]]],[11,"clone","","",127,[[["self"]],["mcontext_t"]]],[11,"clone","","",128,[[["self"]],["ipc_perm"]]],[11,"clone","","",129,[[["self"]],["shmid_ds"]]],[11,"clone","","",130,[[["self"]],["termios2"]]],[11,"clone","","",131,[[["self"]],["ip_mreqn"]]],[11,"clone","","",132,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",133,[[["self"]],["ucontext_t"]]],[11,"clone","","",134,[[["self"]],["statvfs"]]],[11,"clone","","",145,[[["self"]],["max_align_t"]]],[11,"clone","","",146,[[["self"]],["sem_t"]]],[11,"clone","","",147,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",148,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",149,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",150,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",151,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",152,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",135,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"sock_extended_err"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["linked_hash_map"] = {"doc":"A `HashMap` wrapper that holds key-value pairs in…","i":[[3,"LinkedHashMap","linked_hash_map","A linked hash map.",null,null],[3,"Iter","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"IterMut","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"IntoIter","","A consuming insertion-order iterator over a…",null,null],[3,"Entries","","An insertion-order iterator over a `LinkedHashMap`'s…",null,null],[3,"Keys","","An insertion-order iterator over a `LinkedHashMap`'s keys.",null,null],[3,"Values","","An insertion-order iterator over a `LinkedHashMap`'s values.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a `LinkedHashMap`.",null,null],[3,"VacantEntry","","A view into a single empty location in a `LinkedHashMap`.",null,null],[4,"Entry","","A view into a single location in a map, which may be…",null,null],[13,"Occupied","","An occupied Entry.",0,null],[13,"Vacant","","A vacant Entry.",0,null],[11,"new","","Creates a linked hash map.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty linked hash map with the given initial…",1,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty linked hash map with the given initial…",1,[[["s"],["usize"]],["self"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",1,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["entry"]]],[11,"entries","","Returns an iterator visiting all entries in insertion…",1,[[["self"]],["entries"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["k"],["v"]],["option"]]],[11,"contains_key","","Checks if the map contains the given key.",1,[[["self"],["q"]],["bool"]]],[11,"get","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],[["v"],["option"]]]],[11,"get_mut","","Returns the mutable reference corresponding to the key in…",1,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_refresh","","Returns the value corresponding to the key in the map.",1,[[["self"],["q"]],[["option"],["v"]]]],[11,"remove","","Removes and returns the value corresponding to the key…",1,[[["self"],["q"]],["option"]]],[11,"capacity","","Returns the maximum number of key-value pairs the map can…",1,[[["self"]],["usize"]]],[11,"pop_front","","Removes the first entry.",1,[[["self"]],["option"]]],[11,"front","","Gets the first entry.",1,[[["self"]],["option"]]],[11,"pop_back","","Removes the last entry.",1,[[["self"]],["option"]]],[11,"back","","Gets the last entry.",1,[[["self"]],["option"]]],[11,"len","","Returns the number of key-value pairs in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the map is currently empty.",1,[[["self"]],["bool"]]],[11,"hasher","","Returns a reference to the map's hasher.",1,[[["self"]],["s"]]],[11,"clear","","Clears the map of all key-value pairs.",1,[[["self"]]]],[11,"iter","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a double-ended iterator visiting all key-value…",1,[[["self"]],["itermut"]]],[11,"keys","","Returns a double-ended iterator visiting all key in order…",1,[[["self"]],["keys"]]],[11,"values","","Returns a double-ended iterator visiting all values in…",1,[[["self"]],["values"]]],[11,"key","","Returns the entry key",0,[[["self"]],["k"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"key","","Gets a reference to the entry key",2,[[["self"]],["k"]]],[11,"get","","Gets a reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",2,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",2,[[],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",2,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it",2,[[],["v"]]],[11,"key","","Gets a reference to the entry key",3,[[["self"]],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",3,[[["v"]],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",9,[[["self"]],[["option"],["v"]]]],[11,"len","","",4,[[["self"]],["usize"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"len","","",6,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],[["occupiedentry"],["option",["occupiedentry"]]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"]],["bool"]]],[11,"le","","",1,[[["self"]],["bool"]]],[11,"ge","","",1,[[["self"]],["bool"]]],[11,"gt","","",1,[[["self"]],["bool"]]],[11,"fmt","","Returns a string that lists the key-value pairs in…",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["q"]],["v"]]],[11,"index_mut","","",1,[[["self"],["q"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[3,"LinkedHashMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Entries"],[3,"Keys"],[3,"Values"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],["option",["level"]]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["arguments"],["self"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["level"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"ne","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"cmp","","",0,[[["level"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["level"],["self"]],["bool"]]],[11,"le","","",0,[[["level"],["self"]],["bool"]]],[11,"gt","","",0,[[["level"],["self"]],["bool"]]],[11,"ge","","",0,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["level"],["self"]],["bool"]]],[11,"le","","",1,[[["level"],["self"]],["bool"]]],[11,"gt","","",1,[[["level"],["self"]],["bool"]]],[11,"ge","","",1,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["result",["levelfilter"]],["levelfilter"]]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["lru_cache"] = {"doc":"A cache that holds a limited number of key-value pairs.…","i":[[3,"LruCache","lru_cache","An LRU cache.",null,null],[3,"IntoIter","","An iterator over a cache's key-value pairs in least- to…",null,null],[3,"Iter","","An iterator over a cache's key-value pairs in least- to…",null,null],[3,"IterMut","","An iterator over a cache's key-value pairs in least- to…",null,null],[11,"new","","Creates an empty cache that can hold at most `capacity`…",0,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty cache that can hold at most `capacity`…",0,[[["s"],["usize"]],["self"]]],[11,"contains_key","","Checks if the map contains the given key.",0,[[["self"],["q"]],["bool"]]],[11,"insert","","Inserts a key-value pair into the cache. If the key…",0,[[["self"],["k"],["v"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",0,[[["self"],["q"]],[["option"],["v"]]]],[11,"remove","","Removes the given key from the cache and returns its…",0,[[["self"],["q"]],["option"]]],[11,"capacity","","Returns the maximum number of key-value pairs the cache…",0,[[["self"]],["usize"]]],[11,"set_capacity","","Sets the number of key-value pairs the cache can hold.…",0,[[["self"],["usize"]]]],[11,"remove_lru","","Removes and returns the least recently used key-value pair…",0,[[["self"]],["option"]]],[11,"len","","Returns the number of key-value pairs in the cache.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the cache contains no key-value pairs.",0,[[["self"]],["bool"]]],[11,"clear","","Removes all key-value pairs from the cache.",0,[[["self"]]]],[11,"iter","","Returns an iterator over the cache's key-value pairs in…",0,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over the cache's key-value pairs in…",0,[[["self"]],["itermut"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"len","","",1,[[["self"]],["usize"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"extend","","",0,[[["intoiterator"],["self"]]]],[11,"into_iter","","",0,[[],["intoiter"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"clone","","",0,[[["self"]],["lrucache"]]],[11,"clone","","",1,[[["self"]],["intoiter"]]],[11,"clone","","",2,[[["self"]],["iter"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"LruCache"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["match_cfg"] = {"doc":"A convenience macro to ergonomically define an item…","i":[[14,"match_cfg","match_cfg","The macro provided by this crate, `match_cfg`, is similar…",null,null]],"p":[]};
searchIndex["matches"] = {"doc":"","i":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",null,null]],"p":[]};
searchIndex["md5"] = {"doc":"An implementation of the [MD5][1] cryptographic hash…","i":[[8,"Digest","md5","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["self"],["b"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["b"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["genericarray",["u8"]],["u8"]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["genericarray",["u8"]],["u8"]]]],[3,"Md5","","The MD5 hasher",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"new","","",1,[[],["d"]]],[11,"input","","",1,[[["self"],["b"]]]],[11,"chain","","",1,[[["b"]],["d"]]],[11,"result","","",1,[[],[["u8"],["genericarray",["u8"]]]]],[11,"result_reset","","",1,[[["self"]],[["u8"],["genericarray",["u8"]]]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[],["usize"]]],[11,"digest","","",1,[[],[["u8"],["genericarray",["u8"]]]]],[11,"input","","",1,[[["self"]]]],[11,"result_reset","","",1,[[["self"]],["box"]]],[11,"result","","",1,[[["box"]],["box"]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[["self"]],["usize"]]],[11,"box_clone","","",1,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",1,[[["self"]],["md5"]]],[11,"default","","",1,[[],["self"]]],[11,"write","","",1,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"input","","",1,[[["self"],["asref"]]]],[11,"fixed_result","","",1,[[],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",1,[[["self"]]]]],"p":[[8,"Digest"],[3,"Md5"]]};
searchIndex["memchr"] = {"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],["memchr"]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr2"]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr3"]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[["u8"]],[["option",["usize"]],["usize"]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space `Poll` registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated…",null,null],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",null,null],[12,"0","","",0,null],[3,"Events","","A collection of readiness events.",null,null],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["pollopt"],["self"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["into"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["into"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["into"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],[["result",["poll"]],["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],["pollopt"],["token"],["self"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],["pollopt"],["token"],["self"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["events"],["duration"],["option",["duration"]],["self"]],[["result",["usize"]],["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["events"],["duration"],["option",["duration"]],["self"]],[["result",["usize"]],["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,[[]]],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["socketaddr"],["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_bufs","","Read in a list of buffers all at once.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_bufs","","Write a list of buffers all at once.",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,[[["socketaddr"],["self"]],[["result",["usize"]],["usize"]]]],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,[[["self"]],["result"]]],[11,"send","","Sends data on the socket to the address previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"recv","","Receives data from the socket previously bound with…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["u32"],["self"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["u32"],["self"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"recv_bufs","","Receives a single datagram message socket previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"send_bufs","","Sends data on the socket to the address previously bound…",9,[[["self"]],[["result",["usize"]],["usize"]]]],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","[`Events`] iterator.",null,null],[3,"Event","","An readiness event returned by [`Poll::poll`].",null,null],[8,"Evented","","A value that may be registered with `Poll`",null,null],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["poll"],["self"]],["result"]]],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for [`RawFd`] providing an [`Evented`]…",null,null],[12,"0","","",11,null],[3,"UnixReady","","Unix specific extensions to `Ready`",null,null],[11,"from","mio","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","mio::event","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",5,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",5,[[["poll"],["self"]],["result"]]],[11,"register","mio::unix","",11,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",11,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",11,[[["poll"],["self"]],["result"]]],[11,"register","mio::net","",7,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",7,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",7,[[["poll"],["self"]],["result"]]],[11,"register","","",8,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",8,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",8,[[["poll"],["self"]],["result"]]],[11,"register","","",9,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"reregister","","",9,[[["ready"],["pollopt"],["poll"],["self"],["token"]],["result"]]],[11,"deregister","","",9,[[["poll"],["self"]],["result"]]],[11,"drop","mio","",5,[[["self"]]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"into_iter","","",4,[[]]],[11,"next","mio::event","",13,[[["self"]],[["event"],["option",["event"]]]]],[11,"clone","mio","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"cmp","","",1,[[["pollopt"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["ready"],["self"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"eq","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"ne","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"eq","","",2,[[["ready"],["self"]],["bool"]]],[11,"ne","","",2,[[["ready"],["self"]],["bool"]]],[11,"eq","mio::event","",12,[[["event"],["self"]],["bool"]]],[11,"ne","","",12,[[["event"],["self"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"partial_cmp","","",1,[[["pollopt"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"le","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"gt","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"ge","","",1,[[["pollopt"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["ready"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["ready"],["self"]],["bool"]]],[11,"le","","",2,[[["ready"],["self"]],["bool"]]],[11,"gt","","",2,[[["ready"],["self"]],["bool"]]],[11,"ge","","",2,[[["ready"],["self"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"deref_mut","","",14,[[["self"]],["ready"]]],[11,"fmt","mio","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::event","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::event","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::unix","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","mio::net","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"sub","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"read","mio::net","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",7,[[["self"]],["result"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"into_raw_fd","","",7,[[],["rawfd"]]],[11,"into_raw_fd","","",8,[[],["rawfd"]]],[11,"into_raw_fd","","",9,[[],["rawfd"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["token"],["ready"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"error","mio::unix","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"p":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mongodb"] = {"doc":"This crate is a pure Rust MongoDB driver. It follows the…","i":[[3,"Client","mongodb","This is the main entry point for the API. A `Client` is…",null,null],[3,"Collection","","`Collection` is the client-side abstraction of a MongoDB…",null,null],[3,"Namespace","","A struct modeling the canonical name for a collection in…",null,null],[12,"db","","The name of the database associated with this namespace.",0,null],[12,"coll","","The name of the collection this namespace corresponds to.",0,null],[3,"Cursor","","A `Cursor` streams the result of a query. When a query is…",null,null],[3,"Database","","`Database` is the client-side abstraction of a MongoDB…",null,null],[0,"options","","Contains all of the types needed to specify options to…",null,null],[3,"StreamAddress","mongodb::options","A hostname:port address pair.",null,null],[12,"hostname","","The hostname of the address.",1,null],[12,"port","","The port of the address.",1,null],[3,"ClientOptions","","Contains the options that can be used to create a new…",null,null],[12,"hosts","","The initial list of seeds that the Client should connect to.",2,null],[12,"app_name","","The application name that the Client will send to the…",2,null],[12,"cmap_event_handler","","The handler that should process all Connection Monitoring…",2,null],[12,"command_event_handler","","The handler that should process all command-related…",2,null],[12,"connect_timeout","","The connect timeout passed to each underlying TcpStream…",2,null],[12,"credential","","The credential to use for authenticating connections made…",2,null],[12,"direct_connection","","Specifies whether the Client should directly connect to a…",2,null],[12,"heartbeat_freq","","The amount of time each monitoring thread should wait…",2,null],[12,"local_threshold","","When running a read operation with a ReadPreference that…",2,null],[12,"max_idle_time","","The amount of time that a connection can remain idle in a…",2,null],[12,"max_pool_size","","The maximum amount of connections that the Client should…",2,null],[12,"min_pool_size","","The minimum number of connections that should be available…",2,null],[12,"read_concern","","Specifies the default read concern for operations…",2,null],[12,"repl_set_name","","The name of the replica set that the Client should connect…",2,null],[12,"selection_criteria","","The default selection criteria for operations performed on…",2,null],[12,"server_selection_timeout","","The amount of time the Client should attempt to select a…",2,null],[12,"tls","","The TLS configuration for the Client to use in its…",2,null],[12,"wait_queue_timeout","","The amount of time a thread should block while waiting to…",2,null],[12,"write_concern","","Specifies the default write concern for operations…",2,null],[3,"TlsOptions","","Specifies the TLS configuration that the `Client` should…",null,null],[12,"allow_invalid_certificates","","Whether or not the `Client` should return an error if the…",3,null],[12,"ca_file_path","","The path to the CA file that the `Client` should use for…",3,null],[12,"cert_key_file_path","","The path to the certificate file that the `Client` should…",3,null],[3,"CollectionOptions","","These are the valid options for creating a `Collection`…",null,null],[12,"selection_criteria","","The default read preference for operations.",4,null],[12,"read_concern","","The default read concern for operations.",4,null],[12,"write_concern","","The default write concern for operations.",4,null],[3,"InsertOneOptions","","Specifies the options to a `Collection::insert_one`…",null,null],[12,"bypass_document_validation","","Opt out of document-level validation.",5,null],[12,"write_concern","","The write concern for the operation.",5,null],[3,"InsertManyOptions","","Specifies the options to a `Collection::insert_many`…",null,null],[12,"bypass_document_validation","","Opt out of document-level validation.",6,null],[12,"ordered","","If true, when an insert fails, return without performing…",6,null],[12,"write_concern","","The write concern for the operation.",6,null],[3,"UpdateOptions","","Specifies the options to a `Collection::update_one` or…",null,null],[12,"array_filters","","A set of filters specifying to which array elements an…",7,null],[12,"bypass_document_validation","","Opt out of document-level validation.",7,null],[12,"upsert","","If true, insert a document if no matching document is found.",7,null],[12,"collation","","The collation to use for the operation.",7,null],[12,"hint","","A document or string that specifies the index to use to…",7,null],[12,"write_concern","","The write concern for the operation.",7,null],[3,"ReplaceOptions","","Specifies the options to a `Collection::replace_one`…",null,null],[12,"bypass_document_validation","","Opt out of document-level validation.",8,null],[12,"upsert","","If true, insert a document if no matching document is found.",8,null],[12,"collation","","The collation to use for the operation.",8,null],[12,"hint","","A document or string that specifies the index to use to…",8,null],[12,"write_concern","","The write concern for the operation.",8,null],[3,"DeleteOptions","","Specifies the options to a `Collection::delete_one` or…",null,null],[12,"collation","","The collation to use for the operation.",9,null],[12,"write_concern","","The write concern for the operation.",9,null],[3,"FindOneAndDeleteOptions","","Specifies the options to a…",null,null],[12,"max_time","","The maximum amount of time to allow the query to run.",10,null],[12,"projection","","Limits the fields of the document being returned.",10,null],[12,"sort","","The order of the documents for the purposes of the…",10,null],[12,"write_concern","","The level of the write concern",10,null],[12,"collation","","The collation to use for the operation.",10,null],[3,"FindOneAndReplaceOptions","","Specifies the options to a…",null,null],[12,"bypass_document_validation","","Opt out of document-level validation.",11,null],[12,"max_time","","The maximum amount of time to allow the query to run.",11,null],[12,"projection","","Limits the fields of the document being returned.",11,null],[12,"return_document","","Whether the operation should return the document before or…",11,null],[12,"sort","","The order of the documents for the purposes of the…",11,null],[12,"upsert","","If true, insert a document if no matching document is found.",11,null],[12,"write_concern","","The level of the write concern",11,null],[12,"collation","","The collation to use for the operation.",11,null],[3,"FindOneAndUpdateOptions","","Specifies the options to a…",null,null],[12,"array_filters","","A set of filters specifying to which array elements an…",12,null],[12,"bypass_document_validation","","Opt out of document-level validation.",12,null],[12,"max_time","","The maximum amount of time to allow the query to run.",12,null],[12,"projection","","Limits the fields of the document being returned.",12,null],[12,"return_document","","Whether the operation should return the document before or…",12,null],[12,"sort","","The order of the documents for the purposes of the…",12,null],[12,"upsert","","If true, insert a document if no matching document is found.",12,null],[12,"write_concern","","The level of the write concern",12,null],[12,"collation","","The collation to use for the operation.",12,null],[3,"AggregateOptions","","Specifies the options to a `Collection::aggregate`…",null,null],[12,"allow_disk_use","","Enables writing to temporary files. When set to true,…",13,null],[12,"batch_size","","The number of documents the server should return per…",13,null],[12,"bypass_document_validation","","Opt out of document-level validation.",13,null],[12,"collation","","The collation to use for the operation.",13,null],[12,"comment","","Tags the query with an arbitrary string to help trace the…",13,null],[12,"hint","","The index to use for the operation.",13,null],[12,"max_await_time","","The maximum amount of time for the server to wait on new…",13,null],[12,"max_time","","The maximum amount of time to allow the query to run.",13,null],[12,"read_concern","","The read concern to use for the operation.",13,null],[12,"selection_criteria","","The criteria used to select a server for this operation.",13,null],[12,"write_concern","","The write concern to use for the operation.",13,null],[3,"CountOptions","","Specifies the options to a `Collection::count_documents`…",null,null],[12,"hint","","The index to use for the operation.",14,null],[12,"limit","","The maximum number of documents to count.",14,null],[12,"max_time","","The maximum amount of time to allow the query to run.",14,null],[12,"skip","","The number of documents to skip before counting.",14,null],[12,"collation","","The collation to use for the operation.",14,null],[3,"EstimatedDocumentCountOptions","","Specifies the options to a…",null,null],[12,"max_time","","The maximum amount of time to allow the query to run.",15,null],[12,"selection_criteria","","The criteria used to select a server for this operation.",15,null],[12,"read_concern","","The level of the read concern.",15,null],[3,"DistinctOptions","","Specifies the options to a `Collection::distinct` operation.",null,null],[12,"max_time","","The maximum amount of time to allow the query to run.",16,null],[12,"selection_criteria","","The criteria used to select a server for this operation.",16,null],[12,"read_concern","","The level of the read concern.",16,null],[12,"collation","","The collation to use for the operation.",16,null],[3,"FindOptions","","Specifies the options to a `Collection::find` operation.",null,null],[12,"allow_partial_results","","If true, partial results will be returned from a mongos…",17,null],[12,"batch_size","","The number of documents the server should return per…",17,null],[12,"comment","","Tags the query with an arbitrary string to help trace the…",17,null],[12,"cursor_type","","The type of cursor to return.",17,null],[12,"hint","","The index to use for the operation.",17,null],[12,"limit","","The maximum number of documents to query. If a negative…",17,null],[12,"max","","The exclusive upper bound for a specific index.",17,null],[12,"max_await_time","","The maximum amount of time for the server to wait on new…",17,null],[12,"max_scan","","Maximum number of documents or index keys to scan when…",17,null],[12,"max_time","","The maximum amount of time to allow the query to run.",17,null],[12,"min","","The inclusive lower bound for a specific index.",17,null],[12,"no_cursor_timeout","","Whether the server should close the cursor after a period…",17,null],[12,"projection","","Limits the fields of the document being returned.",17,null],[12,"read_concern","","The read concern to use for this find query.",17,null],[12,"return_key","","Whether to return only the index keys in the documents.",17,null],[12,"selection_criteria","","The criteria used to select a server for this find query.",17,null],[12,"show_record_id","","Whether to return the record identifier for each document.",17,null],[12,"skip","","The number of documents to skip before counting.",17,null],[12,"sort","","The order of the documents for the purposes of the…",17,null],[12,"collation","","The collation to use for the operation.",17,null],[3,"FindOneOptions","","Specifies the options to a `Collection::find_one` operation.",null,null],[12,"allow_partial_results","","If true, partial results will be returned from a mongos…",18,null],[12,"collation","","The collation to use for the operation.",18,null],[12,"comment","","Tags the query with an arbitrary string to help trace the…",18,null],[12,"hint","","The index to use for the operation.",18,null],[12,"max","","The exclusive upper bound for a specific index.",18,null],[12,"max_scan","","Maximum number of documents or index keys to scan when…",18,null],[12,"max_time","","The maximum amount of time to allow the query to run.",18,null],[12,"min","","The inclusive lower bound for a specific index.",18,null],[12,"projection","","Limits the fields of the document being returned.",18,null],[12,"read_concern","","The read concern to use for this find query.",18,null],[12,"return_key","","Whether to return only the index keys in the documents.",18,null],[12,"selection_criteria","","The criteria used to select a server for this find query.",18,null],[12,"show_record_id","","Whether to return the record identifier for each document.",18,null],[12,"skip","","The number of documents to skip before counting.",18,null],[12,"sort","","The order of the documents for the purposes of the…",18,null],[3,"IndexModel","","Specifies an index to create.",null,null],[12,"keys","","The fields to index, along with their sort order.",19,null],[12,"options","","Extra options to use when creating the index.",19,null],[3,"DropCollectionOptions","","Specifies the options to a `Collection::drop` operation.",null,null],[12,"write_concern","","The write concern for the operation.",20,null],[3,"Collation","","A collation configuration. See the official MongoDB…",null,null],[12,"locale","","The ICU locale.",21,null],[12,"strength","","The level of comparison to perform. Corresponds to ICU…",21,null],[12,"case_level","","Whether to include case comparison when `strength` is…",21,null],[12,"case_first","","The sort order of case differences during tertiary level…",21,null],[12,"numeric_ordering","","Whether to compare numeric strings as numbers or strings.",21,null],[12,"alternate","","Whether collation should consider whitespace and…",21,null],[12,"max_variable","","Up to which characters are considered ignorable when…",21,null],[12,"normalization","","Whether to check if text require normalization and to…",21,null],[12,"backwards","","Whether strings with diacritics sort from the back of the…",21,null],[3,"WriteConcern","","Specifies the level of acknowledgement requested from the…",null,null],[12,"w","","Requests acknowledgement that the operation has propagated…",22,null],[12,"w_timeout","","Specifies a time limit for the write concern. If an…",22,null],[12,"journal","","Requests acknowledgement that the operation has propagated…",22,null],[3,"DatabaseOptions","","These are the valid options for creating a `Database` with…",null,null],[12,"selection_criteria","","The default read preference for operations.",23,null],[12,"read_concern","","The default read concern for operations.",23,null],[12,"write_concern","","The default write concern for operations.",23,null],[3,"CreateCollectionOptions","","These are the valid options for creating a collection with…",null,null],[12,"capped","","Whether the collection should be capped. If true, `size`…",24,null],[12,"size","","The maximum size (in bytes) for a capped collection. This…",24,null],[12,"max","","The maximum number of documents in a capped collection.…",24,null],[12,"storage_engine","","The storage engine that the collection should use. The…",24,null],[12,"validation","","Specifies a validator to restrict the schema of documents…",24,null],[12,"validation_level","","Specifies how strictly the database should apply the…",24,null],[12,"validation_action","","Specifies whether the database should return an error or…",24,null],[12,"view_on","","The name of the source collection or view to base this…",24,null],[12,"pipeline","","An array that consists of the aggregation pipeline stages…",24,null],[12,"collation","","The default collation for the collection or view.   ",24,null],[12,"write_concern","","The write concern for the operation.   ",24,null],[3,"DropDatabaseOptions","","Specifies the options to a `Database::drop` operation.",null,null],[12,"write_concern","","The write concern for the operation.",25,null],[3,"ListCollectionsOptions","","Specifies the options to a `Database::list_collections`…",null,null],[12,"batch_size","","The number of documents the server should return per…",26,null],[4,"Tls","","Specifies whether TLS configuration should be used with…",null,null],[13,"Enabled","","",27,null],[13,"Disabled","","",27,null],[4,"ReturnDocument","","Specifies whether a `Collection::find_one_and_replace` and…",null,null],[13,"After","","Return the document after modification.",28,null],[13,"Before","","Return the document before modification.",28,null],[4,"Hint","","Specifies the index to use for an operation.",null,null],[13,"Keys","","Specifies the keys of the index to use.",29,null],[13,"Name","","Specifies the name of the index to use.",29,null],[4,"CursorType","","Specifies the type of cursor to return from a find…",null,null],[13,"NonTailable","","Default; close the cursor after the last document is…",30,null],[13,"Tailable","","Do not close the cursor after the last document is…",30,null],[13,"TailableAwait","","Similar to `Tailable`, except that the cursor should block…",30,null],[4,"UpdateModifications","","Enum modeling the modifications to apply during an update.…",null,null],[13,"Document","","A document that contains only update operator expressions.",31,null],[13,"Pipeline","","An aggregation pipeline. Only available in MongoDB 4.2+.",31,null],[4,"ReadConcern","","Specifies the consistency and isolation properties of read…",null,null],[13,"Local","","See the specific documentation for this read concern level…",32,null],[13,"Majority","","See the specific documentation for this read concern level…",32,null],[13,"Linearizable","","See the specific documentation for this read concern level…",32,null],[13,"Available","","See the specific documentation for this read concern level…",32,null],[13,"Custom","","Specify a custom read concern level. This is present to…",32,null],[4,"Acknowledgment","","The type of the `w` field in a `WriteConcern`.",null,null],[13,"Nodes","","Requires acknowledgement that the write has reached the…",33,null],[13,"Majority","","Requires acknowledgement that the write has reached the…",33,null],[13,"Tag","","Requires acknowledgement according to the given write tag.…",33,null],[4,"ValidationLevel","","Specifies how strictly the database should apply…",null,null],[13,"Off","","Perform no validation for inserts and updates.",34,null],[13,"Strict","","Perform validation on all inserts and updates.",34,null],[13,"Moderate","","Perform validation on inserts as well as updates on…",34,null],[4,"ValidationAction","","Specifies whether the database should return an error or…",null,null],[13,"Error","","",35,null],[13,"Warn","","",35,null],[4,"SelectionCriteria","","Describes which servers are suitable for a given operation.",null,null],[13,"ReadPreference","","A read preference that describes the suitable servers…",36,null],[13,"Predicate","","A predicate used to filter servers that are considered…",36,null],[4,"ReadPreference","","Specifies how the driver should route a read operation to…",null,null],[13,"Primary","","Only route this operation to the primary.",37,null],[13,"Secondary","","Only route this operation to a secondary.",37,null],[12,"tag_sets","mongodb::options::ReadPreference","",37,null],[12,"max_staleness","","",37,null],[13,"PrimaryPreferred","mongodb::options","Route this operation to the primary if it's available, but…",37,null],[12,"tag_sets","mongodb::options::ReadPreference","",37,null],[12,"max_staleness","","",37,null],[13,"SecondaryPreferred","mongodb::options","Route this operation to a secondary if one is available,…",37,null],[12,"tag_sets","mongodb::options::ReadPreference","",37,null],[12,"max_staleness","","",37,null],[13,"Nearest","mongodb::options","Route this operation to the node with the least network…",37,null],[12,"tag_sets","mongodb::options::ReadPreference","",37,null],[12,"max_staleness","","",37,null],[0,"auth","mongodb::options","Contains the types needed to specify the auth…",null,null],[3,"Credential","mongodb::options::auth","A struct containing authentication information.",null,null],[12,"username","","The username to authenticate with. This applies to all…",38,null],[12,"source","","The database used to authenticate. This applies to all…",38,null],[12,"password","","The password to authenticate with. This does not apply to…",38,null],[12,"mechanism","","Which authentication mechanism to use. If not provided,…",38,null],[12,"mechanism_properties","","Additional properties for the given mechanism.",38,null],[4,"AuthMechanism","","The authentication mechanisms supported by MongoDB.",null,null],[13,"MongoDbCr","","MongoDB Challenge Response nonce and MD5 based…",39,null],[13,"ScramSha1","","The SCRAM-SHA-1 mechanism as defined in RFC 5802.",39,null],[13,"ScramSha256","","The SCRAM-SHA-256 mechanism which extends RFC 5802 and is…",39,null],[13,"MongoDbX509","","The MONGODB-X509 mechanism based on the usage of X.509…",39,null],[13,"Gssapi","","Kerberos authentication mechanism as defined in RFC 4752.",39,null],[13,"Plain","","The SASL PLAIN mechanism, as defined in RFC 4616, is used…",39,null],[6,"Predicate","mongodb::options","A predicate used to filter servers that are considered…",null,null],[6,"TagSet","","A read preference tag set. See the documentation here for…",null,null],[11,"validate_credential","mongodb::options::auth","Determines if the provided credentials have the required…",39,[[["credential"],["self"]],["result"]]],[11,"as_str","","",39,[[["self"]],["str"]]],[11,"builder","","Create a builder for building `Credential`. On the…",38,[[],["typedbuilder_builderfor_credential"]]],[11,"parse","mongodb::options","",1,[[["str"]],["result"]]],[11,"builder","","Create a builder for building `ClientOptions`. On the…",2,[[],["typedbuilder_builderfor_clientoptions"]]],[11,"builder","","Create a builder for building `TlsOptions`. On the…",3,[[],["typedbuilder_builderfor_tlsoptions"]]],[11,"into_rustls_config","","",3,[[],[["result",["clientconfig"]],["clientconfig"]]]],[11,"parse","","Parses a MongoDB connection string into a ClientOptions…",2,[[["str"]],["result"]]],[11,"with_uri_str","mongodb","Creates a new `Client` connected to the cluster specified…",40,[[["str"]],["result"]]],[11,"with_options","","Creates a new `Client` connected to the cluster specified…",40,[[["clientoptions"]],["result"]]],[11,"selection_criteria","","Gets the default selection criteria the `Client` uses for…",40,[[["self"]],[["option",["selectioncriteria"]],["selectioncriteria"]]]],[11,"read_concern","","Gets the default read concern the `Client` uses for…",40,[[["self"]],[["option",["readconcern"]],["readconcern"]]]],[11,"write_concern","","Gets the default write concern the `Client` uses for…",40,[[["self"]],[["option",["writeconcern"]],["writeconcern"]]]],[11,"database","","Gets a handle to a database specified by `name` in the…",40,[[["str"],["self"]],["database"]]],[11,"database_with_options","","Gets a handle to a database specified by `name` in the…",40,[[["str"],["databaseoptions"],["self"]],["database"]]],[11,"list_databases","","Gets information about each database present in the…",40,[[["self"]],[["result",["vec"]],["vec",["document"]]]]],[11,"list_database_names","","Gets the names of the databases present in the cluster the…",40,[[["self"]],[["result",["vec"]],["vec",["string"]]]]],[11,"builder","mongodb::options","Create a builder for building `CollectionOptions`. On the…",4,[[],["typedbuilder_builderfor_collectionoptions"]]],[11,"builder","","Create a builder for building `InsertOneOptions`. On the…",5,[[],["typedbuilder_builderfor_insertoneoptions"]]],[11,"builder","","Create a builder for building `InsertManyOptions`. On the…",6,[[],["typedbuilder_builderfor_insertmanyoptions"]]],[11,"builder","","Create a builder for building `UpdateOptions`. On the…",7,[[],["typedbuilder_builderfor_updateoptions"]]],[11,"builder","","Create a builder for building `ReplaceOptions`. On the…",8,[[],["typedbuilder_builderfor_replaceoptions"]]],[11,"builder","","Create a builder for building `DeleteOptions`. On the…",9,[[],["typedbuilder_builderfor_deleteoptions"]]],[11,"builder","","Create a builder for building `FindOneAndDeleteOptions`.…",10,[[],["typedbuilder_builderfor_findoneanddeleteoptions"]]],[11,"builder","","Create a builder for building `FindOneAndReplaceOptions`.…",11,[[],["typedbuilder_builderfor_findoneandreplaceoptions"]]],[11,"builder","","Create a builder for building `FindOneAndUpdateOptions`.…",12,[[],["typedbuilder_builderfor_findoneandupdateoptions"]]],[11,"builder","","Create a builder for building `AggregateOptions`. On the…",13,[[],["typedbuilder_builderfor_aggregateoptions"]]],[11,"builder","","Create a builder for building `CountOptions`. On the…",14,[[],["typedbuilder_builderfor_countoptions"]]],[11,"builder","","Create a builder for building…",15,[[],["typedbuilder_builderfor_estimateddocumentcountoptions"]]],[11,"builder","","Create a builder for building `DistinctOptions`. On the…",16,[[],["typedbuilder_builderfor_distinctoptions"]]],[11,"builder","","Create a builder for building `FindOptions`. On the…",17,[[],["typedbuilder_builderfor_findoptions"]]],[11,"builder","","Create a builder for building `FindOneOptions`. On the…",18,[[],["typedbuilder_builderfor_findoneoptions"]]],[11,"builder","","Create a builder for building `IndexModel`. On the…",19,[[],["typedbuilder_builderfor_indexmodel"]]],[11,"builder","","Create a builder for building `DropCollectionOptions`. On…",20,[[],["typedbuilder_builderfor_dropcollectionoptions"]]],[11,"name","mongodb","Gets the name of the `Collection`.",41,[[["self"]],["str"]]],[11,"namespace","","Gets the namespace of the `Collection`.",41,[[["self"]],["namespace"]]],[11,"selection_criteria","","Gets the selection criteria of the `Collection`.",41,[[["self"]],[["option",["selectioncriteria"]],["selectioncriteria"]]]],[11,"read_concern","","Gets the read concern of the `Collection`.",41,[[["self"]],[["option",["readconcern"]],["readconcern"]]]],[11,"write_concern","","Gets the write concern of the `Collection`.",41,[[["self"]],[["option",["writeconcern"]],["writeconcern"]]]],[11,"drop","","Drops the collection, deleting all data, users, and…",41,[[["self"]],["result"]]],[11,"aggregate","","Runs an aggregation operation.",41,[[["self"]],[["result",["cursor"]],["cursor"]]]],[11,"estimated_document_count","","Estimates the number of documents in the collection using…",41,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"count_documents","","Gets the number of documents matching `filter`.",41,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"delete_many","","Deletes all documents stored in the collection matching…",41,[[["document"],["self"]],[["deleteresult"],["result",["deleteresult"]]]]],[11,"delete_one","","Deletes up to one document found matching `query`.",41,[[["document"],["self"]],[["deleteresult"],["result",["deleteresult"]]]]],[11,"distinct","","Finds the distinct values of the field specified by…",41,[[["str"],["self"]],[["result",["vec"]],["vec",["bson"]]]]],[11,"find","","Finds the documents in the collection matching `filter`.",41,[[["self"]],[["result",["cursor"]],["cursor"]]]],[11,"find_one","","Finds a single document in the collection matching `filter`.",41,[[["self"]],[["option",["document"]],["result",["option"]]]]],[11,"find_one_and_delete","","Atomically finds up to one document in the collection…",41,[[["document"],["self"]],[["option",["document"]],["result",["option"]]]]],[11,"find_one_and_replace","","Atomically finds up to one document in the collection…",41,[[["document"],["self"]],[["option",["document"]],["result",["option"]]]]],[11,"find_one_and_update","","Atomically finds up to one document in the collection…",41,[[["document"],["self"]],[["option",["document"]],["result",["option"]]]]],[11,"insert_many","","Inserts the documents in `docs` into the collection.",41,[[["self"]],[["insertmanyresult"],["result",["insertmanyresult"]]]]],[11,"insert_one","","Inserts `doc` into the collection.",41,[[["document"],["self"]],[["insertoneresult"],["result",["insertoneresult"]]]]],[11,"replace_one","","Replaces up to one document matching `query` in the…",41,[[["document"],["self"]],[["updateresult"],["result",["updateresult"]]]]],[11,"update_many","","Updates all documents matching `query` in the collection.",41,[[["document"],["self"]],[["updateresult"],["result",["updateresult"]]]]],[11,"update_one","","Updates up to one document matching `query` in the…",41,[[["document"],["self"]],[["updateresult"],["result",["updateresult"]]]]],[11,"create_indexes","","Creates the indexes specified by `models`.",41,[[["self"]],[["result",["vec"]],["vec",["string"]]]]],[11,"drop_index","","Drops the index specified by `name`.",41,[[["str"],["self"]],[["result",["document"]],["document"]]]],[11,"drop_index_with_keys","","Drops the index with the given `keys`.",41,[[["document"],["self"]],[["result",["document"]],["document"]]]],[11,"drop_indexes","","Drops all indexes in the collection.",41,[[["self"]],[["result",["document"]],["document"]]]],[11,"builder","mongodb::options","Create a builder for building `Collation`. On the builder,…",21,[[],["typedbuilder_builderfor_collation"]]],[11,"as_str","","Gets the string representation of the `ReadConcern`.",32,[[["self"]],["str"]]],[11,"builder","","Create a builder for building `WriteConcern`. On the…",22,[[],["typedbuilder_builderfor_writeconcern"]]],[11,"validate","","Validates that the write concern. A write concern is…",22,[[["self"]],["result"]]],[11,"builder","","Create a builder for building `DatabaseOptions`. On the…",23,[[],["typedbuilder_builderfor_databaseoptions"]]],[11,"builder","","Create a builder for building `CreateCollectionOptions`.…",24,[[],["typedbuilder_builderfor_createcollectionoptions"]]],[11,"builder","","Create a builder for building `DropDatabaseOptions`. On…",25,[[],["typedbuilder_builderfor_dropdatabaseoptions"]]],[11,"builder","","Create a builder for building `ListCollectionsOptions`. On…",26,[[],["typedbuilder_builderfor_listcollectionsoptions"]]],[11,"name","mongodb","Gets the name of the `Database`.",42,[[["self"]],["str"]]],[11,"selection_criteria","","Gets the read preference of the `Database`.",42,[[["self"]],[["option",["selectioncriteria"]],["selectioncriteria"]]]],[11,"read_concern","","Gets the read concern of the `Database`.",42,[[["self"]],[["option",["readconcern"]],["readconcern"]]]],[11,"write_concern","","Gets the write concern of the `Database`.",42,[[["self"]],[["option",["writeconcern"]],["writeconcern"]]]],[11,"collection","","Gets a handle to a collection specified by `name` of the…",42,[[["str"],["self"]],["collection"]]],[11,"collection_with_options","","Gets a handle to a collection specified by `name` in the…",42,[[["str"],["collectionoptions"],["self"]],["collection"]]],[11,"drop","","Drops the database, deleting all data, collections, users,…",42,[[["self"]],["result"]]],[11,"list_collections","","Gets information about each of the collections in the…",42,[[["self"]],[["result",["cursor"]],["cursor"]]]],[11,"list_collection_names","","Gets the names of the collections in the database.",42,[[["self"]],[["result",["vec"]],["vec",["string"]]]]],[11,"create_collection","","Creates a new collection in the database with the given…",42,[[["str"],["self"]],["result"]]],[11,"run_command","","Runs a database-level command.",42,[[["document"],["self"]],[["result",["document"]],["document"]]]],[11,"aggregate","","Runs an aggregation operation.",42,[[["self"]],[["result",["cursor"]],["cursor"]]]],[0,"error","","Contains the `Error` and `Result` types that `mongodb` uses.",null,null],[3,"Error","mongodb::error","An error that can occur in the `mongodb` crate. The inner…",null,null],[12,"kind","","The type of error that occurred.",43,null],[3,"CommandError","","An error that occurred due to a database command failing.",null,null],[12,"code","","Identifies the type of error.",44,null],[12,"code_name","","The name associated with the error code.",44,null],[12,"message","","A description of the error that occurred.",44,null],[12,"labels","","The error labels that the server returned.",44,null],[3,"WriteConcernError","","An error that occurred due to not being able to satisfy a…",null,null],[12,"code","","Identifies the type of write concern error.",45,null],[12,"code_name","","The name associated with the error code.",45,null],[12,"message","","A description of the error that occurred.",45,null],[3,"WriteError","","An error that occurred during a write operation that…",null,null],[12,"code","","Identifies the type of write error.",46,null],[12,"code_name","","The name associated with the error code.",46,null],[12,"message","","A description of the error that occurred.",46,null],[3,"BulkWriteError","","An error that occurred during a write operation consisting…",null,null],[12,"index","","Index into the list of operations that this error…",47,null],[12,"code","","Identifies the type of write concern error.",47,null],[12,"code_name","","The name associated with the error code.",47,null],[12,"message","","A description of the error that occurred.",47,null],[3,"BulkWriteFailure","","The set of errors that occurred during a write operation.",null,null],[12,"write_errors","","The error(s) that occurred on account of a non write…",48,null],[12,"write_concern_error","","The error that occurred on account of write concern failure.",48,null],[4,"ErrorKind","","The types of errors that can occur.",null,null],[13,"AddrParse","","Wrapper around `std::net::AddrParseError`.",49,null],[13,"ArgumentError","","An invalid argument was provided to a database operation.",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"AuthenticationError","mongodb::error","An error occurred while the `Client` attempted to…",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"BsonDecode","mongodb::error","Wrapper around `bson::DecoderError`.",49,null],[13,"BsonEncode","","Wrapper around `bson::EncoderError`.",49,null],[13,"BulkWriteError","","An error occurred when trying to execute a write operation…",49,null],[13,"CommandError","","The server returned an error to an attempted operation.",49,null],[13,"DnsResolve","","Wrapper around `trust_dns_resolver::error::ResolveError`.",49,null],[13,"InvalidDnsName","","Wrapper around `webpki::InvalidDNSNameError`.",49,null],[13,"InvalidHostname","","A hostname could not be parsed.",49,null],[12,"hostname","mongodb::error::ErrorKind","",49,null],[13,"Io","mongodb::error","Wrapper around `std::io::Error`.",49,null],[13,"NoDnsResults","","",49,null],[13,"OperationError","","A database operation failed to send or receive a reply.",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"OutOfRangeError","mongodb::error","",49,null],[13,"ParseError","","Data from a file could not be parsed.",49,null],[12,"data_type","mongodb::error::ErrorKind","",49,null],[12,"file_path","","",49,null],[13,"ResponseError","mongodb::error","The server returned an invalid reply to a database…",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"ServerSelectionError","mongodb::error","The Client was not able to select a server for the…",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"SrvLookupError","mongodb::error","An error occurred during SRV record lookup.",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"TxtLookupError","mongodb::error","An error occurred during TXT record lookup",49,null],[12,"message","mongodb::error::ErrorKind","",49,null],[13,"WaitQueueTimeoutError","mongodb::error","The Client timed out while checking out a connection from…",49,null],[12,"address","mongodb::error::ErrorKind","",49,null],[13,"WriteError","mongodb::error","An error occurred when trying to execute a write operation",49,null],[4,"WriteFailure","","An error that occurred when trying to execute a write…",null,null],[13,"WriteConcernError","","",50,null],[13,"WriteError","","",50,null],[6,"Result","","The result type for all methods that can return an error…",null,null],[0,"event","mongodb","Contains the events and functionality for monitoring…",null,null],[0,"cmap","mongodb::event","Contains the events and functionality for monitoring…",null,null],[3,"ConnectionPoolOptions","mongodb::event::cmap","Contains the options for creating a connection pool. While…",null,null],[12,"app_name","","The application name specified by the user. This is sent…",51,null],[12,"connect_timeout","","The connect timeout passed to each underlying TcpStream…",51,null],[12,"credential","","The credential to use for authenticating connections in…",51,null],[12,"event_handler","","Processes all events generated by the pool.",51,null],[12,"max_idle_time","","Connections that have been ready for usage in the pool for…",51,null],[12,"max_pool_size","","The maximum number of connections that the pool can have…",51,null],[12,"min_pool_size","","The minimum number of connections that the pool can have…",51,null],[12,"tls_options","","The options specifying how a TLS connection should be…",51,null],[12,"wait_queue_timeout","","Rather than wait indefinitely for a connection to become…",51,null],[3,"PoolCreatedEvent","","Event emitted when a connection pool is created.",null,null],[12,"address","","The address of the server that the pool's connections will…",52,null],[12,"options","","The options used for the pool.",52,null],[3,"PoolClearedEvent","","Event emitted when a connection pool is cleared.",null,null],[12,"address","","The address of the server that the pool's connections will…",53,null],[3,"PoolClosedEvent","","Event emitted when a connection pool is cleared.",null,null],[12,"address","","The address of the server that the pool's connections will…",54,null],[3,"ConnectionCreatedEvent","","Event emitted when a connection is created.",null,null],[12,"address","","The address of the server that the connection will connect…",55,null],[12,"connection_id","","The unique ID of the connection. This is not used for…",55,null],[3,"ConnectionReadyEvent","","Event emitted when a connection is ready to be used. This…",null,null],[12,"address","","The address of the server that the connection is connected…",56,null],[12,"connection_id","","The unique ID of the connection. This is not used for…",56,null],[3,"ConnectionClosedEvent","","Event emitted when a connection is closed.",null,null],[12,"address","","The address of the server that the connection was…",57,null],[12,"connection_id","","The unique ID of the connection. This is not used for…",57,null],[12,"reason","","The reason that the connection was closed.",57,null],[3,"ConnectionCheckoutStartedEvent","","Event emitted when a thread begins checking out a…",null,null],[12,"address","","The address of the server that the connection will connect…",58,null],[3,"ConnectionCheckoutFailedEvent","","Event emitted when a thread is unable to check out a…",null,null],[12,"address","","The address of the server that the connection would have…",59,null],[12,"reason","","The reason a connection was unable to be checked out.",59,null],[3,"ConnectionCheckedOutEvent","","Event emitted when a connection is successfully checked out.",null,null],[12,"address","","The address of the server that the connection will connect…",60,null],[12,"connection_id","","The unique ID of the connection. This is not used for…",60,null],[3,"ConnectionCheckedInEvent","","Event emitted when a connection is checked back into a…",null,null],[12,"address","","The address of the server that the connection was…",61,null],[12,"connection_id","","The unique ID of the connection. This is not used for…",61,null],[4,"ConnectionClosedReason","","The reasons that a connection may be closed.",null,null],[13,"Stale","","The connection pool has been cleared since the connection…",62,null],[13,"Idle","","The connection has been available for longer than…",62,null],[13,"Error","","An error occurred while using the connection.",62,null],[13,"PoolClosed","","The pool that the connection belongs to has been closed.",62,null],[4,"ConnectionCheckoutFailedReason","","The reasons a connection may not be able to be checked out.",null,null],[13,"Timeout","","The `wait_queue_timeout` has elapsed while waiting for a…",63,null],[13,"ConnectionError","","An error occurred while trying to establish a connection…",63,null],[8,"CmapEventHandler","","Applications can implement this trait to specify custom…",null,null],[11,"handle_pool_created_event","","A `Client` will call this method on each registered…",64,[[["poolcreatedevent"],["self"]]]],[11,"handle_pool_cleared_event","","A `Client` will call this method on each registered…",64,[[["self"],["poolclearedevent"]]]],[11,"handle_pool_closed_event","","A `Client` will call this method on each registered…",64,[[["self"],["poolclosedevent"]]]],[11,"handle_connection_created_event","","A `Client` will call this method on each registered…",64,[[["connectioncreatedevent"],["self"]]]],[11,"handle_connection_ready_event","","A `Client` will call this method on each registered…",64,[[["connectionreadyevent"],["self"]]]],[11,"handle_connection_closed_event","","A `Client` will call this method on each registered…",64,[[["connectionclosedevent"],["self"]]]],[11,"handle_connection_checkout_started_event","","A `Client` will call this method on each registered…",64,[[["self"],["connectioncheckoutstartedevent"]]]],[11,"handle_connection_checkout_failed_event","","A `Client` will call this method on each registered…",64,[[["connectioncheckoutfailedevent"],["self"]]]],[11,"handle_connection_checked_out_event","","A `Client` will call this method on each registered…",64,[[["connectioncheckedoutevent"],["self"]]]],[11,"handle_connection_checked_in_event","","A `Client` will call this method on each registered…",64,[[["connectioncheckedinevent"],["self"]]]],[0,"command","mongodb::event","Contains the events and functionality to monitor the…",null,null],[3,"CommandStartedEvent","mongodb::event::command","An event that triggers when a database command is initiated.",null,null],[12,"command","","The command being run.",65,null],[12,"db","","The name of the database the command is being run against.",65,null],[12,"command_name","","The type of command being run, e.g. \"find\" or \"isMaster\".",65,null],[12,"request_id","","The driver-generated identifier for the request.…",65,null],[12,"connection","","Information about the connect the command will be run on.",65,null],[3,"CommandSucceededEvent","","An event that triggers when a database command completes…",null,null],[12,"duration","","The total execution time of the command (including the…",66,null],[12,"reply","","The server's reply to the command.",66,null],[12,"command_name","","The type of command that was run, e.g. \"find\" or \"isMaster\".",66,null],[12,"request_id","","The driver-generated identifier for the request.…",66,null],[12,"connection","","Information about the connect the command will be run on.",66,null],[3,"CommandFailedEvent","","An event that triggers when a command failed to complete…",null,null],[12,"duration","","The total execution time of the command (including the…",67,null],[12,"command_name","","The type of command that was run, e.g. \"find\" or \"isMaster\".",67,null],[12,"failure","","The error that the driver returned due to the event failing.",67,null],[12,"request_id","","The driver-generated identifier for the request.…",67,null],[12,"connection","","Information about the connect the command will be run on.",67,null],[8,"CommandEventHandler","","Applications can implement this trait to specify custom…",null,null],[11,"handle_command_started_event","","A `Client` will call this method on each registered…",68,[[["self"],["commandstartedevent"]]]],[11,"handle_command_succeeded_event","","A `Client` will call this method on each registered…",68,[[["commandsucceededevent"],["self"]]]],[11,"handle_command_failed_event","","A `Client` will call this method on each registered…",68,[[["commandfailedevent"],["self"]]]],[0,"results","mongodb","Contains the types of results returned by CRUD operations.",null,null],[3,"InsertOneResult","mongodb::results","The result of a `Collection::insert_one` operation.",null,null],[12,"inserted_id","","The `_id` field of the document inserted.",69,null],[3,"InsertManyResult","","The result of a `Collection::insert_many` operation.",null,null],[12,"inserted_ids","","The `_id` field of the documents inserted.",70,null],[3,"UpdateResult","","The result of a `Collection::update_one` or…",null,null],[12,"matched_count","","The number of documents that matched the filter.",71,null],[12,"modified_count","","The number of documents that were modified by the operation.",71,null],[12,"upserted_id","","The `_id` field of the upserted document.",71,null],[3,"DeleteResult","","The result of a `Collection::delete_one` or…",null,null],[12,"deleted_count","","The number of documents deleted by the operation.",72,null],[11,"from","mongodb","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"into_iter","","",73,[[],["i"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","mongodb::options","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","mongodb::options::auth","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","mongodb::event::cmap","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","mongodb::error","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","mongodb::event::cmap","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","mongodb::event::command","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","mongodb::results","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"drop","mongodb","",73,[[["self"]]]],[11,"from","mongodb::options","",27,[[["tlsoptions"]],["self"]]],[11,"from","","",31,[[["document"]],["self"]]],[11,"from","","",31,[[["document"],["vec",["document"]]],["self"]]],[11,"from","","",17,[[["findoneoptions"]],["self"]]],[11,"from","","",33,[[["i32"]],["self"]]],[11,"from","","",33,[[["string"]],["self"]]],[11,"from","mongodb::error","",43,[[["e"]],["self"]]],[11,"from","","",49,[[["addrparseerror"]],["self"]]],[11,"from","","",49,[[["decodererror"]],["self"]]],[11,"from","","",49,[[["encodererror"]],["self"]]],[11,"from","","",49,[[["invaliddnsnameerror"]],["self"]]],[11,"from","","",49,[[["error"]],["self"]]],[11,"from","","",49,[[["outofrangeerror"]],["self"]]],[11,"from","","",49,[[["resolveerror"]],["self"]]],[11,"from","mongodb::options","",36,[[["readpreference"]],["self"]]],[11,"next","mongodb","",73,[[["self"]],["option"]]],[11,"clone","mongodb::options::auth","",39,[[["self"]],["authmechanism"]]],[11,"clone","","",38,[[["self"]],["credential"]]],[11,"clone","mongodb::options","",1,[[["self"]],["streamaddress"]]],[11,"clone","","",2,[[["self"]],["clientoptions"]]],[11,"clone","","",27,[[["self"]],["tls"]]],[11,"clone","","",3,[[["self"]],["tlsoptions"]]],[11,"clone","mongodb","",40,[[["self"]],["client"]]],[11,"clone","mongodb::options","",29,[[["self"]],["hint"]]],[11,"clone","","",30,[[["self"]],["cursortype"]]],[11,"clone","","",5,[[["self"]],["insertoneoptions"]]],[11,"clone","","",6,[[["self"]],["insertmanyoptions"]]],[11,"clone","","",31,[[["self"]],["updatemodifications"]]],[11,"clone","","",13,[[["self"]],["aggregateoptions"]]],[11,"clone","","",15,[[["self"]],["estimateddocumentcountoptions"]]],[11,"clone","","",16,[[["self"]],["distinctoptions"]]],[11,"clone","mongodb","",41,[[["self"]],["collection"]]],[11,"clone","","",0,[[["self"]],["namespace"]]],[11,"clone","mongodb::options","",21,[[["self"]],["collation"]]],[11,"clone","","",32,[[["self"]],["readconcern"]]],[11,"clone","","",22,[[["self"]],["writeconcern"]]],[11,"clone","","",33,[[["self"]],["acknowledgment"]]],[11,"clone","","",23,[[["self"]],["databaseoptions"]]],[11,"clone","mongodb","",42,[[["self"]],["database"]]],[11,"clone","mongodb::error","",43,[[["self"]],["error"]]],[11,"clone","","",44,[[["self"]],["commanderror"]]],[11,"clone","","",45,[[["self"]],["writeconcernerror"]]],[11,"clone","","",46,[[["self"]],["writeerror"]]],[11,"clone","","",47,[[["self"]],["bulkwriteerror"]]],[11,"clone","","",48,[[["self"]],["bulkwritefailure"]]],[11,"clone","","",50,[[["self"]],["writefailure"]]],[11,"clone","mongodb::event::command","",65,[[["self"]],["commandstartedevent"]]],[11,"clone","","",66,[[["self"]],["commandsucceededevent"]]],[11,"clone","","",67,[[["self"]],["commandfailedevent"]]],[11,"clone","mongodb::options","",36,[[["self"]],["selectioncriteria"]]],[11,"clone","","",37,[[["self"]],["readpreference"]]],[11,"default","mongodb::options::auth","",38,[[],["credential"]]],[11,"default","mongodb::options","",1,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",3,[[],["tlsoptions"]]],[11,"default","mongodb::event::cmap","",51,[[],["connectionpooloptions"]]],[11,"default","mongodb::options","",4,[[],["collectionoptions"]]],[11,"default","","",5,[[],["insertoneoptions"]]],[11,"default","","",6,[[],["insertmanyoptions"]]],[11,"default","","",7,[[],["updateoptions"]]],[11,"default","","",8,[[],["replaceoptions"]]],[11,"default","","",9,[[],["deleteoptions"]]],[11,"default","","",10,[[],["findoneanddeleteoptions"]]],[11,"default","","",11,[[],["findoneandreplaceoptions"]]],[11,"default","","",12,[[],["findoneandupdateoptions"]]],[11,"default","","",13,[[],["aggregateoptions"]]],[11,"default","","",14,[[],["countoptions"]]],[11,"default","","",15,[[],["estimateddocumentcountoptions"]]],[11,"default","","",16,[[],["distinctoptions"]]],[11,"default","","",17,[[],["findoptions"]]],[11,"default","","",18,[[],["findoneoptions"]]],[11,"default","","",20,[[],["dropcollectionoptions"]]],[11,"default","","",21,[[],["collation"]]],[11,"default","","",22,[[],["writeconcern"]]],[11,"default","","",23,[[],["databaseoptions"]]],[11,"default","","",24,[[],["createcollectionoptions"]]],[11,"default","","",25,[[],["dropdatabaseoptions"]]],[11,"default","","",26,[[],["listcollectionsoptions"]]],[11,"eq","mongodb::options::auth","",39,[[["self"],["authmechanism"]],["bool"]]],[11,"eq","","",38,[[["credential"],["self"]],["bool"]]],[11,"ne","","",38,[[["credential"],["self"]],["bool"]]],[11,"eq","mongodb::options","",1,[[["self"]],["bool"]]],[11,"eq","","",2,[[["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["tls"]],["bool"]]],[11,"ne","","",27,[[["self"],["tls"]],["bool"]]],[11,"eq","","",3,[[["tlsoptions"],["self"]],["bool"]]],[11,"ne","","",3,[[["tlsoptions"],["self"]],["bool"]]],[11,"eq","mongodb::event::cmap","",51,[[["self"]],["bool"]]],[11,"eq","mongodb::options","",32,[[["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["writeconcern"]],["bool"]]],[11,"ne","","",22,[[["self"],["writeconcern"]],["bool"]]],[11,"eq","","",33,[[["self"],["acknowledgment"]],["bool"]]],[11,"ne","","",33,[[["self"],["acknowledgment"]],["bool"]]],[11,"eq","mongodb::error","",45,[[["writeconcernerror"],["self"]],["bool"]]],[11,"ne","","",45,[[["writeconcernerror"],["self"]],["bool"]]],[11,"eq","","",46,[[["writeerror"],["self"]],["bool"]]],[11,"ne","","",46,[[["writeerror"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["bulkwriteerror"]],["bool"]]],[11,"ne","","",47,[[["self"],["bulkwriteerror"]],["bool"]]],[11,"eq","mongodb::event::cmap","",52,[[["self"],["poolcreatedevent"]],["bool"]]],[11,"ne","","",52,[[["self"],["poolcreatedevent"]],["bool"]]],[11,"eq","","",53,[[["poolclearedevent"],["self"]],["bool"]]],[11,"ne","","",53,[[["poolclearedevent"],["self"]],["bool"]]],[11,"eq","","",54,[[["poolclosedevent"],["self"]],["bool"]]],[11,"ne","","",54,[[["poolclosedevent"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["connectioncreatedevent"]],["bool"]]],[11,"ne","","",55,[[["self"],["connectioncreatedevent"]],["bool"]]],[11,"eq","","",56,[[["self"],["connectionreadyevent"]],["bool"]]],[11,"ne","","",56,[[["self"],["connectionreadyevent"]],["bool"]]],[11,"eq","","",57,[[["self"],["connectionclosedevent"]],["bool"]]],[11,"ne","","",57,[[["self"],["connectionclosedevent"]],["bool"]]],[11,"eq","","",62,[[["connectionclosedreason"],["self"]],["bool"]]],[11,"eq","","",58,[[["self"],["connectioncheckoutstartedevent"]],["bool"]]],[11,"ne","","",58,[[["self"],["connectioncheckoutstartedevent"]],["bool"]]],[11,"eq","","",59,[[["connectioncheckoutfailedevent"],["self"]],["bool"]]],[11,"ne","","",59,[[["connectioncheckoutfailedevent"],["self"]],["bool"]]],[11,"eq","","",63,[[["connectioncheckoutfailedreason"],["self"]],["bool"]]],[11,"eq","","",60,[[["connectioncheckedoutevent"],["self"]],["bool"]]],[11,"ne","","",60,[[["connectioncheckedoutevent"],["self"]],["bool"]]],[11,"eq","","",61,[[["connectioncheckedinevent"],["self"]],["bool"]]],[11,"ne","","",61,[[["connectioncheckedinevent"],["self"]],["bool"]]],[11,"eq","mongodb::options","",36,[[["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["readpreference"]],["bool"]]],[11,"ne","","",37,[[["self"],["readpreference"]],["bool"]]],[11,"deref","mongodb::error","",43,[[["self"]]]],[11,"fmt","mongodb::options::auth","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::options","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::event::cmap","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::options","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::options","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::options","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::error","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::event::cmap","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::event::command","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::results","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::options","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","mongodb::error","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"hash","mongodb::options","",1,[[["self"],["h"]]]],[11,"from_str","mongodb::options::auth","",39,[[["str"]],["result"]]],[11,"description","mongodb::error","",43,[[["self"]],["str"]]],[11,"cause","","",43,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",43,[[["self"]],[["option",["error"]],["error"]]]],[11,"description","","",49,[[["self"]],["str"]]],[11,"cause","","",49,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",49,[[["self"]],[["option",["error"]],["error"]]]],[11,"to_socket_addrs","mongodb::options","",1,[[["self"]],["result"]]],[11,"deserialize","mongodb::event::cmap","",51,[[["__d"]],["result"]]],[11,"deserialize","mongodb::options","",29,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","mongodb","",0,[[["d"]],["result"]]],[11,"deserialize","mongodb::options","",21,[[["__d"]],["result"]]],[11,"deserialize","mongodb::error","",44,[[["__d"]],["result"]]],[11,"deserialize","","",45,[[["__d"]],["result"]]],[11,"deserialize","","",47,[[["__d"]],["result"]]],[11,"deserialize","mongodb::event::cmap","",52,[[["__d"]],["result"]]],[11,"deserialize","","",53,[[["__d"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],["result"]]],[11,"deserialize","","",55,[[["__d"]],["result"]]],[11,"deserialize","","",56,[[["__d"]],["result"]]],[11,"deserialize","","",57,[[["__d"]],["result"]]],[11,"deserialize","","",62,[[["__d"]],["result"]]],[11,"deserialize","","",58,[[["__d"]],["result"]]],[11,"deserialize","","",59,[[["__d"]],["result"]]],[11,"deserialize","","",63,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"deserialize","","",61,[[["__d"]],["result"]]],[11,"serialize","mongodb::options","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["s"],["self"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["s"],["self"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"builder","mongodb::event::cmap","Create a builder for building `ConnectionPoolOptions`. On…",51,[[],["typedbuilder_builderfor_connectionpooloptions"]]]],"p":[[3,"Namespace"],[3,"StreamAddress"],[3,"ClientOptions"],[3,"TlsOptions"],[3,"CollectionOptions"],[3,"InsertOneOptions"],[3,"InsertManyOptions"],[3,"UpdateOptions"],[3,"ReplaceOptions"],[3,"DeleteOptions"],[3,"FindOneAndDeleteOptions"],[3,"FindOneAndReplaceOptions"],[3,"FindOneAndUpdateOptions"],[3,"AggregateOptions"],[3,"CountOptions"],[3,"EstimatedDocumentCountOptions"],[3,"DistinctOptions"],[3,"FindOptions"],[3,"FindOneOptions"],[3,"IndexModel"],[3,"DropCollectionOptions"],[3,"Collation"],[3,"WriteConcern"],[3,"DatabaseOptions"],[3,"CreateCollectionOptions"],[3,"DropDatabaseOptions"],[3,"ListCollectionsOptions"],[4,"Tls"],[4,"ReturnDocument"],[4,"Hint"],[4,"CursorType"],[4,"UpdateModifications"],[4,"ReadConcern"],[4,"Acknowledgment"],[4,"ValidationLevel"],[4,"ValidationAction"],[4,"SelectionCriteria"],[4,"ReadPreference"],[3,"Credential"],[4,"AuthMechanism"],[3,"Client"],[3,"Collection"],[3,"Database"],[3,"Error"],[3,"CommandError"],[3,"WriteConcernError"],[3,"WriteError"],[3,"BulkWriteError"],[3,"BulkWriteFailure"],[4,"ErrorKind"],[4,"WriteFailure"],[3,"ConnectionPoolOptions"],[3,"PoolCreatedEvent"],[3,"PoolClearedEvent"],[3,"PoolClosedEvent"],[3,"ConnectionCreatedEvent"],[3,"ConnectionReadyEvent"],[3,"ConnectionClosedEvent"],[3,"ConnectionCheckoutStartedEvent"],[3,"ConnectionCheckoutFailedEvent"],[3,"ConnectionCheckedOutEvent"],[3,"ConnectionCheckedInEvent"],[4,"ConnectionClosedReason"],[4,"ConnectionCheckoutFailedReason"],[8,"CmapEventHandler"],[3,"CommandStartedEvent"],[3,"CommandSucceededEvent"],[3,"CommandFailedEvent"],[8,"CommandEventHandler"],[3,"InsertOneResult"],[3,"InsertManyResult"],[3,"UpdateResult"],[3,"DeleteResult"],[3,"Cursor"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","i":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",null,null],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[["result",["tcpbuilder"]],["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[["result",["tcpbuilder"]],["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],[["tcpbuilder"],["result",["tcpbuilder"]]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],[["result",["tcpstream"]],["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],[["result",["tcpstream"]],["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],[["tcplistener"],["result",["tcplistener"]]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[["udpbuilder"],["result",["udpbuilder"]]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[["udpbuilder"],["result",["udpbuilder"]]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],[["result",["udpsocket"]],["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["u32"],["self"]],[["result"],["self"]]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],[["result",["option"]],["option",["error"]]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["u32"],["self"]],[["result"],["self"]]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],[["result",["option"]],["option",["error"]]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],[["result"],["self"]]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],[["result",["bool"]],["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],[["result"],["self"]]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],[["result",["bool"]],["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["tosocketaddrs"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],[["ipv4addr"],["result",["ipv4addr"]]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["u32"],["self"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["u32"],["self"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["u32"],["self"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],[["result",["u32"]],["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],[["result",["bool"]],["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["u32"],["self"],["ipv6addr"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["u32"],["self"],["ipv6addr"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["option",["u32"]],["u32"],["self"]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["option",["duration"]],["self"],["duration"]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],[["option",["u32"]],["result",["option"]]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],[["result",["option"]],["option",["error"]]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["tosocketaddrs"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"recv","","Receives data on the socket from the remote address to…",6,[[["self"]],[["result",["usize"]],["usize"]]]],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_port","","",0,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],[["result"],["self"]]]],[11,"get_reuse_port","","",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]]],"p":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["u32"],["roots"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["clone"],["integer"]],[["clone"],["integer"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["clone"],["integer"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["numcast"],["option"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["usize"],["one"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["usize"],["one"],["clone"],["checkedmul"]],[["option"],["one"],["clone"],["checkedmul"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",29,null],[10,"pow","","Returns `self` to the power `rhs`.",29,[[["rhs"]]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",31,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["opaque_debug"] = {"doc":"Macro for opaque `Debug` trait implementation.","i":[[14,"impl_opaque_debug","opaque_debug","Macro for defining opaque `Debug` implementation.",null,null]],"p":[]};
searchIndex["os_info"] = {"doc":"`os_info`","i":[[3,"Info","os_info","Holds information about operating system (type, version,…",null,null],[3,"Version","","Operating system version including version number and…",null,null],[4,"Bitness","","Operating system architecture in terms of how many bits…",null,null],[13,"Unknown","","Unknown bitness (unable to determine).",0,null],[13,"X32","","32-bit.",0,null],[13,"X64","","64-bit.",0,null],[4,"Type","","A list of supported operating system types.",null,null],[13,"Unknown","","Unknown operating system.",1,null],[13,"Android","","Android…",1,null],[13,"Emscripten","","Emscripten (https://en.wikipedia.org/wiki/Emscripten).",1,null],[13,"Linux","","Linux based operating system…",1,null],[13,"Redhat","","Red Hat Linux (https://en.wikipedia.org/wiki/Red_Hat_Linux).",1,null],[13,"RedHatEnterprise","","Red Hat Enterprise Linux…",1,null],[13,"Ubuntu","","Ubuntu…",1,null],[13,"Debian","","Debian (https://en.wikipedia.org/wiki/Debian).",1,null],[13,"Arch","","Arch Linux (https://en.wikipedia.org/wiki/Arch_Linux).",1,null],[13,"Centos","","CentOS (https://en.wikipedia.org/wiki/CentOS).",1,null],[13,"Fedora","","Fedora…",1,null],[13,"Amazon","","Amazon…",1,null],[13,"Alpine","","Alpine Linux (https://en.wikipedia.org/wiki/Alpine_Linux)",1,null],[13,"Macos","","Mac OS X/OS X/macOS (https://en.wikipedia.org/wiki/MacOS).",1,null],[13,"Redox","","Redox…",1,null],[13,"Windows","","Windows (https://en.wikipedia.org/wiki/Microsoft_Windows).",1,null],[4,"VersionType","","Operating system version.",null,null],[13,"Unknown","","Unknown version.",2,null],[13,"Semantic","","Semantic version (major.minor.patch).",2,null],[13,"Custom","","Custom version format.",2,null],[5,"get","","Returns information about the current operating system…",null,[[],["info"]]],[11,"unknown","","Constructs a new `Info` instance with unknown type,…",3,[[],["self"]]],[11,"new","","Constructs a new `Info` instance with the given type,…",3,[[["version"],["bitness"],["type"]],["self"]]],[11,"os_type","","Returns operating system type. See `Type` for details.",3,[[["self"]],["type"]]],[11,"version","","Returns operating system version. See `Version` for details.",3,[[["self"]],["version"]]],[11,"bitness","","Returns operating system bitness. See `Bitness` for details.",3,[[["self"]],["bitness"]]],[11,"unknown","","Constructs a new `Version` instance with unknown version…",4,[[],["self"]]],[11,"semantic","","Constructs a new `Version` instance with semantic version…",4,[[["string"],["u64"],["option",["string"]]],["self"]]],[11,"custom","","Construct a new `Version` instance with \"custom\" (non…",4,[[["into",["string"]],["string"],["option",["string"]]],["self"]]],[11,"version","","Returns operating system version. See `VersionType` for…",4,[[["self"]],["versiontype"]]],[11,"edition","","Returns optional (can be absent) operation system edition.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["bitness"]]],[11,"clone","","",3,[[["self"]],["info"]]],[11,"clone","","",1,[[["self"]],["type"]]],[11,"clone","","",4,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["versiontype"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",0,[[["bitness"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["info"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["type"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["version"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["versiontype"],["self"]],["ordering"]]],[11,"eq","","",0,[[["bitness"],["self"]],["bool"]]],[11,"eq","","",3,[[["info"],["self"]],["bool"]]],[11,"ne","","",3,[[["info"],["self"]],["bool"]]],[11,"eq","","",1,[[["type"],["self"]],["bool"]]],[11,"eq","","",4,[[["version"],["self"]],["bool"]]],[11,"ne","","",4,[[["version"],["self"]],["bool"]]],[11,"eq","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"ne","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["bitness"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["info"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",3,[[["info"],["self"]],["bool"]]],[11,"le","","",3,[[["info"],["self"]],["bool"]]],[11,"gt","","",3,[[["info"],["self"]],["bool"]]],[11,"ge","","",3,[[["info"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["type"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["version"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",4,[[["version"],["self"]],["bool"]]],[11,"le","","",4,[[["version"],["self"]],["bool"]]],[11,"gt","","",4,[[["version"],["self"]],["bool"]]],[11,"ge","","",4,[[["version"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["versiontype"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"le","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"gt","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"ge","","",2,[[["versiontype"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]]],"p":[[4,"Bitness"],[4,"Type"],[4,"VersionType"],[3,"Info"],[3,"Version"]]};
searchIndex["pbkdf2"] = {"doc":"This crate implements the PBKDF2 key derivation function…","i":[[4,"CheckError","pbkdf2","`pbkdf2_check` error",null,null],[13,"HashMismatch","","Password hash mismatch, e.g. due to the incorrect password.",0,null],[13,"InvalidFormat","","Invalid format of the hash string.",0,null],[5,"pbkdf2_simple","","A helper function that should be sufficient for the…",null,[[["str"],["u32"]],[["result",["string"]],["string"]]]],[5,"pbkdf2_check","","Compares a password against the result of a `pbkdf2_simple`.",null,[[["str"]],[["checkerror"],["result",["checkerror"]]]]],[5,"pbkdf2","","Generic implementation of PBKDF2 algorithm.",null,[[["usize"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["checkerror"],["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["checkerror"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[4,"CheckError"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the…","i":[[3,"AsciiSet","percent_encoding","Represents a set of characters or bytes in the ASCII range.",null,null],[3,"PercentEncode","","The return type of [`percent_encode`] and…",null,null],[3,"PercentDecode","","The return type of [`percent_decode`].",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given byte.",null,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given set.",null,[[["asciiset"]],["percentencode"]]],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,[[["str"],["asciiset"]],["percentencode"]]],[5,"percent_decode_str","","Percent-decode the given string.",null,[[["str"]],["percentdecode"]]],[5,"percent_decode","","Percent-decode the given bytes.",null,[[],["percentdecode"]]],[17,"CONTROLS","","The set of 0x00 to 0x1F (C0 controls), and 0x7F (DEL).",null,null],[17,"NON_ALPHANUMERIC","","Everything that is not an ASCII letter or digit.",null,null],[11,"add","","",0,[[["self"],["u8"]],["self"]]],[11,"remove","","",0,[[["self"],["u8"]],["self"]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[],[["result",["cow","utf8error"]],["cow",["str"]],["utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[],[["str"],["cow",["str"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"clone","","",2,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"AsciiSet"],[3,"PercentDecode"],[3,"PercentEncode"]]};
searchIndex["pin_project_lite"] = {"doc":"A lightweight version of [pin-project] written with…","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection struct covering all the…",null,null]],"p":[]};
searchIndex["pin_utils"] = {"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["span"],["self"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["span"],["self"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span"],["self"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span"],["self"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,[[],["literal"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["span"],["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["lexerror"],["result",["tokenstream","lexerror"]]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_error"] = {"doc":"proc-macro-error","i":[[23,"proc_macro_error","proc_macro_error","",null,null],[3,"Diagnostic","","Represents a single diagnostic message",null,null],[4,"Level","","Represents a diagnostic level",null,null],[13,"Error","","",0,null],[13,"Warning","","",0,null],[5,"abort_if_dirty","","Abort macro execution and display all the emitted errors,…",null,[[]]],[0,"dummy","","Facility to emit dummy implementations (or whatever) in…",null,null],[5,"set_dummy","proc_macro_error::dummy","Sets dummy token stream which will be appended to…",null,[[["tokenstream"]],[["tokenstream"],["option",["tokenstream"]]]]],[5,"append_dummy","","Same as [`set_dummy`] but, instead of resetting, appends…",null,[[["tokenstream"]]]],[11,"new","proc_macro_error","Create a new diagnostic message that points to…",1,[[["string"],["level"]],["self"]]],[11,"spanned","","Create a new diagnostic message that points to the `span`",1,[[["string"],["level"],["span"]],["self"]]],[11,"span_error","","Add another error message to self such that it will be…",1,[[["string"],["span"]],["self"]]],[11,"span_help","","Attach a \"help\" note to your main message, the note will…",1,[[["string"],["span"]],["self"]]],[11,"help","","Attach a \"help\" note to your main message.",1,[[["string"]],["self"]]],[11,"span_note","","Attach a note to your main message, the note will have…",1,[[["string"],["span"]],["self"]]],[11,"note","","Attach a note to your main message",1,[[["string"]],["self"]]],[11,"message","","The message of main warning/error (no notes attached)",1,[[["self"]],["str"]]],[11,"abort","","Abort the proc-macro's execution and display the diagnostic.",1,[[]]],[11,"emit","","Display the diagnostic while not aborting macro execution.",1,[[]]],[8,"ResultExt","","This traits expands `Result<T, Into<Diagnostic>>` with…",null,null],[16,"Ok","","",2,null],[10,"unwrap_or_abort","","Behaves like `Result::unwrap`: if self is `Ok` yield the…",2,[[]]],[10,"expect_or_abort","","Behaves like `Result::expect`: if self is `Ok` yield the…",2,[[["str"]]]],[8,"OptionExt","","This traits expands `Option` with some handy shortcuts.",null,null],[16,"Some","","",3,null],[10,"expect_or_abort","","Behaves like `Option::expect`: if self is `Some` yield the…",3,[[["str"]]]],[14,"diagnostic","","Build `Diagnostic` instance from provided arguments.",null,null],[14,"abort","","Abort proc-macro execution right now and display the error.",null,null],[14,"abort_call_site","","Shortcut for `abort!(Span::call_site(), msg...)`. This…",null,null],[14,"emit_error","","Emit an error while not aborting the proc-macro right away.",null,null],[14,"emit_call_site_error","","Shortcut for `emit_error!(Span::call_site(), ...)`. This…",null,null],[14,"emit_warning","","Emit a warning. Warnings are not errors and compilation…",null,null],[14,"emit_call_site_warning","","Shortcut for `emit_warning!(Span::call_site(), ...)`.",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]]],"p":[[4,"Level"],[3,"Diagnostic"],[8,"ResultExt"],[8,"OptionExt"]]};
searchIndex["proc_macro_error_attr"] = {"doc":"This is `#[proc_macro_error]` attribute to be used with…","i":[[23,"proc_macro_error","proc_macro_error_attr","",null,null]],"p":[]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[["x"]],[["context"],["result",["context"]]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["tokenstream"],["self"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["error"],["result",["error"]]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["vec",["f64"]],["into",["vec"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["result",["weightederror"]],["weightederror"]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["weightederror"],["weightedindex"],["result",["weightedindex","weightederror"]]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["result",["weightederror"]],["weightederror"]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["usize"],["vec",["usize"]]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["error"],["result",["error"]]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","rand::rngs::adapter","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"next_u32","rand::rngs","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["error"],["result",["error"]]]]],[11,"default","","",50,[[],["osrng"]]],[11,"from","rand","",39,[[["nonzerou32"]],["error"]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"source","","",39,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","rand::rngs","",50,[[["self"]],["osrng"]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["usize"],["vec",["usize"]]],["self"]]],[11,"len","rand::seq","",54,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",55,[[["self"]]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","rand::seq","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["stdrng"]]],[11,"clone","","",52,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",56,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",52,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["bernoullierror"],["self"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter"],["self"]],["result"]]],[11,"source","","",53,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],[["error"],["regex"],["result",["regex","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_bytes","","Returns the matched text.",8,[[["self"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,[[["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["replacer"],["self"]],["cow"]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["replacer"],["self"]],["cow"]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["replacer"],["usize"],["self"]],["cow"]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["capturelocations"],["self"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["usize"],["capturelocations"],["self"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec"],["self"]]]],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["str"],["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["str"],["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],[["result",["regexset","error"]],["error"],["regexset"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],[["error"],["regex"],["result",["regex","error"]]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["str"],["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["str"],["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["str"],["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["str"],["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["str"],["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["usize"],["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["str"],["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["str"],["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["str"],["self"],["capturelocations"]],[["option",["match"]],["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["capturelocations"],["usize"],["str"],["self"]],[["option",["match"]],["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["str"],["self"],["string"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","regex","",26,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",26,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"replace_append","","",0,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"next_back","","",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","","",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","regex::bytes","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_back","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",31,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","regex","",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","regex::bytes","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","regex","",24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",27,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",28,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",29,[[["self"]],[["option",["option"]],["option",["match"]]]]],[11,"next","","",23,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",25,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"eq","","",1,[[["error"],["self"]],["bool"]]],[11,"ne","","",1,[[["error"],["self"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"index","regex::bytes","",11,[[["self"],["usize"]]]],[11,"index","","",11,[[["str"],["self"]]]],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["str"],["self"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],[["error"],["regex"],["result",["regex","error"]]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["cow",["str"]],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],["bool"]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],[["unicodeworderror"],["result",["bool","unicodeworderror"]],["bool"]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",23,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",23,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",23,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",24,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,null],[13,"Literal","","A single character literal, which includes escape sequences.",24,null],[13,"Dot","","The \"any character\" class.",24,null],[13,"Assertion","","A single zero-width assertion.",24,null],[13,"Class","","A single character class. This includes all forms of…",24,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",24,null],[13,"Group","","A grouped regular expression.",24,null],[13,"Alternation","","An alternation of regular expressions.",24,null],[13,"Concat","","A concatenation of regular expressions.",24,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,null],[13,"Punctuation","","The literal is written as an escape because it is…",25,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",25,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",25,null],[13,"Special","","The literal is written as a specially recognized escape,…",25,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,null],[13,"Space","","Space, spelled `\\ ` (`\\x20`). Note that this can only…",26,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",27,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",27,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",27,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",28,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",29,null],[13,"Space","","Whitespace.",29,null],[13,"Word","","Word characters.",29,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",30,null],[13,"Alpha","","`[A-Za-z]`",30,null],[13,"Ascii","","`[\\x00-\\x7F]`",30,null],[13,"Blank","","`[ \\t]`",30,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,null],[13,"Digit","","`[0-9]`",30,null],[13,"Graph","","`[!-~]`",30,null],[13,"Lower","","`[a-z]`",30,null],[13,"Print","","`[ -~]`",30,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,null],[13,"Upper","","`[A-Z]`",30,null],[13,"Word","","`[0-9A-Za-z_]`",30,null],[13,"Xdigit","","`[0-9A-Fa-f]`",30,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,null],[13,"Named","","A binary property, general category or script. The string…",31,null],[13,"NamedValue","","A property name and an associated value.",31,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,null],[12,"name","","The property name (which may be empty).",31,null],[12,"value","","The property value (which may be empty).",31,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",32,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",32,null],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",32,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",33,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",34,null],[13,"Literal","","A single literal.",34,null],[13,"Range","","A range between two literals.",34,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",34,null],[13,"Union","","A union of items.",34,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",35,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",36,null],[13,"EndLine","","`$`",36,null],[13,"StartText","","`\\A`",36,null],[13,"EndText","","`\\z`",36,null],[13,"WordBoundary","","`\\b`",36,null],[13,"NotWordBoundary","","`\\B`",36,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",37,null],[13,"ZeroOrMore","","`*`",37,null],[13,"OneOrMore","","`+`",37,null],[13,"Range","","`{m,n}`",37,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",38,null],[13,"AtLeast","","`{m,}`",38,null],[13,"Bounded","","`{m,n}`",38,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",39,null],[13,"CaptureName","","`(?P<name>a)`",39,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",40,null],[13,"Flag","","A single flag in a group.",40,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",41,null],[13,"MultiLine","","`m`",41,null],[13,"DotMatchesNewLine","","`s`",41,null],[13,"SwapGreed","","`U`",41,null],[13,"Unicode","","`u`",41,null],[13,"IgnoreWhitespace","","`x`",41,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["ast"],["visitor"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",42,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",42,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",42,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",43,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,[[["str"],["self"]],[["ast"],["result",["ast","error"]],["error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",43,[[["str"],["self"]],[["result",["withcomments","error"]],["withcomments"],["error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",44,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",44,[[["ast"],["self"],["write"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",45,null],[16,"Err","","An error that visiting an AST might return.",45,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",45,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",46,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",46,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",46,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",46,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[["classasciikind"],["option",["classasciikind"]]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",33,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],[["option",["flags"]],["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],[["option",["usize"]],["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["bool"],["option",["bool"]]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",47,null],[12,"hir","","The expression inside the capturing group, which may be…",47,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",48,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",48,null],[12,"hir","","The expression being repeated.",48,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",49,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",49,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",49,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",49,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",49,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",49,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",49,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",50,null],[13,"Literal","","A single literal character that matches exactly this…",50,null],[13,"Class","","A single character class that matches any of the…",50,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",50,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",50,null],[13,"Repetition","","A repetition operation applied to a child expression.",50,null],[13,"Group","","A possibly capturing group, which contains a child…",50,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",50,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",50,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,null],[13,"Byte","","A single character represented by an arbitrary byte.",51,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",52,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",53,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",53,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",53,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",53,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",54,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",54,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",55,null],[13,"CaptureName","","A named capturing group.",55,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,null],[12,"index","","The capture index of the group.",55,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",57,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir"],["visitor"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",58,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len","","Returns the length of the smallest literal.",58,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],[["option",["literals"]],["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,[[["hir"],["self"]],["bool"]]],[11,"union","","Unions this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add","","Adds the given literal to this set.",58,[[["literal"],["self"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",58,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,[[["classbytes"],["self"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse","","Reverses all members in place.",58,[[["self"]]]],[11,"clear","","Clears this set of all members.",58,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",59,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",null,null],[11,"new","","Create a new printer.",60,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",60,[[["hir"],["self"],["write"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",61,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",61,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",62,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",62,[[["str"],["self"],["ast"]],[["result",["hir","error"]],["hir"],["error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",63,null],[16,"Err","","An error that visiting an HIR might return.",63,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",63,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",64,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",64,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",64,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",65,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate","","Negate this character class in place.",52,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",66,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",66,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",66,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",66,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",66,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",66,[[["self"]]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",66,[[["self"]],[["result",["casefolderror"]],["casefolderror"]]]],[11,"negate","","Negate this character class.",66,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",66,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",66,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",66,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",66,[[["self"],["classunicode"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",66,[[["self"]],["bool"]]],[11,"new","","Create a new Unicode scalar value range for a character…",67,[[["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",67,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",67,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",68,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",68,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",68,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",68,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",68,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",68,[[["self"]]]],[11,"negate","","Negate this byte class.",68,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",68,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",68,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",68,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",68,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",69,[[["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",69,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",69,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",70,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",70,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",70,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",71,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",71,[[["str"],["self"]],[["result",["hir"]],["hir"]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",72,null],[12,"end","","End of byte range (inclusive).",72,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",73,null],[13,"Two","","Two successive byte ranges.",73,null],[13,"Three","","Three successive byte ranges.",73,null],[13,"Four","","Four successive byte ranges.",73,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",73,[[["self"]]]],[11,"len","","Returns the number of byte ranges in this sequence.",73,[[["self"]],["usize"]]],[11,"reverse","","Reverses the ranges in this sequence.",73,[[["self"]]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",73,[[["self"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",72,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",74,[[["char"]],["self"]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"into_iter","","",77,[[],["i"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"into_iter","","",78,[[],["i"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","regex_syntax::utf8","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"into_iter","","",74,[[],["i"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"drop","regex_syntax::ast","",24,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","regex_syntax::hir","",65,[[["self"]]]],[11,"as_ref","regex_syntax::hir::literal","",59,[[["self"]]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"next","regex_syntax::hir","",77,[[["self"]],[["option",["classunicoderange"]],["classunicoderange"]]]],[11,"next","","",78,[[["self"]],[["option",["classbytesrange"]],["classbytesrange"]]]],[11,"next","regex_syntax::utf8","",74,[[["self"]],["option"]]],[11,"clone","regex_syntax::ast::parse","",42,[[["self"]],["parserbuilder"]]],[11,"clone","","",43,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",46,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",24,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",25,[[["self"]],["literalkind"]]],[11,"clone","","",26,[[["self"]],["specialliteralkind"]]],[11,"clone","","",27,[[["self"]],["hexliteralkind"]]],[11,"clone","","",28,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",29,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",30,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",31,[[["self"]],["classunicodekind"]]],[11,"clone","","",32,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",33,[[["self"]],["classset"]]],[11,"clone","","",34,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",35,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",36,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",37,[[["self"]],["repetitionkind"]]],[11,"clone","","",38,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",39,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",40,[[["self"]],["flagsitemkind"]]],[11,"clone","","",41,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",58,[[["self"]],["literals"]]],[11,"clone","","",59,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",61,[[["self"]],["translatorbuilder"]]],[11,"clone","","",62,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",64,[[["self"]],["error"]]],[11,"clone","","",49,[[["self"]],["errorkind"]]],[11,"clone","","",65,[[["self"]],["hir"]]],[11,"clone","","",50,[[["self"]],["hirkind"]]],[11,"clone","","",51,[[["self"]],["literal"]]],[11,"clone","","",52,[[["self"]],["class"]]],[11,"clone","","",66,[[["self"]],["classunicode"]]],[11,"clone","","",67,[[["self"]],["classunicoderange"]]],[11,"clone","","",68,[[["self"]],["classbytes"]]],[11,"clone","","",69,[[["self"]],["classbytesrange"]]],[11,"clone","","",53,[[["self"]],["anchor"]]],[11,"clone","","",54,[[["self"]],["wordboundary"]]],[11,"clone","","",47,[[["self"]],["group"]]],[11,"clone","","",55,[[["self"]],["groupkind"]]],[11,"clone","","",48,[[["self"]],["repetition"]]],[11,"clone","","",56,[[["self"]],["repetitionkind"]]],[11,"clone","","",57,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",70,[[["self"]],["parserbuilder"]]],[11,"clone","","",71,[[["self"]],["parser"]]],[11,"clone","regex_syntax::utf8","",73,[[["self"]],["utf8sequence"]]],[11,"clone","","",72,[[["self"]],["utf8range"]]],[11,"default","regex_syntax::ast::parse","",42,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",61,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",67,[[],["classunicoderange"]]],[11,"default","","",69,[[],["classbytesrange"]]],[11,"default","regex_syntax","",70,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["position"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",59,[[["literal"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",67,[[["classunicoderange"],["self"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["classbytesrange"]],["ordering"]]],[11,"cmp","regex_syntax::utf8","",73,[[["self"],["utf8sequence"]],["ordering"]]],[11,"cmp","","",72,[[["self"],["utf8range"]],["ordering"]]],[11,"eq","regex_syntax::ast","",46,[[["error"],["self"]],["bool"]]],[11,"ne","","",46,[[["error"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["position"],["self"]],["bool"]]],[11,"ne","","",2,[[["position"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["comment"],["self"]],["bool"]]],[11,"ne","","",4,[[["comment"],["self"]],["bool"]]],[11,"eq","","",24,[[["ast"],["self"]],["bool"]]],[11,"ne","","",24,[[["ast"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",25,[[["literalkind"],["self"]],["bool"]]],[11,"ne","","",25,[[["literalkind"],["self"]],["bool"]]],[11,"eq","","",26,[[["specialliteralkind"],["self"]],["bool"]]],[11,"eq","","",27,[[["hexliteralkind"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["class"]],["bool"]]],[11,"ne","","",28,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",29,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["classascii"],["self"]],["bool"]]],[11,"ne","","",9,[[["classascii"],["self"]],["bool"]]],[11,"eq","","",30,[[["classasciikind"],["self"]],["bool"]]],[11,"eq","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"ne","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"eq","","",31,[[["classunicodekind"],["self"]],["bool"]]],[11,"ne","","",31,[[["classunicodekind"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"ne","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["classset"]],["bool"]]],[11,"ne","","",33,[[["self"],["classset"]],["bool"]]],[11,"eq","","",34,[[["classsetitem"],["self"]],["bool"]]],[11,"ne","","",34,[[["classsetitem"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"ne","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",35,[[["classsetbinaryopkind"],["self"]],["bool"]]],[11,"eq","","",15,[[["assertion"],["self"]],["bool"]]],[11,"ne","","",15,[[["assertion"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"ne","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"eq","","",37,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",37,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",38,[[["repetitionrange"],["self"]],["bool"]]],[11,"ne","","",38,[[["repetitionrange"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",39,[[["groupkind"],["self"]],["bool"]]],[11,"ne","","",39,[[["groupkind"],["self"]],["bool"]]],[11,"eq","","",19,[[["capturename"],["self"]],["bool"]]],[11,"ne","","",19,[[["capturename"],["self"]],["bool"]]],[11,"eq","","",20,[[["setflags"],["self"]],["bool"]]],[11,"ne","","",20,[[["setflags"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"ne","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"eq","","",40,[[["flagsitemkind"],["self"]],["bool"]]],[11,"ne","","",40,[[["flagsitemkind"],["self"]],["bool"]]],[11,"eq","","",41,[[["flag"],["self"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",58,[[["self"],["literals"]],["bool"]]],[11,"ne","","",58,[[["self"],["literals"]],["bool"]]],[11,"eq","","",59,[[["literal"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"eq","","",49,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",65,[[["hir"],["self"]],["bool"]]],[11,"ne","","",65,[[["hir"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",51,[[["self"],["literal"]],["bool"]]],[11,"ne","","",51,[[["self"],["literal"]],["bool"]]],[11,"eq","","",52,[[["self"],["class"]],["bool"]]],[11,"ne","","",52,[[["self"],["class"]],["bool"]]],[11,"eq","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"ne","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"eq","","",68,[[["classbytes"],["self"]],["bool"]]],[11,"ne","","",68,[[["classbytes"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",53,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",54,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",47,[[["group"],["self"]],["bool"]]],[11,"ne","","",47,[[["group"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",48,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",48,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","regex_syntax::utf8","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["position"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir::literal","",59,[[["literal"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","regex_syntax::hir","",67,[[["classunicoderange"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"le","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"gt","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"ge","","",67,[[["classunicoderange"],["self"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["classbytesrange"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","regex_syntax::utf8","",73,[[["self"],["utf8sequence"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"le","","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"gt","","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"ge","","",73,[[["self"],["utf8sequence"]],["bool"]]],[11,"partial_cmp","","",72,[[["self"],["utf8range"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"le","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"gt","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"ge","","",72,[[["self"],["utf8range"]],["bool"]]],[11,"deref","regex_syntax::hir::literal","",59,[[["self"]],["vec"]]],[11,"deref_mut","","",59,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast::parse","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::utf8","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"description","regex_syntax::ast","",46,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",64,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["resolv_conf"] = {"doc":"The crate simply parses `/etc/resolv.conf` file and…","i":[[3,"AddrParseError","resolv_conf","An error which can be returned when parsing an IP address.",null,null],[3,"Config","","Represent a resolver configuration, as described in `man 5…",null,null],[12,"nameservers","","List of nameservers",0,null],[12,"sortlist","","List of preferred addresses",0,null],[12,"debug","","Enable DNS resolve debugging",0,null],[12,"ndots","","Number of dots in name to try absolute resolving first…",0,null],[12,"timeout","","Dns query timeout (default 5 [sec])",0,null],[12,"attempts","","Number of attempts to resolve name if server is…",0,null],[12,"rotate","","Round-robin selection of servers (default false)",0,null],[12,"no_check_names","","Don't check names for validity (default false)",0,null],[12,"inet6","","Try AAAA query before A",0,null],[12,"ip6_bytestring","","Use reverse lookup of ipv6 using bit-label format…",0,null],[12,"ip6_dotint","","Do ipv6 reverse lookups in ip6.int zone instead of…",0,null],[12,"edns0","","Enable dns extensions described in RFC 2671",0,null],[12,"single_request","","Don't make ipv4 and ipv6 requests simultaneously",0,null],[12,"single_request_reopen","","Use same socket for the A and AAAA requests",0,null],[12,"no_tld_query","","Don't resolve unqualified name as top level domain",0,null],[12,"use_vc","","Force using TCP for DNS resolution",0,null],[12,"lookup","","The order in which databases should be searched during a…",0,null],[12,"family","","The order in which internet protocol families should be…",0,null],[3,"DomainIter","","An iterator returned by `Config.get_last_search_or_domain`",null,null],[4,"ParseError","","Error while parsing resolv.conf file",null,null],[13,"InvalidUtf8","","Error that may be returned when the string to parse…",1,null],[13,"InvalidValue","","Error returned a value for a given directive is invalid.…",1,null],[13,"InvalidOptionValue","","Error returned when a value for a given option is invalid.…",1,null],[13,"InvalidOption","","Error returned when a invalid option is found.",1,null],[13,"InvalidDirective","","Error returned when a invalid directive is found.",1,null],[13,"InvalidIp","","Error returned when a value cannot be parsed an an IP…",1,null],[13,"ExtraData","","Error returned when there is extra data at the end of a…",1,null],[4,"Network","","A network, that is an IP address and a mask",null,null],[13,"V4","","Represent an IPv4 network address",2,null],[13,"V6","","Represent an IPv6 network address",2,null],[4,"ScopedIp","","Represent an IP address. This type is similar to…",null,null],[13,"V4","","Represent an IPv4 address",3,null],[13,"V6","","Represent an IPv6 and its scope identifier, if any",3,null],[4,"Lookup","","The databases that should be searched during a lookup.…",null,null],[13,"File","","Search for entries in /etc/hosts",4,null],[13,"Bind","","Query a domain name server",4,null],[13,"Extra","","A database we don't know yet",4,null],[4,"Family","","The internet protocol family that is prefered. This option…",null,null],[13,"Inet4","","A A lookup for an ipv4 address",5,null],[13,"Inet6","","A AAAA lookup for an ipv6 address",5,null],[11,"new","","Create a new `Config` object with default values.",0,[[],["config"]]],[11,"parse","","Parse a buffer and return the corresponding `Config` object.",0,[[["asref"]],[["result",["config","parseerror"]],["config"],["parseerror"]]]],[11,"get_last_search_or_domain","","Return the suffixes declared in the last \"domain\" or…",0,[[["self"]],["domainiter"]]],[11,"get_domain","","Return the domain declared in the last \"domain\" directive.",0,[[["self"]],[["option",["string"]],["string"]]]],[11,"get_search","","Return the domains declared in the last \"search\" directive.",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"set_domain","","Set the domain corresponding to the \"domain\" directive.",0,[[["self"],["string"]]]],[11,"set_search","","Set the domains corresponding the \"search\" directive.",0,[[["self"],["string"],["vec",["string"]]]]],[11,"glibc_normalize","","Normalize config according to glibc rulees",0,[[["self"]]]],[11,"get_nameservers_or_local","","Get nameserver or on the local machine",0,[[["self"]],[["vec",["scopedip"]],["scopedip"]]]],[11,"get_system_domain","","Get domain from config or fallback to the suffix of a…",0,[[["self"]],[["string"],["option",["string"]]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["ipv6addr"]],["self"]]],[11,"from","","",3,[[["ipv4addr"]],["self"]]],[11,"from","","",3,[[["ipaddr"]],["self"]]],[11,"from","","",6,[[["addrparseerror"]],["self"]]],[11,"into","","",3,[[],["ipaddr"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"clone","","",2,[[["self"]],["network"]]],[11,"clone","","",3,[[["self"]],["scopedip"]]],[11,"clone","","",6,[[["self"]],["addrparseerror"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"clone","","",7,[[["self"]],["domainiter"]]],[11,"clone","","",4,[[["self"]],["lookup"]]],[11,"clone","","",5,[[["self"]],["family"]]],[11,"eq","","",2,[[["self"],["network"]],["bool"]]],[11,"ne","","",2,[[["self"],["network"]],["bool"]]],[11,"eq","","",3,[[["self"],["scopedip"]],["bool"]]],[11,"ne","","",3,[[["self"],["scopedip"]],["bool"]]],[11,"eq","","",6,[[["self"],["addrparseerror"]],["bool"]]],[11,"eq","","",0,[[["config"],["self"]],["bool"]]],[11,"ne","","",0,[[["config"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["lookup"]],["bool"]]],[11,"ne","","",4,[[["self"],["lookup"]],["bool"]]],[11,"eq","","",5,[[["self"],["family"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_str","","Parse a string representing an IP address.",3,[[["str"]],[["scopedip"],["addrparseerror"],["result",["scopedip","addrparseerror"]]]]],[11,"cause","","",1,[[["self"]],[["option",["error"]],["error"]]]],[11,"description","","",6,[[["self"]],["str"]]]],"p":[[3,"Config"],[4,"ParseError"],[4,"Network"],[4,"ScopedIp"],[4,"Lookup"],[4,"Family"],[3,"AddrParseError"],[3,"DomainIter"]]};
searchIndex["ring"] = {"doc":"Safe, fast, small crypto using Rust with BoringSSL's…","i":[[0,"test","ring","Testing framework.",null,null],[3,"TestCase","ring::test","A test case. A test case consists of a set of named…",null,null],[3,"File","","A test input file.",null,null],[12,"file_name","","The name (path) of the file.",0,null],[12,"contents","","The contents of the file.",0,null],[5,"compile_time_assert_clone","","`compile_time_assert_clone::<T>();` fails to compile if…",null,[[]]],[5,"compile_time_assert_copy","","`compile_time_assert_copy::<T>();` fails to compile if `T`…",null,[[]]],[5,"compile_time_assert_send","","`compile_time_assert_send::<T>();` fails to compile if `T`…",null,[[]]],[5,"compile_time_assert_sync","","`compile_time_assert_sync::<T>();` fails to compile if `T`…",null,[[]]],[5,"run","","Parses test cases out of the given file, calling `f` on…",null,[[["f"],["file"]]]],[5,"from_hex","","Decode an string of hex digits into a sequence of bytes.…",null,[[["str"]],[["string"],["result",["vec","string"]],["vec",["u8"]]]]],[11,"consume_bool","","Maps the string \"true\" to true and the string \"false\" to…",1,[[["str"],["self"]],["bool"]]],[11,"consume_digest_alg","","Maps the strings \"SHA1\", \"SHA256\", \"SHA384\", and \"SHA512\"…",1,[[["str"],["self"]],[["algorithm"],["option",["algorithm"]]]]],[11,"consume_bytes","","Returns the value of an attribute that is encoded as a…",1,[[["str"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"consume_usize","","Returns the value of an attribute that is an integer, in…",1,[[["str"],["self"]],["usize"]]],[11,"consume_usize_bits","","Returns the value of an attribute that is an integer, in…",1,[[["str"],["self"]],["bitlength"]]],[11,"consume_string","","Returns the raw value of an attribute, without any…",1,[[["str"],["self"]],["string"]]],[11,"consume_optional_string","","Like `consume_string()` except it returns `None` if the…",1,[[["str"],["self"]],[["option",["string"]],["string"]]]],[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",null,null],[3,"Nonce","ring::aead","A nonce for a single AEAD opening or sealing operation.",null,null],[3,"OpeningKey","","An AEAD key for authenticating and decrypting (\"opening\"),…",null,null],[3,"SealingKey","","An AEAD key for encrypting and signing (\"sealing\"), bound…",null,null],[3,"Aad","","The additionally authenticated data (AAD) for an opening…",null,null],[3,"UnboundKey","","An AEAD key without a designated role or nonce sequence.",null,null],[3,"LessSafeKey","","Immutable keys for use in situations where…",null,null],[3,"Algorithm","","An AEAD Algorithm.",null,null],[3,"Tag","","An authentication tag.",null,null],[0,"chacha20_poly1305_openssh","","The [chacha20-poly1305@openssh.com] AEAD-ish construct.",null,null],[3,"SealingKey","ring::aead::chacha20_poly1305_openssh","A key for sealing packets.",null,null],[3,"OpeningKey","","A key for opening packets.",null,null],[17,"KEY_LEN","","The length of key.",null,null],[17,"PACKET_LENGTH_LEN","","The length in bytes of the `packet_length` field in a SSH…",null,null],[17,"TAG_LEN","","The length in bytes of an authentication tag.",null,null],[11,"new","","Constructs a new `SealingKey`.",2,[[],["sealingkey"]]],[11,"seal_in_place","","Seals (encrypts and signs) a packet.",2,[[["u32"],["self"]]]],[11,"new","","Constructs a new `OpeningKey`.",3,[[],["openingkey"]]],[11,"decrypt_packet_length","","Returns the decrypted, but unauthenticated, packet length.",3,[[["u32"],["self"]]]],[11,"open_in_place","","Opens (authenticates and decrypts) a packet.",3,[[["u32"],["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"try_assume_unique_for_key","ring::aead","Constructs a `Nonce` with the given value, assuming that…",4,[[],[["unspecified"],["result",["unspecified"]]]]],[11,"assume_unique_for_key","","Constructs a `Nonce` with the given value, assuming that…",4,[[],["self"]]],[0,"quic","","QUIC Header Protection.",null,null],[3,"HeaderProtectionKey","ring::aead::quic","A key for generating QUIC Header Protection masks.",null,null],[3,"Algorithm","","A QUIC Header Protection Algorithm.",null,null],[7,"AES_128","","AES-128.",null,null],[7,"AES_256","","AES-256.",null,null],[7,"CHACHA20","","ChaCha20.",null,null],[11,"new","","Create a new header protection key.",5,[[["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"new_mask","","Generate a new QUIC Header Protection mask.",5,[[["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"algorithm","","The key's algorithm.",5,[[["self"]],["algorithm"]]],[11,"key_len","","The length of the key.",6,[[["self"]],["usize"]]],[11,"sample_len","","The required sample length.",6,[[["self"]],["usize"]]],[7,"AES_128_GCM","ring::aead","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"CHACHA20_POLY1305","","ChaCha20-Poly1305 as described in [RFC 7539].",null,null],[17,"NONCE_LEN","","All the AEADs we support use 96-bit nonces.",null,null],[17,"MAX_TAG_LEN","","The maximum length of a tag for the algorithms in this…",null,null],[8,"NonceSequence","","A sequences of unique nonces.",null,null],[10,"advance","","Returns the next nonce in the sequence.",7,[[["self"]],[["nonce"],["unspecified"],["result",["nonce","unspecified"]]]]],[8,"BoundKey","","An AEAD key bound to a nonce sequence.",null,null],[10,"new","","Constructs a new key from the given `UnboundKey` and…",8,[[["unboundkey"],["n"]],["self"]]],[10,"algorithm","","The key's AEAD algorithm.",8,[[["self"]],["algorithm"]]],[11,"open_in_place","","Authenticates and decrypts (“opens”) data in place.",9,[[["self"],["aad"]],[["result",["unspecified"]],["unspecified"]]]],[11,"open_within","","Authenticates and decrypts (“opens”) data in place, with a…",9,[[["usize"],["self"],["aad"],["rangefrom",["usize"]]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place","","Deprecated. Renamed to `seal_in_place_append_tag()`.",10,[[["self"],["aad"],["inout"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_append_tag","","Encrypts and signs (“seals”) data in place, appending the…",10,[[["self"],["aad"],["inout"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_separate_tag","","Encrypts and signs (“seals”) data in place.",10,[[["self"],["aad"]],[["tag"],["unspecified"],["result",["tag","unspecified"]]]]],[11,"from","","Construct the `Aad` from the given bytes.",11,[[["a"]],["self"]]],[11,"empty","","Construct an empty `Aad`.",11,[[],["self"]]],[11,"new","","Constructs an `UnboundKey`.",12,[[["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"algorithm","","The key's AEAD algorithm.",12,[[["self"]],["algorithm"]]],[11,"new","","Constructs a `LessSafeKey` from an `UnboundKey`.",13,[[["unboundkey"]],["self"]]],[11,"open_in_place","","Like [`OpeningKey::open_in_place()`], except it accepts an…",13,[[["nonce"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"open_within","","Like [`OpeningKey::open_within()`], except it accepts an…",13,[[["nonce"],["usize"],["rangefrom",["usize"]],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place","","Deprecated. Renamed to `seal_in_place_append_tag()`.",13,[[["nonce"],["inout"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_append_tag","","Like [`SealingKey::seal_in_place_append_tag()`], except it…",13,[[["nonce"],["inout"],["aad"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"seal_in_place_separate_tag","","Like `SealingKey::seal_in_place_separate_tag()`, except it…",13,[[["nonce"],["aad"],["self"]],[["tag"],["unspecified"],["result",["tag","unspecified"]]]]],[11,"algorithm","","The key's AEAD algorithm.",13,[[["self"]],["algorithm"]]],[11,"key_len","","The length of the key.",14,[[["self"]],["usize"]]],[11,"tag_len","","The length of a tag.",14,[[["self"]],["usize"]]],[11,"nonce_len","","The length of the nonces.",14,[[["self"]],["usize"]]],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",null,null],[3,"Algorithm","ring::agreement","A key agreement algorithm.",null,null],[3,"EphemeralPrivateKey","","An ephemeral private key for use (only) with…",null,null],[3,"PublicKey","","A public key for key agreement.",null,null],[3,"UnparsedPublicKey","","An unparsed, possibly malformed, public key for key…",null,null],[5,"agree_ephemeral","","Performs a key agreement with an ephemeral private key and…",null,[[["e"],["ephemeralprivatekey"],["unparsedpublickey"],["f"]],["result"]]],[7,"X25519","","X25519 (ECDH using Curve25519) as described in [RFC 7748].",null,null],[7,"ECDH_P256","","ECDH using the NSA Suite B P-256 (secp256r1) curve.",null,null],[7,"ECDH_P384","","ECDH using the NSA Suite B P-384 (secp384r1) curve.",null,null],[11,"generate","","Generate a new ephemeral private key for the given…",15,[[["securerandom"],["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"compute_public_key","","Computes the public key from the private key.",15,[[["self"]],[["publickey"],["result",["publickey","unspecified"]],["unspecified"]]]],[11,"algorithm","","The algorithm for the private key.",15,[[["self"]],["algorithm"]]],[11,"algorithm","","The algorithm for the public key.",16,[[["self"]],["algorithm"]]],[11,"new","","Constructs a new `UnparsedPublicKey`.",17,[[["b"],["algorithm"]],["self"]]],[11,"algorithm","","TODO: doc",17,[[["self"]],["algorithm"]]],[11,"bytes","","TODO: doc",17,[[["self"]],["b"]]],[0,"constant_time","ring","Constant-time operations.",null,null],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(error::Unspecified)`…",null,[[],[["result",["unspecified"]],["unspecified"]]]],[0,"io","ring","Serialization and deserialization.",null,null],[3,"Positive","ring::io","A serialized positive integer.",null,null],[11,"big_endian_without_leading_zero","","Returns the value, ordered from significant byte to least…",18,[[["self"]]]],[11,"first_byte","","Returns the first byte.",18,[[["self"]],["u8"]]],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",null,null],[3,"Context","ring::digest","A context for multi-step (Init-Update-Finish) digest…",null,null],[3,"Digest","","A calculated digest value.",null,null],[3,"Algorithm","","A digest algorithm.",null,null],[12,"output_len","","The length of a finalized digest.",19,null],[12,"chaining_len","","The size of the chaining value of the digest function, in…",19,null],[12,"block_len","","The internal block length.",19,null],[5,"digest","","Returns the digest of `data` using the given digest…",null,[[["algorithm"]],["digest"]]],[7,"SHA1_FOR_LEGACY_USE_ONLY","","SHA-1 as specified in [FIPS 180-4]. Deprecated.",null,null],[7,"SHA256","","SHA-256 as specified in [FIPS 180-4].",null,null],[7,"SHA384","","SHA-384 as specified in [FIPS 180-4].",null,null],[7,"SHA512","","SHA-512 as specified in [FIPS 180-4].",null,null],[7,"SHA512_256","","SHA-512/256 as specified in [FIPS 180-4].",null,null],[17,"MAX_BLOCK_LEN","","The maximum block length (`Algorithm::block_len`) of all…",null,null],[17,"MAX_OUTPUT_LEN","","The maximum output length (`Algorithm::output_len`) of all…",null,null],[17,"MAX_CHAINING_LEN","","The maximum chaining length (`Algorithm::chaining_len`) of…",null,null],[17,"SHA1_OUTPUT_LEN","","The length of the output of SHA-1, in bytes.",null,null],[17,"SHA256_OUTPUT_LEN","","The length of the output of SHA-256, in bytes.",null,null],[17,"SHA384_OUTPUT_LEN","","The length of the output of SHA-384, in bytes.",null,null],[17,"SHA512_OUTPUT_LEN","","The length of the output of SHA-512, in bytes.",null,null],[17,"SHA512_256_OUTPUT_LEN","","The length of the output of SHA-512/256, in bytes.",null,null],[11,"new","","Constructs a new context.",20,[[["algorithm"]],["self"]]],[11,"update","","Updates the digest with all the data in `data`. `update`…",20,[[["self"]]]],[11,"finish","","Finalizes the digest calculation and returns the digest…",20,[[],["digest"]]],[11,"algorithm","","The algorithm that this context is using.",20,[[["self"]],["algorithm"]]],[11,"algorithm","","The algorithm that was used to calculate the digest value.",21,[[["self"]],["algorithm"]]],[0,"error","ring","Error reporting.",null,null],[3,"Unspecified","ring::error","An error with absolutely no details.",null,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[11,"description_","","The value returned from ::description()",22,[[["self"]],["str"]]],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",null,null],[3,"Algorithm","ring::hkdf","An HKDF algorithm.",null,null],[3,"Salt","","A salt for HKDF operations.",null,null],[3,"Prk","","A HKDF PRK (pseudorandom key).",null,null],[3,"Okm","","An HKDF OKM (Output Keying Material)",null,null],[7,"HKDF_SHA1_FOR_LEGACY_USE_ONLY","","HKDF using HMAC-SHA-1. Obsolete.",null,null],[7,"HKDF_SHA256","","HKDF using HMAC-SHA-256.",null,null],[7,"HKDF_SHA384","","HKDF using HMAC-SHA-384.",null,null],[7,"HKDF_SHA512","","HKDF using HMAC-SHA-512.",null,null],[8,"KeyType","","The length of the OKM (Output Keying Material) for a…",null,null],[10,"len","","The length that `Prk::expand()` should expand its input to.",23,[[["self"]],["usize"]]],[11,"hmac_algorithm","","The underlying HMAC algorithm.",24,[[["self"]],["algorithm"]]],[11,"new","","Constructs a new `Salt` with the given value based on the…",25,[[["algorithm"]],["self"]]],[11,"extract","","The [HKDF-Extract] operation.",25,[[["self"]],["prk"]]],[11,"algorithm","","The algorithm used to derive this salt.",25,[[["self"]],["algorithm"]]],[11,"new_less_safe","","Construct a new `Prk` directly with the given value.",26,[[["algorithm"]],["self"]]],[11,"expand","","The [HKDF-Expand] operation.",26,[[["keytype"],["self"]],[["okm"],["unspecified"],["result",["okm","unspecified"]]]]],[11,"len","","The `OkmLength` given to `Prk::expand()`.",27,[[["self"]],["l"]]],[11,"fill","","Fills `out` with the output of the HKDF-Expand operation…",27,[[],[["result",["unspecified"]],["unspecified"]]]],[0,"hmac","ring","HMAC is specified in [RFC 2104].",null,null],[3,"Algorithm","ring::hmac","An HMAC algorithm.",null,null],[3,"Tag","","An HMAC tag.",null,null],[3,"Key","","A key to use for HMAC signing.",null,null],[3,"Context","","A context for multi-step (Init-Update-Finish) HMAC signing.",null,null],[5,"sign","","Calculates the HMAC of `data` using the key `key` in one…",null,[[["key"]],["tag"]]],[5,"verify","","Calculates the HMAC of `data` using the signing key `key`,…",null,[[["key"]],[["result",["unspecified"]],["unspecified"]]]],[6,"Signature","","A deprecated alias for `Tag`.",null,null],[6,"SigningKey","","`hmac::SigningKey` was renamed to `hmac::Key`.",null,null],[6,"VerificationKey","","`hmac::VerificationKey` was merged into `hmac::Key`.",null,null],[6,"SigningContext","","`hmac::SigningContext` was renamed to `hmac::Context`.",null,null],[7,"HMAC_SHA1_FOR_LEGACY_USE_ONLY","","HMAC using SHA-1. Obsolete.",null,null],[7,"HMAC_SHA256","","HMAC using SHA-256.",null,null],[7,"HMAC_SHA384","","HMAC using SHA-384.",null,null],[7,"HMAC_SHA512","","HMAC using SHA-512.",null,null],[11,"digest_algorithm","","The digest algorithm this HMAC algorithm is based on.",28,[[["self"]],["algorithm"]]],[11,"generate","","Generate an HMAC signing key using the given digest…",29,[[["securerandom"],["algorithm"]],[["unspecified"],["result",["unspecified"]]]]],[11,"new","","Construct an HMAC signing key using the given digest…",29,[[["algorithm"]],["self"]]],[11,"algorithm","","The digest algorithm for the key.",29,[[["self"]],["algorithm"]]],[11,"with_key","","Constructs a new HMAC signing context using the given…",30,[[["key"]],["self"]]],[11,"update","","Updates the HMAC with all the data in `data`. `update` may…",30,[[["self"]]]],[11,"sign","","Finalizes the HMAC calculation and returns the HMAC value.…",30,[[],["tag"]]],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",null,null],[3,"Algorithm","ring::pbkdf2","A PBKDF2 algorithm.",null,null],[5,"derive","","Fills `out` with the key derived using PBKDF2 with the…",null,[[["algorithm"],["nonzerou32"]]]],[5,"verify","","Verifies that a previously-derived (e.g., using `derive`)…",null,[[["algorithm"],["nonzerou32"]],[["result",["unspecified"]],["unspecified"]]]],[7,"PBKDF2_HMAC_SHA1","","PBKDF2 using HMAC-SHA1.",null,null],[7,"PBKDF2_HMAC_SHA256","","PBKDF2 using HMAC-h.",null,null],[7,"PBKDF2_HMAC_SHA384","","PBKDF2 using HMAC-SHA384.",null,null],[7,"PBKDF2_HMAC_SHA512","","PBKDF2 using HMAC-SHA512.",null,null],[0,"pkcs8","ring","PKCS#8 is specified in [RFC 5958].",null,null],[3,"Document","ring::pkcs8","A generated PKCS#8 document.",null,null],[0,"rand","ring","Cryptographic pseudo-random number generation.",null,null],[3,"Random","ring::rand","A random value constructed from a `SecureRandom` that…",null,null],[3,"SystemRandom","","A secure random number generator where the random values…",null,null],[5,"generate","","Generate the new random value using `rng`.",null,[[["securerandom"]],[["unspecified"],["result",["random","unspecified"]],["random"]]]],[8,"SecureRandom","","A secure random number generator.",null,null],[10,"fill","","Fills `dest` with random bytes.",31,[[["self"]],[["result",["unspecified"]],["unspecified"]]]],[8,"RandomlyConstructable","","A type that can be returned by `ring::rand::generate()`.",null,null],[11,"expose","","Expose the random value.",32,[[],["t"]]],[11,"new","","Constructs a new `SystemRandom`.",33,[[],["self"]]],[0,"signature","ring","Public key signatures: signing and verification.",null,null],[3,"Ed25519KeyPair","ring::signature","An Ed25519 key pair, for signing.",null,null],[3,"EdDSAParameters","","Parameters for EdDSA signing and verification.",null,null],[3,"EcdsaKeyPair","","An ECDSA key pair, used for signing.",null,null],[3,"EcdsaSigningAlgorithm","","An ECDSA signing algorithm.",null,null],[3,"EcdsaVerificationAlgorithm","","An ECDSA verification algorithm.",null,null],[3,"RsaKeyPair","","An RSA key pair, used for signing.",null,null],[3,"RsaSubjectPublicKey","","A serialized RSA public key.",null,null],[3,"RsaPublicKeyComponents","","Low-level API for the verification of RSA signatures.",null,null],[12,"n","","The public modulus, encoded in big-endian bytes without…",34,null],[12,"e","","The public exponent, encoded in big-endian bytes without…",34,null],[3,"RsaParameters","","Parameters for RSA verification.",null,null],[3,"Signature","","A public key signature returned from a signing operation.",null,null],[3,"UnparsedPublicKey","","An unparsed, possibly malformed, public key for signature…",null,null],[7,"ED25519","","Verification of [Ed25519] signatures.",null,null],[7,"ECDSA_P256_SHA256_ASN1_SIGNING","","Signing of ASN.1 DER-encoded ECDSA signatures using the…",null,null],[7,"ECDSA_P256_SHA256_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",null,null],[7,"ECDSA_P384_SHA384_ASN1_SIGNING","","Signing of ASN.1 DER-encoded ECDSA signatures using the…",null,null],[7,"ECDSA_P384_SHA384_FIXED_SIGNING","","Signing of fixed-length (PKCS#11 style) ECDSA signatures…",null,null],[7,"ECDSA_P256_SHA256_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",null,null],[7,"ECDSA_P256_SHA256_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",null,null],[7,"ECDSA_P256_SHA384_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",null,null],[7,"ECDSA_P384_SHA256_ASN1","","Not recommended. Verification of ASN.1 DER-encoded ECDSA…",null,null],[7,"ECDSA_P384_SHA384_ASN1","","Verification of ASN.1 DER-encoded ECDSA signatures using…",null,null],[7,"ECDSA_P384_SHA384_FIXED","","Verification of fixed-length (PKCS#11 style) ECDSA…",null,null],[7,"RSA_PKCS1_1024_8192_SHA1_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 1024-8192…",null,null],[7,"RSA_PKCS1_1024_8192_SHA256_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 1024-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA1_FOR_LEGACY_USE_ONLY","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","Verification of signatures using RSA keys of 3072-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA256","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA384","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA512","","Verification of signatures using RSA keys of 2048-8192…",null,null],[7,"RSA_PKCS1_SHA256","","PKCS#1 1.5 padding using SHA-256 for RSA signatures.",null,null],[7,"RSA_PKCS1_SHA384","","PKCS#1 1.5 padding using SHA-384 for RSA signatures.",null,null],[7,"RSA_PKCS1_SHA512","","PKCS#1 1.5 padding using SHA-512 for RSA signatures.",null,null],[7,"RSA_PSS_SHA256","","RSA PSS padding using SHA-256 for RSA signatures.",null,null],[7,"RSA_PSS_SHA384","","RSA PSS padding using SHA-384 for RSA signatures.",null,null],[7,"RSA_PSS_SHA512","","RSA PSS padding using SHA-512 for RSA signatures.",null,null],[17,"ED25519_PUBLIC_KEY_LEN","","The length of an Ed25519 public key.",null,null],[8,"RsaEncoding","","An RSA signature encoding as described in [RFC 3447…",null,null],[8,"KeyPair","","Key pairs for signing messages (private key and public key).",null,null],[16,"PublicKey","","The type of the public key.",35,null],[10,"public_key","","The public key for the key pair.",35,[[["self"]]]],[8,"VerificationAlgorithm","","A signature verification algorithm.",null,null],[10,"verify","","Verify the signature `signature` of message `msg` with the…",36,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"new","","Construct a new `UnparsedPublicKey`.",37,[[["verificationalgorithm"],["b"]],["self"]]],[11,"verify","","Parses the public key and verifies `signature` is a valid…",37,[[["self"]],[["result",["unspecified"]],["unspecified"]]]],[14,"test_file","ring","References a test input file.",null,null],[11,"from","ring::test","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","ring::aead","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","ring::aead::chacha20_poly1305_openssh","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","ring::aead::quic","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","ring::agreement","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","ring::io","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"from","ring::digest","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","ring::signature","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","ring::error","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"from","ring::hkdf","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","ring::hmac","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"from","ring::pbkdf2","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"from","ring::pkcs8","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","ring::rand","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"fill","","",33,[[["self"]],[["unspecified"],["result",["unspecified"]]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"from","ring::signature","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"new","ring::aead","",9,[[["unboundkey"],["n"]],["self"]]],[11,"algorithm","","",9,[[["self"]],["algorithm"]]],[11,"new","","",10,[[["unboundkey"],["n"]],["self"]]],[11,"algorithm","","",10,[[["self"]],["algorithm"]]],[11,"len","ring::hkdf","",24,[[["self"]],["usize"]]],[11,"len","ring::hmac","",28,[[["self"]],["usize"]]],[11,"public_key","ring::signature","",40,[[["self"]]]],[11,"public_key","","",43,[[["self"]]]],[11,"public_key","","",50,[[["self"]]]],[11,"verify","","",41,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"verify","","",44,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"verify","","",49,[[["self"],["input"]],[["result",["unspecified"]],["unspecified"]]]],[11,"from","ring::aead","",12,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","ring::aead::quic","",5,[[["algorithm"],["okm",["algorithm"]]],["self"]]],[11,"from","ring::error","",45,[[["endofinput"]],["self"]]],[11,"from","","",45,[[["tryfromsliceerror"]],["self"]]],[11,"from","","",45,[[["keyrejected"]],["self"]]],[11,"from","ring::hkdf","",25,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","","",26,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"from","ring::hmac","",29,[[["okm",["algorithm"]],["algorithm"]],["self"]]],[11,"fmt","ring::test","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::aead","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::aead::quic","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::agreement","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::digest","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::signature","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::error","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::hkdf","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::hmac","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::rand","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","ring::signature","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","ring::error","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"eq","ring::aead","",14,[[["self"]],["bool"]]],[11,"eq","ring::aead::quic","",6,[[["self"]],["bool"]]],[11,"eq","ring::agreement","",39,[[["self"],["algorithm"]],["bool"]]],[11,"eq","ring::digest","",19,[[["self"]],["bool"]]],[11,"eq","ring::signature","",42,[[["self"]],["bool"]]],[11,"eq","ring::error","",45,[[["unspecified"],["self"]],["bool"]]],[11,"eq","ring::hkdf","",24,[[["algorithm"],["self"]],["bool"]]],[11,"ne","","",24,[[["algorithm"],["self"]],["bool"]]],[11,"eq","ring::hmac","",28,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",28,[[["self"],["algorithm"]],["bool"]]],[11,"eq","ring::pbkdf2","",47,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",47,[[["self"],["algorithm"]],["bool"]]],[11,"as_ref","ring::aead","",11,[[["self"]]]],[11,"as_ref","","",38,[[["self"]]]],[11,"as_ref","","",4,[[["self"]]]],[11,"as_ref","ring::agreement","",16,[[["self"]]]],[11,"as_ref","ring::digest","",21,[[["self"]]]],[11,"as_ref","ring::hmac","",46,[[["self"]]]],[11,"as_ref","ring::pkcs8","",48,[[["self"]]]],[11,"as_ref","ring::signature","",51,[[["self"]]]],[11,"as_ref","","",52,[[["self"]]]],[11,"clone","ring::agreement","",16,[[["self"]],["publickey"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","ring::io","",18,[[["self"]],["positive"]]],[11,"clone","ring::digest","",20,[[["self"]],["context"]]],[11,"clone","","",21,[[["self"]],["digest"]]],[11,"clone","ring::error","",45,[[["self"]],["unspecified"]]],[11,"clone","","",22,[[["self"]],["keyrejected"]]],[11,"clone","ring::hkdf","",24,[[["self"]],["algorithm"]]],[11,"clone","","",26,[[["self"]],["prk"]]],[11,"clone","ring::hmac","",28,[[["self"]],["algorithm"]]],[11,"clone","","",46,[[["self"]],["tag"]]],[11,"clone","","",29,[[["self"]],["key"]]],[11,"clone","","",30,[[["self"]],["context"]]],[11,"clone","ring::pbkdf2","",47,[[["self"]],["algorithm"]]],[11,"clone","ring::rand","",33,[[["self"]],["systemrandom"]]],[11,"clone","ring::signature","",34,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["rsasubjectpublickey"]]],[11,"clone","","",52,[[["self"]],["signature"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"generate_pkcs8","","Generates a new key pair and returns the key pair…",40,[[["securerandom"]],[["result",["document","unspecified"]],["document"],["unspecified"]]]],[11,"from_pkcs8","","Constructs an Ed25519 key pair by parsing an unencrypted…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_pkcs8_maybe_unchecked","","Constructs an Ed25519 key pair by parsing an unencrypted…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_seed_and_public_key","","Constructs an Ed25519 key pair from the private key seed…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_seed_unchecked","","Constructs a Ed25519 key pair from the private key seed…",40,[[],[["result",["keyrejected"]],["keyrejected"]]]],[11,"sign","","Returns the signature of the message `msg`.",40,[[["self"]],["signature"]]],[11,"generate_pkcs8","","Generates a new key pair and returns the key pair…",43,[[["securerandom"],["ecdsasigningalgorithm"]],[["result",["document","unspecified"]],["document"],["unspecified"]]]],[11,"from_pkcs8","","Constructs an ECDSA key pair by parsing an unencrypted…",43,[[["ecdsasigningalgorithm"]],[["result",["keyrejected"]],["keyrejected"]]]],[11,"from_private_key_and_public_key","","Constructs an ECDSA key pair directly from the…",43,[[["ecdsasigningalgorithm"]],[["result",["keyrejected"]],["keyrejected"]]]],[11,"sign","","Returns the signature of the `message` using a random…",43,[[["securerandom"],["self"]],[["unspecified"],["result",["signature","unspecified"]],["signature"]]]],[11,"verify","","Verifies that `signature` is a valid signature of…",34,[[["rsaparameters"],["self"]],[["result",["unspecified"]],["unspecified"]]]],[11,"from_pkcs8","","Parses an unencrypted PKCS#8-encoded RSA private key.",50,[[],[["keyrejected"],["result",["keyrejected"]]]]],[11,"from_der","","Parses an RSA private key that is not inside a PKCS#8…",50,[[],[["keyrejected"],["result",["keyrejected"]]]]],[11,"public_modulus_len","","Returns the length in bytes of the key pair's public…",50,[[["self"]],["usize"]]],[11,"modulus","","The public modulus (n).",51,[[["self"]],["positive"]]],[11,"exponent","","The public exponent (e).",51,[[["self"]],["positive"]]],[11,"sign","","Sign `msg`. `msg` is digested using the digest algorithm…",50,[[["rsaencoding"],["securerandom"],["self"]],[["result",["unspecified"]],["unspecified"]]]]],"p":[[3,"File"],[3,"TestCase"],[3,"SealingKey"],[3,"OpeningKey"],[3,"Nonce"],[3,"HeaderProtectionKey"],[3,"Algorithm"],[8,"NonceSequence"],[8,"BoundKey"],[3,"OpeningKey"],[3,"SealingKey"],[3,"Aad"],[3,"UnboundKey"],[3,"LessSafeKey"],[3,"Algorithm"],[3,"EphemeralPrivateKey"],[3,"PublicKey"],[3,"UnparsedPublicKey"],[3,"Positive"],[3,"Algorithm"],[3,"Context"],[3,"Digest"],[3,"KeyRejected"],[8,"KeyType"],[3,"Algorithm"],[3,"Salt"],[3,"Prk"],[3,"Okm"],[3,"Algorithm"],[3,"Key"],[3,"Context"],[8,"SecureRandom"],[3,"Random"],[3,"SystemRandom"],[3,"RsaPublicKeyComponents"],[8,"KeyPair"],[8,"VerificationAlgorithm"],[3,"UnparsedPublicKey"],[3,"Tag"],[3,"Algorithm"],[3,"Ed25519KeyPair"],[3,"EdDSAParameters"],[3,"EcdsaSigningAlgorithm"],[3,"EcdsaKeyPair"],[3,"EcdsaVerificationAlgorithm"],[3,"Unspecified"],[3,"Tag"],[3,"Algorithm"],[3,"Document"],[3,"RsaParameters"],[3,"RsaKeyPair"],[3,"RsaSubjectPublicKey"],[3,"Signature"]]};
searchIndex["rustc_demangle"] = {"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",null,[[["str"]],[["result",["demangle","trydemangleerror"]],["trydemangleerror"],["demangle"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["rustls"] = {"doc":"Rustls - a modern TLS library Rustls is a TLS library that…","i":[[3,"Stream","rustls","This type implements `io::Read` and `io::Write`,…",null,null],[12,"sess","","Our session",0,null],[12,"sock","","The underlying transport, like a socket",0,null],[3,"StreamOwned","","This type implements `io::Read` and `io::Write`,…",null,null],[12,"sess","","Our session",1,null],[12,"sock","","The underlying transport, like a socket",1,null],[3,"RootCertStore","","A container for root certificates able to provide a…",null,null],[12,"roots","","The list of roots.",2,null],[3,"NoClientSessionStorage","","An implementor of `StoresClientSessions` which does nothing.",null,null],[3,"ClientSessionMemoryCache","","An implementor of `StoresClientSessions` that stores…",null,null],[3,"ClientConfig","","Common configuration for (typically) all connections made…",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",3,null],[12,"root_store","","Collection of root certificates.",3,null],[12,"alpn_protocols","","Which ALPN protocols we include in our client hello. If…",3,null],[12,"session_persistence","","How we store session data or tickets.",3,null],[12,"mtu","","Our MTU.  If None, we don't limit TLS message sizes.",3,null],[12,"client_auth_cert_resolver","","How to decide what client auth certificate/keys to use.",3,null],[12,"enable_tickets","","Whether to support RFC5077 tickets. You must provide a…",3,null],[12,"versions","","Supported versions, in no particular order. The default is…",3,null],[12,"ct_logs","","Collection of certificate transparency logs. If this…",3,null],[12,"enable_sni","","Whether to send the Server Name Indication (SNI) extension…",3,null],[12,"key_log","","How to output key material for debugging. The default does…",3,null],[12,"enable_early_data","","Whether to send data on the first flight (\"early data\") in…",3,null],[3,"ClientSession","","This represents a single TLS client session.",null,null],[3,"WriteEarlyData","","Stub that implements io::Write and dispatches to…",null,null],[3,"NoServerSessionStorage","","Something which never stores sessions.",null,null],[3,"ServerSessionMemoryCache","","An implementor of `StoresServerSessions` that stores…",null,null],[3,"ServerConfig","","Common configuration for a set of server sessions.",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",4,null],[12,"ignore_client_order","","Ignore the client's ciphersuite order. Instead, choose the…",4,null],[12,"mtu","","Our MTU.  If None, we don't limit TLS message sizes.",4,null],[12,"session_storage","","How to store client sessions.",4,null],[12,"ticketer","","How to produce tickets.",4,null],[12,"cert_resolver","","How to choose a server cert and key.",4,null],[12,"alpn_protocols","","Protocol names we support, most preferred first. If empty…",4,null],[12,"versions","","Supported protocol versions, in no particular order. The…",4,null],[12,"key_log","","How to output key material for debugging. The default does…",4,null],[3,"ServerSession","","This represents a single TLS server session.",null,null],[3,"ResolvesServerCertUsingSNI","","Something that resolves do different cert chains/keys…",null,null],[3,"Ticketer","","A concrete, safe ticket creation mechanism.",null,null],[3,"NoClientAuth","","Turns off client authentication.",null,null],[3,"AllowAnyAuthenticatedClient","","A `ClientCertVerifier` that will ensure that every client…",null,null],[3,"AllowAnyAnonymousOrAuthenticatedClient","","A `ClientCertVerifier` that will allow both anonymous and…",null,null],[3,"SupportedCipherSuite","","A cipher suite supported by rustls.",null,null],[12,"suite","","The TLS enumeration naming this cipher suite.",5,null],[12,"kx","","How to exchange/agree keys.",5,null],[12,"bulk","","How to do bulk encryption.",5,null],[12,"hash","","How to do hashing.",5,null],[12,"sign","","How to sign messages.",5,null],[12,"enc_key_len","","Encryption key length, for the bulk algorithm.",5,null],[12,"fixed_iv_len","","How long the fixed part of the 'IV' is.",5,null],[12,"explicit_nonce_len","","This is a non-standard extension which extends the key…",5,null],[3,"Certificate","","This type contains a single certificate by value.",null,null],[12,"0","","",6,null],[3,"PrivateKey","","This type contains a private key by value.",null,null],[12,"0","","",7,null],[3,"NoKeyLog","","KeyLog that does exactly nothing.",null,null],[3,"KeyLogFile","","`KeyLog` implementation that opens a file whose name is…",null,null],[3,"ServerCertVerified","","Zero-sized marker type representing verification of a…",null,null],[3,"ClientCertVerified","","Zero-sized marker type representing verification of a…",null,null],[3,"DangerousClientConfig","","Accessor for dangerous configuration options.",null,null],[12,"cfg","","The underlying ClientConfig",8,null],[4,"ProtocolVersion","","The `ProtocolVersion` TLS protocol enum. Values in this…",null,null],[13,"SSLv2","","",9,null],[13,"SSLv3","","",9,null],[13,"TLSv1_0","","",9,null],[13,"TLSv1_1","","",9,null],[13,"TLSv1_2","","",9,null],[13,"TLSv1_3","","",9,null],[13,"Unknown","","",9,null],[4,"SignatureScheme","","The `SignatureScheme` TLS protocol enum. Values in this…",null,null],[13,"RSA_PKCS1_SHA1","","",10,null],[13,"ECDSA_SHA1_Legacy","","",10,null],[13,"RSA_PKCS1_SHA256","","",10,null],[13,"ECDSA_NISTP256_SHA256","","",10,null],[13,"RSA_PKCS1_SHA384","","",10,null],[13,"ECDSA_NISTP384_SHA384","","",10,null],[13,"RSA_PKCS1_SHA512","","",10,null],[13,"ECDSA_NISTP521_SHA512","","",10,null],[13,"RSA_PSS_SHA256","","",10,null],[13,"RSA_PSS_SHA384","","",10,null],[13,"RSA_PSS_SHA512","","",10,null],[13,"ED25519","","",10,null],[13,"ED448","","",10,null],[13,"Unknown","","",10,null],[4,"CipherSuite","","The `CipherSuite` TLS protocol enum. Values in this enum…",null,null],[13,"TLS_NULL_WITH_NULL_NULL","","",11,null],[13,"TLS_RSA_WITH_NULL_MD5","","",11,null],[13,"TLS_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",11,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",11,null],[13,"TLS_RSA_WITH_IDEA_CBC_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",11,null],[13,"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"SSL_FORTEZZA_KEA_WITH_NULL_SHA","","",11,null],[13,"SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_RC4_128_SHA","","",11,null],[13,"TLS_KRB5_WITH_IDEA_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_DES_CBC_MD5","","",11,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_MD5","","",11,null],[13,"TLS_KRB5_WITH_RC4_128_MD5","","",11,null],[13,"TLS_KRB5_WITH_IDEA_CBC_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_NULL_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_NULL_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_NULL_WITH_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_RC4_128_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_GOSTR341094_WITH_28147_CNT_IMIT","","",11,null],[13,"TLS_GOSTR341001_WITH_28147_CNT_IMIT","","",11,null],[13,"TLS_GOSTR341094_WITH_NULL_GOSTR3411","","",11,null],[13,"TLS_GOSTR341001_WITH_NULL_GOSTR3411","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",11,null],[13,"TLS13_AES_128_GCM_SHA256","","",11,null],[13,"TLS13_AES_256_GCM_SHA384","","",11,null],[13,"TLS13_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS13_AES_128_CCM_SHA256","","",11,null],[13,"TLS13_AES_128_CCM_8_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_AES_128_CCM","","",11,null],[13,"TLS_RSA_WITH_AES_256_CCM","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM","","",11,null],[13,"TLS_RSA_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_RSA_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_PSK_WITH_AES_128_CCM","","",11,null],[13,"TLS_PSK_WITH_AES_256_CCM","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CCM","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CCM","","",11,null],[13,"TLS_PSK_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_PSK_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_PSK_DHE_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_PSK_DHE_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"SSL_RSA_FIPS_WITH_DES_CBC_SHA","","",11,null],[13,"SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"Unknown","","",11,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn't valid right now.…",12,null],[12,"expect_types","rustls::TLSError","Which types we expected",12,null],[12,"got_type","","What type we received",12,null],[13,"InappropriateHandshakeMessage","rustls","We received a TLS handshake message that isn't valid right…",12,null],[12,"expect_types","rustls::TLSError","Which handshake type we expected",12,null],[12,"got_type","","What handshake type we received",12,null],[13,"CorruptMessage","rustls","The peer sent us a syntactically incorrect TLS message.",12,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",12,null],[13,"NoCertificatesPresented","","The peer didn't give us any certificates.",12,null],[13,"DecryptError","","We couldn't decrypt a message.  This is invariably fatal.",12,null],[13,"PeerIncompatibleError","","The peer doesn't support a protocol version/feature we…",12,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The…",12,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is unhappy.",12,null],[13,"WebPKIError","","The presented certificate chain is invalid.",12,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",12,null],[13,"General","","A catch-all error for unlikely errors.",12,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",12,null],[13,"InvalidDNSName","","A syntactically-invalid DNS hostname was given.",12,null],[13,"HandshakeNotComplete","","This function doesn't work until the TLS handshake is…",12,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",12,null],[4,"BulkAlgorithm","","Bulk symmetric encryption scheme used by a cipher suite.",null,null],[13,"AES_128_GCM","","AES with 128-bit keys in Galois counter mode.",13,null],[13,"AES_256_GCM","","AES with 256-bit keys in Galois counter mode.",13,null],[13,"CHACHA20_POLY1305","","Chacha20 for confidentiality with poly1305 for authenticity.",13,null],[11,"get_u16","","",9,[[["self"]],["u16"]]],[11,"get_u16","","",11,[[["self"]],["u16"]]],[11,"get_u16","","",10,[[["self"]],["u16"]]],[11,"new","","Make a new Stream using the Session `sess` and socket-like…",0,[[["s"],["t"]],["stream"]]],[11,"new","","Make a new StreamOwned taking the Session `sess` and…",1,[[["s"],["t"]],["streamowned"]]],[11,"get_ref","","Get a reference to the underlying socket",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the underlying socket",1,[[["self"]],["t"]]],[11,"empty","","Make a new, empty `RootCertStore`.",2,[[],["rootcertstore"]]],[11,"is_empty","","Return true if there are no certificates.",2,[[["self"]],["bool"]]],[11,"len","","Say how many certificates are in the container.",2,[[["self"]],["usize"]]],[11,"get_subjects","","Return the Subject Names for certificates in the container.",2,[[["self"]],["distinguishednames"]]],[11,"add","","Add a single DER-encoded certificate to the store.",2,[[["self"],["certificate"]],[["result",["error"]],["error"]]]],[11,"add_server_trust_anchors","","Adds all the given TrustAnchors `anchors`. This does not…",2,[[["self"],["tlsservertrustanchors"]]]],[11,"add_pem_file","","Parse a PEM file and add all certificates found inside.…",2,[[["self"],["bufread"]],["result"]]],[11,"assertion","","Make a `ServerCertVerified`",14,[[],["self"]]],[11,"assertion","","Make a `ClientCertVerified`",15,[[],["self"]]],[11,"new","","Construct a new `AllowAnyAuthenticatedClient`.",16,[[["rootcertstore"]],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"new","","Construct a new `AllowAnyAnonymousOrAuthenticatedClient`.",17,[[["rootcertstore"]],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"new","","Constructs a `NoClientAuth` and wraps it in an `Arc`.",18,[[],[["arc",["clientcertverifier"]],["clientcertverifier"]]]],[11,"get_hash","","Which hash function to use with this suite.",5,[[["self"]],["algorithm"]]],[11,"do_client_kx","","We have parameters and a verified public key in…",5,[[["self"]],[["option",["keyexchangeresult"]],["keyexchangeresult"]]]],[11,"start_server_kx","","Start the KX process with the given group. This generates…",5,[[["namedgroup"],["self"]],[["keyexchange"],["option",["keyexchange"]]]]],[11,"resolve_sig_schemes","","Resolve the set of supported `SignatureScheme`s from the…",5,[[["self"]],[["vec",["signaturescheme"]],["signaturescheme"]]]],[11,"get_aead_alg","","Which AEAD algorithm to use for this suite.",5,[[["self"]],["algorithm"]]],[11,"key_block_len","","Length of key block that needs to be output by the key…",5,[[["self"]],["usize"]]],[11,"usable_for_version","","Return true if this suite is usable for TLS `version`.",5,[[["self"],["protocolversion"]],["bool"]]],[11,"can_resume_to","","Can a session using suite self resume using suite new_suite?",5,[[["supportedciphersuite"],["self"]],["bool"]]],[11,"new","","Make the recommended Ticketer. This produces tickets with…",19,[[],[["producestickets"],["arc",["producestickets"]]]]],[11,"new","","Make a new ServerSessionMemoryCache. `size` is the maximum…",20,[[["usize"]],[["serversessionmemorycache"],["arc",["serversessionmemorycache"]]]]],[11,"new","","Create a new and empty (ie, knows no certificates) resolver.",21,[[],["resolvesservercertusingsni"]]],[11,"add","","Add a new `sign::CertifiedKey` to be used for the given…",21,[[["str"],["self"],["certifiedkey"]],[["result",["tlserror"]],["tlserror"]]]],[11,"new","","Make a `ServerConfig` with a default set of ciphersuites,…",4,[[["arc",["clientcertverifier"]],["clientcertverifier"]],["serverconfig"]]],[11,"set_persistence","","Sets the session persistence layer to `persist`.",4,[[["arc",["storesserversessions"]],["self"],["storesserversessions"]]]],[11,"set_single_cert","","Sets a single certificate chain and matching private key.…",4,[[["vec",["certificate"]],["privatekey"],["self"],["certificate"]],[["result",["tlserror"]],["tlserror"]]]],[11,"set_single_cert_with_ocsp_and_sct","","Sets a single certificate chain, matching private key and…",4,[[["u8"],["vec",["certificate"]],["privatekey"],["self"],["vec",["u8"]],["certificate"]],[["result",["tlserror"]],["tlserror"]]]],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.…",4,[[["self"]]]],[11,"new","","Make a new ServerSession. `config` controls how we behave…",22,[[["arc"]],["serversession"]]],[11,"get_sni_hostname","","Retrieves the SNI hostname, if any, used to select the…",22,[[["self"]],[["str"],["option",["str"]]]]],[11,"new","","Make a new ClientSessionMemoryCache. `size` is the maximum…",23,[[["usize"]],[["arc",["clientsessionmemorycache"]],["clientsessionmemorycache"]]]],[11,"set_certificate_verifier","","Overrides the default `ServerCertVerifier` with something…",8,[[["self"],["servercertverifier"],["arc",["servercertverifier"]]]]],[11,"new","","Make a `ClientConfig` with a default set of ciphersuites,…",3,[[],["clientconfig"]]],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.…",3,[[["self"]]]],[11,"set_persistence","","Sets persistence layer to `persist`.",3,[[["self"],["arc",["storesclientsessions"]],["storesclientsessions"]]]],[11,"set_mtu","","Sets MTU to `mtu`. If None, the default is used. If…",3,[[["self"],["option"]]]],[11,"set_single_client_cert","","Sets a single client authentication certificate and…",3,[[["vec",["certificate"]],["privatekey"],["self"],["certificate"]]]],[11,"dangerous","","Access configuration options whose use is dangerous and…",3,[[["self"]],["dangerousclientconfig"]]],[11,"bytes_left","","How many bytes you may send. Writes will become short once…",24,[[["self"]],["usize"]]],[11,"new","","Make a new ClientSession. `config` controls how we behave…",25,[[["arc"],["dnsnameref"]],["clientsession"]]],[11,"early_data","","Returns an `io::Write` implementor you can write bytes to…",25,[[["self"]],[["writeearlydata"],["option",["writeearlydata"]]]]],[11,"is_early_data_accepted","","Returns True if the server signalled it will process early…",25,[[["self"]],["bool"]]],[11,"new","","Makes a new `KeyLogFile`. The environment variable is…",26,[[],["self"]]],[0,"internal","","Internal classes which may be useful outside the library.…",null,null],[0,"pemfile","rustls::internal","Functions for parsing PEM files containing…",null,null],[5,"certs","rustls::internal::pemfile","Extract all the certificates from rd, and return a vec of…",null,[[["bufread"]],[["result",["vec"]],["vec",["certificate"]]]]],[5,"rsa_private_keys","","Extract all RSA private keys from rd, and return a vec of…",null,[[["bufread"]],[["result",["vec"]],["vec",["privatekey"]]]]],[5,"pkcs8_private_keys","","Extract all PKCS8-encoded private keys from rd, and return…",null,[[["bufread"]],[["result",["vec"]],["vec",["privatekey"]]]]],[0,"msgs","rustls::internal","Low-level TLS message parsing and encoding functions.",null,null],[0,"codec","rustls::internal::msgs","",null,null],[3,"Reader","rustls::internal::msgs::codec","Read from a byte slice.",null,null],[3,"u24","","",null,null],[12,"0","","",27,null],[5,"decode_u8","","",null,[[],[["option",["u8"]],["u8"]]]],[5,"put_u16","","",null,[[["u16"]]]],[5,"decode_u16","","",null,[[],[["option",["u16"]],["u16"]]]],[5,"decode_u32","","",null,[[],[["option",["u32"]],["u32"]]]],[5,"put_u64","","",null,[[["u64"]]]],[5,"decode_u64","","",null,[[],[["u64"],["option",["u64"]]]]],[5,"encode_vec_u8","","",null,[[["vec"]]]],[5,"encode_vec_u16","","",null,[[["vec"]]]],[5,"encode_vec_u24","","",null,[[["vec"]]]],[5,"read_vec_u8","","",null,[[["reader"]],[["vec"],["option",["vec"]]]]],[5,"read_vec_u16","","",null,[[["reader"]],[["vec"],["option",["vec"]]]]],[5,"read_vec_u24_limited","","",null,[[["usize"],["reader"]],[["vec"],["option",["vec"]]]]],[8,"Codec","","Things we can encode and read from a Reader.",null,null],[10,"encode","","Encode yourself by appending onto `bytes`.",28,[[["vec"],["self"]]]],[10,"read","","Decode yourself by fiddling with the `Reader`. Return Some…",28,[[["reader"]],["option"]]],[11,"get_encoding","","Convenience function to get the results of `encode()`.",28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"read_bytes","","Read one of these from the front of `bytes` and return it.",28,[[],["option"]]],[0,"base","rustls::internal::msgs","",null,null],[3,"Payload","rustls::internal::msgs::base","An externally length'd payload",null,null],[12,"0","","",29,null],[3,"PayloadU24","","An arbitrary, unknown-content, u24-length-prefixed payload",null,null],[12,"0","","",30,null],[3,"PayloadU16","","An arbitrary, unknown-content, u16-length-prefixed payload",null,null],[12,"0","","",31,null],[3,"PayloadU8","","An arbitrary, unknown-content, u8-length-prefixed payload",null,null],[12,"0","","",32,null],[0,"enums","rustls::internal::msgs","",null,null],[4,"ProtocolVersion","rustls::internal::msgs::enums","The `ProtocolVersion` TLS protocol enum. Values in this…",null,null],[13,"SSLv2","","",9,null],[13,"SSLv3","","",9,null],[13,"TLSv1_0","","",9,null],[13,"TLSv1_1","","",9,null],[13,"TLSv1_2","","",9,null],[13,"TLSv1_3","","",9,null],[13,"Unknown","","",9,null],[4,"HashAlgorithm","","The `HashAlgorithm` TLS protocol enum. Values in this enum…",null,null],[13,"NONE","","",33,null],[13,"MD5","","",33,null],[13,"SHA1","","",33,null],[13,"SHA224","","",33,null],[13,"SHA256","","",33,null],[13,"SHA384","","",33,null],[13,"SHA512","","",33,null],[13,"Unknown","","",33,null],[4,"SignatureAlgorithm","","The `SignatureAlgorithm` TLS protocol enum. Values in this…",null,null],[13,"Anonymous","","",34,null],[13,"RSA","","",34,null],[13,"DSA","","",34,null],[13,"ECDSA","","",34,null],[13,"Unknown","","",34,null],[4,"ClientCertificateType","","The `ClientCertificateType` TLS protocol enum. Values in…",null,null],[13,"RSASign","","",35,null],[13,"DSSSign","","",35,null],[13,"RSAFixedDH","","",35,null],[13,"DSSFixedDH","","",35,null],[13,"RSAEphemeralDH","","",35,null],[13,"DSSEphemeralDH","","",35,null],[13,"FortezzaDMS","","",35,null],[13,"ECDSASign","","",35,null],[13,"RSAFixedECDH","","",35,null],[13,"ECDSAFixedECDH","","",35,null],[13,"Unknown","","",35,null],[4,"Compression","","The `Compression` TLS protocol enum. Values in this enum…",null,null],[13,"Null","","",36,null],[13,"Deflate","","",36,null],[13,"LSZ","","",36,null],[13,"Unknown","","",36,null],[4,"ContentType","","The `ContentType` TLS protocol enum. Values in this enum…",null,null],[13,"ChangeCipherSpec","","",37,null],[13,"Alert","","",37,null],[13,"Handshake","","",37,null],[13,"ApplicationData","","",37,null],[13,"Heartbeat","","",37,null],[13,"Unknown","","",37,null],[4,"HandshakeType","","The `HandshakeType` TLS protocol enum. Values in this enum…",null,null],[13,"HelloRequest","","",38,null],[13,"ClientHello","","",38,null],[13,"ServerHello","","",38,null],[13,"NewSessionTicket","","",38,null],[13,"EndOfEarlyData","","",38,null],[13,"HelloRetryRequest","","",38,null],[13,"EncryptedExtensions","","",38,null],[13,"Certificate","","",38,null],[13,"ServerKeyExchange","","",38,null],[13,"CertificateRequest","","",38,null],[13,"ServerHelloDone","","",38,null],[13,"CertificateVerify","","",38,null],[13,"ClientKeyExchange","","",38,null],[13,"Finished","","",38,null],[13,"CertificateURL","","",38,null],[13,"CertificateStatus","","",38,null],[13,"KeyUpdate","","",38,null],[13,"MessageHash","","",38,null],[13,"Unknown","","",38,null],[4,"AlertLevel","","The `AlertLevel` TLS protocol enum. Values in this enum…",null,null],[13,"Warning","","",39,null],[13,"Fatal","","",39,null],[13,"Unknown","","",39,null],[4,"AlertDescription","","The `AlertDescription` TLS protocol enum. Values in this…",null,null],[13,"CloseNotify","","",40,null],[13,"UnexpectedMessage","","",40,null],[13,"BadRecordMac","","",40,null],[13,"DecryptionFailed","","",40,null],[13,"RecordOverflow","","",40,null],[13,"DecompressionFailure","","",40,null],[13,"HandshakeFailure","","",40,null],[13,"NoCertificate","","",40,null],[13,"BadCertificate","","",40,null],[13,"UnsupportedCertificate","","",40,null],[13,"CertificateRevoked","","",40,null],[13,"CertificateExpired","","",40,null],[13,"CertificateUnknown","","",40,null],[13,"IllegalParameter","","",40,null],[13,"UnknownCA","","",40,null],[13,"AccessDenied","","",40,null],[13,"DecodeError","","",40,null],[13,"DecryptError","","",40,null],[13,"ExportRestriction","","",40,null],[13,"ProtocolVersion","","",40,null],[13,"InsufficientSecurity","","",40,null],[13,"InternalError","","",40,null],[13,"InappropriateFallback","","",40,null],[13,"UserCanceled","","",40,null],[13,"NoRenegotiation","","",40,null],[13,"MissingExtension","","",40,null],[13,"UnsupportedExtension","","",40,null],[13,"CertificateUnobtainable","","",40,null],[13,"UnrecognisedName","","",40,null],[13,"BadCertificateStatusResponse","","",40,null],[13,"BadCertificateHashValue","","",40,null],[13,"UnknownPSKIdentity","","",40,null],[13,"CertificateRequired","","",40,null],[13,"NoApplicationProtocol","","",40,null],[13,"Unknown","","",40,null],[4,"HeartbeatMessageType","","The `HeartbeatMessageType` TLS protocol enum. Values in…",null,null],[13,"Request","","",41,null],[13,"Response","","",41,null],[13,"Unknown","","",41,null],[4,"ExtensionType","","The `ExtensionType` TLS protocol enum. Values in this enum…",null,null],[13,"ServerName","","",42,null],[13,"MaxFragmentLength","","",42,null],[13,"ClientCertificateUrl","","",42,null],[13,"TrustedCAKeys","","",42,null],[13,"TruncatedHMAC","","",42,null],[13,"StatusRequest","","",42,null],[13,"UserMapping","","",42,null],[13,"ClientAuthz","","",42,null],[13,"ServerAuthz","","",42,null],[13,"CertificateType","","",42,null],[13,"EllipticCurves","","",42,null],[13,"ECPointFormats","","",42,null],[13,"SRP","","",42,null],[13,"SignatureAlgorithms","","",42,null],[13,"UseSRTP","","",42,null],[13,"Heartbeat","","",42,null],[13,"ALProtocolNegotiation","","",42,null],[13,"SCT","","",42,null],[13,"Padding","","",42,null],[13,"ExtendedMasterSecret","","",42,null],[13,"SessionTicket","","",42,null],[13,"PreSharedKey","","",42,null],[13,"EarlyData","","",42,null],[13,"SupportedVersions","","",42,null],[13,"Cookie","","",42,null],[13,"PSKKeyExchangeModes","","",42,null],[13,"TicketEarlyDataInfo","","",42,null],[13,"CertificateAuthorities","","",42,null],[13,"OIDFilters","","",42,null],[13,"PostHandshakeAuth","","",42,null],[13,"SignatureAlgorithmsCert","","",42,null],[13,"KeyShare","","",42,null],[13,"NextProtocolNegotiation","","",42,null],[13,"ChannelId","","",42,null],[13,"RenegotiationInfo","","",42,null],[13,"TransportParameters","","",42,null],[13,"Unknown","","",42,null],[4,"ServerNameType","","The `ServerNameType` TLS protocol enum. Values in this…",null,null],[13,"HostName","","",43,null],[13,"Unknown","","",43,null],[4,"NamedCurve","","The `NamedCurve` TLS protocol enum. Values in this enum…",null,null],[13,"sect163k1","","",44,null],[13,"sect163r1","","",44,null],[13,"sect163r2","","",44,null],[13,"sect193r1","","",44,null],[13,"sect193r2","","",44,null],[13,"sect233k1","","",44,null],[13,"sect233r1","","",44,null],[13,"sect239k1","","",44,null],[13,"sect283k1","","",44,null],[13,"sect283r1","","",44,null],[13,"sect409k1","","",44,null],[13,"sect409r1","","",44,null],[13,"sect571k1","","",44,null],[13,"sect571r1","","",44,null],[13,"secp160k1","","",44,null],[13,"secp160r1","","",44,null],[13,"secp160r2","","",44,null],[13,"secp192k1","","",44,null],[13,"secp192r1","","",44,null],[13,"secp224k1","","",44,null],[13,"secp224r1","","",44,null],[13,"secp256k1","","",44,null],[13,"secp256r1","","",44,null],[13,"secp384r1","","",44,null],[13,"secp521r1","","",44,null],[13,"brainpoolp256r1","","",44,null],[13,"brainpoolp384r1","","",44,null],[13,"brainpoolp512r1","","",44,null],[13,"X25519","","",44,null],[13,"X448","","",44,null],[13,"arbitrary_explicit_prime_curves","","",44,null],[13,"arbitrary_explicit_char2_curves","","",44,null],[13,"Unknown","","",44,null],[4,"NamedGroup","","The `NamedGroup` TLS protocol enum. Values in this enum…",null,null],[13,"secp256r1","","",45,null],[13,"secp384r1","","",45,null],[13,"secp521r1","","",45,null],[13,"X25519","","",45,null],[13,"X448","","",45,null],[13,"FFDHE2048","","",45,null],[13,"FFDHE3072","","",45,null],[13,"FFDHE4096","","",45,null],[13,"FFDHE6144","","",45,null],[13,"FFDHE8192","","",45,null],[13,"Unknown","","",45,null],[4,"CipherSuite","","The `CipherSuite` TLS protocol enum. Values in this enum…",null,null],[13,"TLS_NULL_WITH_NULL_NULL","","",11,null],[13,"TLS_RSA_WITH_NULL_MD5","","",11,null],[13,"TLS_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",11,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",11,null],[13,"TLS_RSA_WITH_IDEA_CBC_SHA","","",11,null],[13,"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",11,null],[13,"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"SSL_FORTEZZA_KEA_WITH_NULL_SHA","","",11,null],[13,"SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_RC4_128_SHA","","",11,null],[13,"TLS_KRB5_WITH_IDEA_CBC_SHA","","",11,null],[13,"TLS_KRB5_WITH_DES_CBC_MD5","","",11,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_MD5","","",11,null],[13,"TLS_KRB5_WITH_RC4_128_MD5","","",11,null],[13,"TLS_KRB5_WITH_IDEA_CBC_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_SHA","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","","",11,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_MD5","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_NULL_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_NULL_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_NULL_WITH_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","","",11,null],[13,"TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","","",11,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","","",11,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_RC4_128_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_AES_128_CBC_RMD","","",11,null],[13,"TLS_RSA_WITH_AES_256_CBC_RMD","","",11,null],[13,"TLS_GOSTR341094_WITH_28147_CNT_IMIT","","",11,null],[13,"TLS_GOSTR341001_WITH_28147_CNT_IMIT","","",11,null],[13,"TLS_GOSTR341094_WITH_NULL_GOSTR3411","","",11,null],[13,"TLS_GOSTR341001_WITH_NULL_GOSTR3411","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_DSS_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DHE_DSS_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DHE_RSA_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_DH_anon_WITH_SEED_CBC_SHA","","",11,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","","",11,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",11,null],[13,"TLS13_AES_128_GCM_SHA256","","",11,null],[13,"TLS13_AES_256_GCM_SHA384","","",11,null],[13,"TLS13_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS13_AES_128_CCM_SHA256","","",11,null],[13,"TLS13_AES_128_CCM_8_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_RC4_128_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA384","","",11,null],[13,"TLS_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",11,null],[13,"TLS_RSA_WITH_AES_128_CCM","","",11,null],[13,"TLS_RSA_WITH_AES_256_CCM","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM","","",11,null],[13,"TLS_RSA_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_RSA_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_PSK_WITH_AES_128_CCM","","",11,null],[13,"TLS_PSK_WITH_AES_256_CCM","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_128_CCM","","",11,null],[13,"TLS_DHE_PSK_WITH_AES_256_CCM","","",11,null],[13,"TLS_PSK_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_PSK_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_PSK_DHE_WITH_AES_128_CCM_8","","",11,null],[13,"TLS_PSK_DHE_WITH_AES_256_CCM_8","","",11,null],[13,"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256","","",11,null],[13,"SSL_RSA_FIPS_WITH_DES_CBC_SHA","","",11,null],[13,"SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","","",11,null],[13,"Unknown","","",11,null],[4,"ECPointFormat","","The `ECPointFormat` TLS protocol enum. Values in this enum…",null,null],[13,"Uncompressed","","",46,null],[13,"ANSIX962CompressedPrime","","",46,null],[13,"ANSIX962CompressedChar2","","",46,null],[13,"Unknown","","",46,null],[4,"HeartbeatMode","","The `HeartbeatMode` TLS protocol enum. Values in this enum…",null,null],[13,"PeerAllowedToSend","","",47,null],[13,"PeerNotAllowedToSend","","",47,null],[13,"Unknown","","",47,null],[4,"ECCurveType","","The `ECCurveType` TLS protocol enum. Values in this enum…",null,null],[13,"ExplicitPrime","","",48,null],[13,"ExplicitChar2","","",48,null],[13,"NamedCurve","","",48,null],[13,"Unknown","","",48,null],[4,"SignatureScheme","","The `SignatureScheme` TLS protocol enum. Values in this…",null,null],[13,"RSA_PKCS1_SHA1","","",10,null],[13,"ECDSA_SHA1_Legacy","","",10,null],[13,"RSA_PKCS1_SHA256","","",10,null],[13,"ECDSA_NISTP256_SHA256","","",10,null],[13,"RSA_PKCS1_SHA384","","",10,null],[13,"ECDSA_NISTP384_SHA384","","",10,null],[13,"RSA_PKCS1_SHA512","","",10,null],[13,"ECDSA_NISTP521_SHA512","","",10,null],[13,"RSA_PSS_SHA256","","",10,null],[13,"RSA_PSS_SHA384","","",10,null],[13,"RSA_PSS_SHA512","","",10,null],[13,"ED25519","","",10,null],[13,"ED448","","",10,null],[13,"Unknown","","",10,null],[4,"PSKKeyExchangeMode","","The `PSKKeyExchangeMode` TLS protocol enum. Values in this…",null,null],[13,"PSK_KE","","",49,null],[13,"PSK_DHE_KE","","",49,null],[13,"Unknown","","",49,null],[4,"KeyUpdateRequest","","The `KeyUpdateRequest` TLS protocol enum. Values in this…",null,null],[13,"UpdateNotRequested","","",50,null],[13,"UpdateRequested","","",50,null],[13,"Unknown","","",50,null],[4,"CertificateStatusType","","The `CertificateStatusType` TLS protocol enum. Values in…",null,null],[13,"OCSP","","",51,null],[13,"Unknown","","",51,null],[0,"alert","rustls::internal::msgs","",null,null],[3,"AlertMessagePayload","rustls::internal::msgs::alert","",null,null],[12,"level","","",52,null],[12,"description","","",52,null],[0,"handshake","rustls::internal::msgs","",null,null],[3,"Random","rustls::internal::msgs::handshake","",null,null],[3,"SessionID","","",null,null],[3,"UnknownExtension","","",null,null],[12,"typ","","",53,null],[12,"payload","","",53,null],[3,"ServerName","","",null,null],[12,"typ","","",54,null],[12,"payload","","",54,null],[3,"KeyShareEntry","","",null,null],[12,"group","","",55,null],[12,"payload","","",55,null],[3,"PresharedKeyIdentity","","",null,null],[12,"identity","","",56,null],[12,"obfuscated_ticket_age","","",56,null],[3,"PresharedKeyOffer","","",null,null],[12,"identities","","",57,null],[12,"binders","","",57,null],[3,"OCSPCertificateStatusRequest","","",null,null],[12,"responder_ids","","",58,null],[12,"extensions","","",58,null],[3,"ClientHelloPayload","","",null,null],[12,"client_version","","",59,null],[12,"random","","",59,null],[12,"session_id","","",59,null],[12,"cipher_suites","","",59,null],[12,"compression_methods","","",59,null],[12,"extensions","","",59,null],[3,"HelloRetryRequest","","",null,null],[12,"legacy_version","","",60,null],[12,"session_id","","",60,null],[12,"cipher_suite","","",60,null],[12,"extensions","","",60,null],[3,"ServerHelloPayload","","",null,null],[12,"legacy_version","","",61,null],[12,"random","","",61,null],[12,"session_id","","",61,null],[12,"cipher_suite","","",61,null],[12,"compression_method","","",61,null],[12,"extensions","","",61,null],[3,"CertificateEntry","","",null,null],[12,"cert","","",62,null],[12,"exts","","",62,null],[3,"CertificatePayloadTLS13","","",null,null],[12,"context","","",63,null],[12,"entries","","",63,null],[3,"ECParameters","","",null,null],[12,"curve_type","","",64,null],[12,"named_group","","",64,null],[3,"DigitallySignedStruct","","",null,null],[12,"scheme","","",65,null],[12,"sig","","",65,null],[3,"ClientECDHParams","","",null,null],[12,"public","","",66,null],[3,"ServerECDHParams","","",null,null],[12,"curve_params","","",67,null],[12,"public","","",67,null],[3,"ECDHEServerKeyExchange","","",null,null],[12,"params","","",68,null],[12,"dss","","",68,null],[3,"CertificateRequestPayload","","",null,null],[12,"certtypes","","",69,null],[12,"sigschemes","","",69,null],[12,"canames","","",69,null],[3,"CertificateRequestPayloadTLS13","","",null,null],[12,"context","","",70,null],[12,"extensions","","",70,null],[3,"NewSessionTicketPayload","","",null,null],[12,"lifetime_hint","","",71,null],[12,"ticket","","",71,null],[3,"NewSessionTicketPayloadTLS13","","",null,null],[12,"lifetime","","",72,null],[12,"age_add","","",72,null],[12,"nonce","","",72,null],[12,"ticket","","",72,null],[12,"exts","","",72,null],[3,"CertificateStatus","","Only supports OCSP",null,null],[12,"ocsp_response","","",73,null],[3,"HandshakeMessagePayload","","",null,null],[12,"typ","","",74,null],[12,"payload","","",74,null],[4,"ServerNamePayload","","",null,null],[13,"HostName","","",75,null],[13,"Unknown","","",75,null],[4,"CertificateStatusRequest","","",null,null],[13,"OCSP","","",76,null],[13,"Unknown","","",76,null],[4,"ClientExtension","","",null,null],[13,"ECPointFormats","","",77,null],[13,"NamedGroups","","",77,null],[13,"SignatureAlgorithms","","",77,null],[13,"ServerName","","",77,null],[13,"SessionTicketRequest","","",77,null],[13,"SessionTicketOffer","","",77,null],[13,"Protocols","","",77,null],[13,"SupportedVersions","","",77,null],[13,"KeyShare","","",77,null],[13,"PresharedKeyModes","","",77,null],[13,"PresharedKey","","",77,null],[13,"Cookie","","",77,null],[13,"ExtendedMasterSecretRequest","","",77,null],[13,"CertificateStatusRequest","","",77,null],[13,"SignedCertificateTimestampRequest","","",77,null],[13,"TransportParameters","","",77,null],[13,"EarlyData","","",77,null],[13,"Unknown","","",77,null],[4,"ServerExtension","","",null,null],[13,"ECPointFormats","","",78,null],[13,"ServerNameAck","","",78,null],[13,"SessionTicketAck","","",78,null],[13,"RenegotiationInfo","","",78,null],[13,"Protocols","","",78,null],[13,"KeyShare","","",78,null],[13,"PresharedKey","","",78,null],[13,"ExtendedMasterSecretAck","","",78,null],[13,"CertificateStatusAck","","",78,null],[13,"SignedCertificateTimestamp","","",78,null],[13,"SupportedVersions","","",78,null],[13,"TransportParameters","","",78,null],[13,"EarlyData","","",78,null],[13,"Unknown","","",78,null],[4,"HelloRetryExtension","","",null,null],[13,"KeyShare","","",79,null],[13,"Cookie","","",79,null],[13,"SupportedVersions","","",79,null],[13,"Unknown","","",79,null],[4,"CertificateExtension","","",null,null],[13,"CertificateStatus","","",80,null],[13,"SignedCertificateTimestamp","","",80,null],[13,"Unknown","","",80,null],[4,"KeyExchangeAlgorithm","","",null,null],[13,"BulkOnly","","",81,null],[13,"DH","","",81,null],[13,"DHE","","",81,null],[13,"RSA","","",81,null],[13,"ECDH","","",81,null],[13,"ECDHE","","",81,null],[4,"ServerKeyExchangePayload","","",null,null],[13,"ECDHE","","",82,null],[13,"Unknown","","",82,null],[4,"CertReqExtension","","",null,null],[13,"SignatureAlgorithms","","",83,null],[13,"AuthorityNames","","",83,null],[13,"Unknown","","",83,null],[4,"NewSessionTicketExtension","","",null,null],[13,"EarlyData","","",84,null],[13,"Unknown","","",84,null],[4,"HandshakePayload","","",null,null],[13,"HelloRequest","","",85,null],[13,"ClientHello","","",85,null],[13,"ServerHello","","",85,null],[13,"HelloRetryRequest","","",85,null],[13,"Certificate","","",85,null],[13,"CertificateTLS13","","",85,null],[13,"ServerKeyExchange","","",85,null],[13,"CertificateRequest","","",85,null],[13,"CertificateRequestTLS13","","",85,null],[13,"CertificateVerify","","",85,null],[13,"ServerHelloDone","","",85,null],[13,"EarlyData","","",85,null],[13,"EndOfEarlyData","","",85,null],[13,"ClientKeyExchange","","",85,null],[13,"NewSessionTicket","","",85,null],[13,"NewSessionTicketTLS13","","",85,null],[13,"EncryptedExtensions","","",85,null],[13,"KeyUpdate","","",85,null],[13,"Finished","","",85,null],[13,"CertificateStatus","","",85,null],[13,"MessageHash","","",85,null],[13,"Unknown","","",85,null],[6,"VecU16OfPayloadU8","","",null,null],[6,"VecU16OfPayloadU16","","",null,null],[6,"ECPointFormatList","","",null,null],[6,"NamedGroups","","",null,null],[6,"SupportedSignatureSchemes","","",null,null],[6,"ServerNameRequest","","",null,null],[6,"ProtocolNameList","","",null,null],[6,"PresharedKeyIdentities","","",null,null],[6,"PresharedKeyBinder","","",null,null],[6,"PresharedKeyBinders","","",null,null],[6,"SCTList","","",null,null],[6,"PSKKeyExchangeModes","","",null,null],[6,"KeyShareEntries","","",null,null],[6,"ProtocolVersions","","",null,null],[6,"CertificatePayload","","",null,null],[6,"CertificateExtensions","","",null,null],[6,"EncryptedExtensions","","",null,null],[6,"ClientCertificateTypes","","",null,null],[6,"DistinguishedName","","",null,null],[6,"DistinguishedNames","","",null,null],[6,"CertReqExtensions","","",null,null],[6,"NewSessionTicketExtensions","","",null,null],[8,"SupportedPointFormats","","",null,null],[10,"supported","","",86,[[],["ecpointformatlist"]]],[8,"DecomposedSignatureScheme","","",null,null],[10,"sign","","",87,[[["self"]],["signaturealgorithm"]]],[10,"make","","",87,[[["signaturealgorithm"],["hashalgorithm"]],["signaturescheme"]]],[8,"ConvertServerNameList","","",null,null],[10,"get_hostname","","",88,[[["self"]],[["option",["dnsnameref"]],["dnsnameref"]]]],[8,"ConvertProtocolNameList","","",null,null],[10,"from_slices","","",89,[[],["self"]]],[10,"to_vecs","","",89,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[10,"as_single_slice","","",89,[[["self"]],["option"]]],[8,"HasServerExtensions","","",null,null],[10,"get_extensions","","",90,[[["self"]]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",90,[[["self"]],["bool"]]],[11,"find_extension","","",90,[[["self"],["extensiontype"]],[["serverextension"],["option",["serverextension"]]]]],[11,"get_alpn_protocol","","",90,[[["self"]],["option"]]],[11,"get_quic_params_extension","","",90,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"early_data_extension_offered","","",90,[[["self"]],["bool"]]],[0,"ccs","rustls::internal::msgs","",null,null],[3,"ChangeCipherSpecPayload","rustls::internal::msgs::ccs","",null,null],[0,"message","rustls::internal::msgs","",null,null],[3,"Message","rustls::internal::msgs::message","A TLS frame, named TLSPlaintext in the standard. This type…",null,null],[12,"typ","","",91,null],[12,"version","","",91,null],[12,"payload","","",91,null],[3,"BorrowMessage","","A TLS frame, named TLSPlaintext in the standard.",null,null],[12,"typ","","",92,null],[12,"version","","",92,null],[12,"payload","","",92,null],[4,"MessagePayload","","",null,null],[13,"Alert","","",93,null],[13,"Handshake","","",93,null],[13,"ChangeCipherSpec","","",93,null],[13,"Opaque","","",93,null],[0,"persist","rustls::internal::msgs","",null,null],[3,"ClientSessionKey","rustls::internal::msgs::persist","Keys for session resumption and tickets. Matching value is…",null,null],[3,"ClientSessionValue","","",null,null],[12,"version","","",94,null],[12,"cipher_suite","","",94,null],[12,"session_id","","",94,null],[12,"ticket","","",94,null],[12,"master_secret","","",94,null],[12,"epoch","","",94,null],[12,"lifetime","","",94,null],[12,"age_add","","",94,null],[12,"extended_ms","","",94,null],[12,"max_early_data_size","","",94,null],[3,"ServerSessionValue","","",null,null],[12,"sni","","",95,null],[12,"version","","",95,null],[12,"cipher_suite","","",95,null],[12,"master_secret","","",95,null],[12,"extended_ms","","",95,null],[12,"client_cert_chain","","",95,null],[12,"alpn","","",95,null],[6,"ServerSessionKey","","",null,null],[0,"deframer","rustls::internal::msgs","",null,null],[3,"MessageDeframer","rustls::internal::msgs::deframer","This deframer works to reconstruct TLS messages from…",null,null],[12,"frames","","Completed frames for output.",96,null],[12,"desynced","","Set to true if the peer is not talking TLS, but some other…",96,null],[0,"fragmenter","rustls::internal::msgs","",null,null],[3,"MessageFragmenter","rustls::internal::msgs::fragmenter","",null,null],[17,"MAX_FRAGMENT_LEN","","",null,null],[17,"PACKET_OVERHEAD","","",null,null],[0,"hsjoiner","rustls::internal::msgs","",null,null],[3,"HandshakeJoiner","rustls::internal::msgs::hsjoiner","This works to reconstruct TLS handshake messages from…",null,null],[12,"frames","","Completed handshake frames for output.",97,null],[0,"sign","rustls","Message signing interfaces and implementations.",null,null],[3,"CertifiedKey","rustls::sign","A packaged-together certificate chain, matching…",null,null],[12,"cert","","The certificate chain.",98,null],[12,"key","","The certified key.",98,null],[12,"ocsp","","An optional OCSP response from the certificate issuer,…",98,null],[12,"sct_list","","An optional collection of SCTs from CT logs, proving the…",98,null],[3,"RSASigningKey","","A `SigningKey` for RSA-PKCS1 or RSA-PSS",null,null],[5,"any_supported_type","","Parse `der` as any supported key encoding/type, returning…",null,[[["privatekey"]],[["result",["box"]],["box",["signingkey"]]]]],[5,"any_ecdsa_type","","Parse `der` as any ECDSA key type, returning the first…",null,[[["privatekey"]],[["result",["box"]],["box",["signingkey"]]]]],[5,"supported_sign_tls13","","The set of schemes we support for signatures and that are…",null,[[]]],[8,"SigningKey","","An abstract signing key.",null,null],[10,"choose_scheme","","Choose a `SignatureScheme` from those offered.",99,[[["self"]],[["box",["signer"]],["option",["box"]]]]],[10,"algorithm","","What kind of key we have.",99,[[["self"]],["signaturealgorithm"]]],[8,"Signer","","A thing that can sign a message.",null,null],[10,"sign","","Signs `message` using the selected scheme.",100,[[["self"]],[["result",["vec","tlserror"]],["vec",["u8"]],["tlserror"]]]],[10,"get_scheme","","Reveals which scheme will be used when you call `sign()`.",100,[[["self"]],["signaturescheme"]]],[11,"new","","Make a new CertifiedKey, with the given chain and key.",98,[[["vec",["certificate"]],["arc",["box"]],["box",["signingkey"]],["certificate"]],["certifiedkey"]]],[11,"end_entity_cert","","The end-entity certificate.",98,[[["self"]],[["certificate"],["result",["certificate"]]]]],[11,"take_cert","","Steal ownership of the certificate chain.",98,[[["self"]],[["certificate"],["vec",["certificate"]]]]],[11,"has_ocsp","","Return true if there's an OCSP response.",98,[[["self"]],["bool"]]],[11,"take_ocsp","","Steal ownership of the OCSP response.",98,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"has_sct_list","","Return true if there's an SCT list.",98,[[["self"]],["bool"]]],[11,"take_sct_list","","Steal ownership of the SCT list.",98,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"cross_check_end_entity_cert","","Check the certificate chain for validity: - it should be…",98,[[["option",["dnsnameref"]],["self"],["dnsnameref"]],[["result",["tlserror"]],["tlserror"]]]],[11,"new","","Make a new `RSASigningKey` from a DER encoding, in either…",101,[[["privatekey"]],[["rsasigningkey"],["result",["rsasigningkey"]]]]],[6,"DistinguishedNames","rustls","",null,null],[7,"ALL_CIPHERSUITES","","A list of all the cipher suites supported by rustls.",null,null],[8,"Session","","Generalises `ClientSession` and `ServerSession`",null,null],[10,"read_tls","","Read TLS content from `rd`. This method does internal…",102,[[["self"],["read"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"write_tls","","Writes TLS messages to `wr`.",102,[[["self"],["write"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"writev_tls","","Like `write_tls`, but writes potentially many records in…",102,[[["writev"],["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[10,"process_new_packets","","Processes any new packets read by a previous call to…",102,[[["self"]],[["result",["tlserror"]],["tlserror"]]]],[10,"wants_read","","Returns true if the caller should call `read_tls` as soon…",102,[[["self"]],["bool"]]],[10,"wants_write","","Returns true if the caller should call `write_tls` as soon…",102,[[["self"]],["bool"]]],[10,"is_handshaking","","Returns true if the session is currently perform the TLS…",102,[[["self"]],["bool"]]],[10,"set_buffer_limit","","Sets a limit on the internal buffers used to buffer unsent…",102,[[["self"],["usize"]]]],[10,"send_close_notify","","Queues a close_notify fatal alert to be sent in the next…",102,[[["self"]]]],[10,"get_peer_certificates","","Retrieves the certificate chain used by the peer to…",102,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[10,"get_alpn_protocol","","Retrieves the protocol agreed with the peer via ALPN.",102,[[["self"]],["option"]]],[10,"get_protocol_version","","Retrieves the protocol version agreed with the peer.",102,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[10,"export_keying_material","","Derives key material from the agreed session secrets.",102,[[["option"],["self"]],[["result",["tlserror"]],["tlserror"]]]],[10,"get_negotiated_ciphersuite","","Retrieves the ciphersuite agreed with the peer.",102,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"complete_io","","This function uses `io` to complete any outstanding IO for…",102,[[["self"],["t"]],[["result",["error"]],["error"]]]],[8,"StoresClientSessions","","A trait for the ability to store client session data. The…",null,null],[10,"put","","Stores a new `value` for `key`. Returns `true` if the…",103,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[10,"get","","Returns the latest value for `key`. Returns `None` if…",103,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"ResolvesClientCert","","A trait for the ability to choose a certificate chain and…",null,null],[10,"resolve","","With the server-supplied acceptable issuers in…",104,[[["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[10,"has_certs","","Return true if any certificates at all are available.",104,[[["self"]],["bool"]]],[8,"StoresServerSessions","","A trait for the ability to store server session data.",null,null],[10,"put","","Store session secrets encoded in `value` against `key`,…",105,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[10,"get","","Find a value with the given `key`. Return it, or None if…",105,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,"take","","Find a value with the given `key`. Return it and delete…",105,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"ResolvesServerCert","","How to choose a certificate chain and signing key for use…",null,null],[10,"resolve","","Choose a certificate chain and matching key given any…",106,[[["option",["dnsnameref"]],["dnsnameref"],["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[8,"ProducesTickets","","A trait for the ability to encrypt and decrypt tickets.",null,null],[10,"enabled","","Returns true if this implementation will encrypt/decrypt…",107,[[["self"]],["bool"]]],[10,"get_lifetime","","Returns the lifetime in seconds of tickets produced now.…",107,[[["self"]],["u32"]]],[10,"encrypt","","Encrypt and authenticate `plain`, returning the resulting…",107,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,"decrypt","","Decrypt `cipher`, validating its authenticity protection…",107,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"KeyLog","","This trait represents the ability to do something useful…",null,null],[10,"log","","Log the given `secret`. `client_random` is provided for…",108,[[["str"],["self"]]]],[11,"will_log","","Indicates whether the secret with label `label` will be…",108,[[["str"],["self"]],["bool"]]],[8,"WriteV","","This trait specifies rustls's precise requirements doing…",null,null],[10,"writev","","Writes as much data from `vbytes` as possible, returning…",109,[[["self"]],[["result",["usize"]],["usize"]]]],[8,"ServerCertVerifier","","Something that can verify a server certificate chain",null,null],[10,"verify_server_cert","","Verify a the certificate chain `presented_certs` against…",110,[[["dnsnameref"],["self"],["rootcertstore"]],[["result",["servercertverified","tlserror"]],["servercertverified"],["tlserror"]]]],[8,"ClientCertVerifier","","Something that can verify a client certificate chain",null,null],[11,"offer_client_auth","","Returns `true` to enable the server to request a client…",111,[[["self"]],["bool"]]],[11,"client_auth_mandatory","","Returns `true` to require a client certificate and `false`…",111,[[["self"]],["bool"]]],[10,"client_auth_root_subjects","","Returns the subject names of the client authentication…",111,[[["self"]],["distinguishednames"]]],[10,"verify_client_cert","","Verify a certificate chain `presented_certs` is rooted in…",111,[[["self"]],[["result",["clientcertverified","tlserror"]],["clientcertverified"],["tlserror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::codec","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::base","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::enums","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::alert","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::handshake","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::ccs","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::message","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::persist","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::deframer","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::fragmenter","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","rustls::internal::msgs::hsjoiner","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","rustls::sign","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"encode","rustls::internal::msgs::codec","",27,[[["vec"],["self"]]]],[11,"read","","",27,[[["reader"]],[["option",["u24"]],["u24"]]]],[11,"encode","rustls::internal::msgs::base","",29,[[["vec"],["self"]]]],[11,"read","","",29,[[["reader"]],[["option",["payload"]],["payload"]]]],[11,"encode","rustls","",6,[[["vec"],["self"]]]],[11,"read","","",6,[[["reader"]],[["option",["certificate"]],["certificate"]]]],[11,"encode","rustls::internal::msgs::base","",30,[[["vec"],["self"]]]],[11,"read","","",30,[[["reader"]],[["option",["payloadu24"]],["payloadu24"]]]],[11,"encode","","",31,[[["vec"],["self"]]]],[11,"read","","",31,[[["reader"]],[["option",["payloadu16"]],["payloadu16"]]]],[11,"encode","","",32,[[["vec"],["self"]]]],[11,"read","","",32,[[["reader"]],[["payloadu8"],["option",["payloadu8"]]]]],[11,"encode","rustls","",9,[[["vec"],["self"]]]],[11,"read","","",9,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",33,[[["vec"],["self"]]]],[11,"read","","",33,[[["reader"]],["option"]]],[11,"encode","","",34,[[["vec"],["self"]]]],[11,"read","","",34,[[["reader"]],["option"]]],[11,"encode","","",35,[[["vec"],["self"]]]],[11,"read","","",35,[[["reader"]],["option"]]],[11,"encode","","",36,[[["vec"],["self"]]]],[11,"read","","",36,[[["reader"]],["option"]]],[11,"encode","","",37,[[["vec"],["self"]]]],[11,"read","","",37,[[["reader"]],["option"]]],[11,"encode","","",38,[[["vec"],["self"]]]],[11,"read","","",38,[[["reader"]],["option"]]],[11,"encode","","",39,[[["vec"],["self"]]]],[11,"read","","",39,[[["reader"]],["option"]]],[11,"encode","","",40,[[["vec"],["self"]]]],[11,"read","","",40,[[["reader"]],["option"]]],[11,"encode","","",41,[[["vec"],["self"]]]],[11,"read","","",41,[[["reader"]],["option"]]],[11,"encode","","",42,[[["vec"],["self"]]]],[11,"read","","",42,[[["reader"]],["option"]]],[11,"encode","","",43,[[["vec"],["self"]]]],[11,"read","","",43,[[["reader"]],["option"]]],[11,"encode","","",44,[[["vec"],["self"]]]],[11,"read","","",44,[[["reader"]],["option"]]],[11,"encode","","",45,[[["vec"],["self"]]]],[11,"read","","",45,[[["reader"]],["option"]]],[11,"encode","rustls","",11,[[["vec"],["self"]]]],[11,"read","","",11,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",46,[[["vec"],["self"]]]],[11,"read","","",46,[[["reader"]],["option"]]],[11,"encode","","",47,[[["vec"],["self"]]]],[11,"read","","",47,[[["reader"]],["option"]]],[11,"encode","","",48,[[["vec"],["self"]]]],[11,"read","","",48,[[["reader"]],["option"]]],[11,"encode","rustls","",10,[[["vec"],["self"]]]],[11,"read","","",10,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::enums","",49,[[["vec"],["self"]]]],[11,"read","","",49,[[["reader"]],["option"]]],[11,"encode","","",50,[[["vec"],["self"]]]],[11,"read","","",50,[[["reader"]],["option"]]],[11,"encode","","",51,[[["vec"],["self"]]]],[11,"read","","",51,[[["reader"]],["option"]]],[11,"encode","rustls::internal::msgs::alert","",52,[[["vec"],["self"]]]],[11,"read","","",52,[[["reader"]],[["option",["alertmessagepayload"]],["alertmessagepayload"]]]],[11,"encode","rustls","",121,[[["vec"],["self"]]]],[11,"read","","",121,[[["reader"]],[["option",["vecu16ofpayloadu8"]],["vecu16ofpayloadu8"]]]],[11,"encode","","",122,[[["vec"],["self"]]]],[11,"read","","",122,[[["reader"]],[["vecu16ofpayloadu16"],["option",["vecu16ofpayloadu16"]]]]],[11,"encode","rustls::internal::msgs::handshake","",116,[[["vec"],["self"]]]],[11,"read","","",116,[[["reader"]],[["option",["random"]],["random"]]]],[11,"encode","","",117,[[["vec"],["self"]]]],[11,"read","","",117,[[["reader"]],[["option",["sessionid"]],["sessionid"]]]],[11,"encode","rustls","",123,[[["vec"],["self"]]]],[11,"read","","",123,[[["reader"]],[["ecpointformatlist"],["option",["ecpointformatlist"]]]]],[11,"encode","","",124,[[["vec"],["self"]]]],[11,"read","","",124,[[["reader"]],[["namedgroups"],["option",["namedgroups"]]]]],[11,"encode","","",125,[[["vec"],["self"]]]],[11,"read","","",125,[[["reader"]],[["option",["supportedsignatureschemes"]],["supportedsignatureschemes"]]]],[11,"encode","rustls::internal::msgs::handshake","",54,[[["vec"],["self"]]]],[11,"read","","",54,[[["reader"]],[["servername"],["option",["servername"]]]]],[11,"encode","rustls","",126,[[["vec"],["self"]]]],[11,"read","","",126,[[["reader"]],[["servernamerequest"],["option",["servernamerequest"]]]]],[11,"encode","rustls::internal::msgs::handshake","",55,[[["vec"],["self"]]]],[11,"read","","",55,[[["reader"]],[["keyshareentry"],["option",["keyshareentry"]]]]],[11,"encode","","",56,[[["vec"],["self"]]]],[11,"read","","",56,[[["reader"]],[["option",["presharedkeyidentity"]],["presharedkeyidentity"]]]],[11,"encode","rustls","",127,[[["vec"],["self"]]]],[11,"read","","",127,[[["reader"]],[["presharedkeyidentities"],["option",["presharedkeyidentities"]]]]],[11,"encode","rustls::internal::msgs::handshake","",57,[[["vec"],["self"]]]],[11,"read","","",57,[[["reader"]],[["option",["presharedkeyoffer"]],["presharedkeyoffer"]]]],[11,"encode","","",58,[[["vec"],["self"]]]],[11,"read","","",58,[[["reader"]],[["option",["ocspcertificatestatusrequest"]],["ocspcertificatestatusrequest"]]]],[11,"encode","","",76,[[["vec"],["self"]]]],[11,"read","","",76,[[["reader"]],[["certificatestatusrequest"],["option",["certificatestatusrequest"]]]]],[11,"encode","rustls","",128,[[["vec"],["self"]]]],[11,"read","","",128,[[["reader"]],[["option",["pskkeyexchangemodes"]],["pskkeyexchangemodes"]]]],[11,"encode","","",129,[[["vec"],["self"]]]],[11,"read","","",129,[[["reader"]],[["keyshareentries"],["option",["keyshareentries"]]]]],[11,"encode","","",130,[[["vec"],["self"]]]],[11,"read","","",130,[[["reader"]],[["option",["protocolversions"]],["protocolversions"]]]],[11,"encode","rustls::internal::msgs::handshake","",77,[[["vec"],["self"]]]],[11,"read","","",77,[[["reader"]],[["option",["clientextension"]],["clientextension"]]]],[11,"encode","","",78,[[["vec"],["self"]]]],[11,"read","","",78,[[["reader"]],[["option",["serverextension"]],["serverextension"]]]],[11,"encode","","",59,[[["vec"],["self"]]]],[11,"read","","",59,[[["reader"]],[["option",["clienthellopayload"]],["clienthellopayload"]]]],[11,"encode","","",79,[[["vec"],["self"]]]],[11,"read","","",79,[[["reader"]],[["option",["helloretryextension"]],["helloretryextension"]]]],[11,"encode","","",60,[[["vec"],["self"]]]],[11,"read","","",60,[[["reader"]],[["helloretryrequest"],["option",["helloretryrequest"]]]]],[11,"encode","","",61,[[["vec"],["self"]]]],[11,"read","","",61,[[["reader"]],[["option",["serverhellopayload"]],["serverhellopayload"]]]],[11,"encode","rustls","",131,[[["vec"],["self"]]]],[11,"read","","",131,[[["reader"]],[["certificatepayload"],["option",["certificatepayload"]]]]],[11,"encode","rustls::internal::msgs::handshake","",80,[[["vec"],["self"]]]],[11,"read","","",80,[[["reader"]],[["option",["certificateextension"]],["certificateextension"]]]],[11,"encode","rustls","",132,[[["vec"],["self"]]]],[11,"read","","",132,[[["reader"]],[["certificateextensions"],["option",["certificateextensions"]]]]],[11,"encode","rustls::internal::msgs::handshake","",62,[[["vec"],["self"]]]],[11,"read","","",62,[[["reader"]],[["certificateentry"],["option",["certificateentry"]]]]],[11,"encode","","",63,[[["vec"],["self"]]]],[11,"read","","",63,[[["reader"]],[["option",["certificatepayloadtls13"]],["certificatepayloadtls13"]]]],[11,"encode","","",64,[[["vec"],["self"]]]],[11,"read","","",64,[[["reader"]],[["ecparameters"],["option",["ecparameters"]]]]],[11,"encode","","",65,[[["vec"],["self"]]]],[11,"read","","",65,[[["reader"]],[["option",["digitallysignedstruct"]],["digitallysignedstruct"]]]],[11,"encode","","",66,[[["vec"],["self"]]]],[11,"read","","",66,[[["reader"]],[["option",["clientecdhparams"]],["clientecdhparams"]]]],[11,"encode","","",67,[[["vec"],["self"]]]],[11,"read","","",67,[[["reader"]],[["serverecdhparams"],["option",["serverecdhparams"]]]]],[11,"encode","","",68,[[["vec"],["self"]]]],[11,"read","","",68,[[["reader"]],[["option",["ecdheserverkeyexchange"]],["ecdheserverkeyexchange"]]]],[11,"encode","","",82,[[["vec"],["self"]]]],[11,"read","","",82,[[["reader"]],[["option",["serverkeyexchangepayload"]],["serverkeyexchangepayload"]]]],[11,"encode","rustls","",133,[[["vec"],["self"]]]],[11,"read","","",133,[[["reader"]],[["option",["encryptedextensions"]],["encryptedextensions"]]]],[11,"encode","","",134,[[["vec"],["self"]]]],[11,"read","","",134,[[["reader"]],[["option",["clientcertificatetypes"]],["clientcertificatetypes"]]]],[11,"encode","rustls::internal::msgs::handshake","",69,[[["vec"],["self"]]]],[11,"read","","",69,[[["reader"]],[["option",["certificaterequestpayload"]],["certificaterequestpayload"]]]],[11,"encode","","",83,[[["vec"],["self"]]]],[11,"read","","",83,[[["reader"]],[["option",["certreqextension"]],["certreqextension"]]]],[11,"encode","rustls","",135,[[["vec"],["self"]]]],[11,"read","","",135,[[["reader"]],[["option",["certreqextensions"]],["certreqextensions"]]]],[11,"encode","rustls::internal::msgs::handshake","",70,[[["vec"],["self"]]]],[11,"read","","",70,[[["reader"]],[["certificaterequestpayloadtls13"],["option",["certificaterequestpayloadtls13"]]]]],[11,"encode","","",71,[[["vec"],["self"]]]],[11,"read","","",71,[[["reader"]],[["newsessionticketpayload"],["option",["newsessionticketpayload"]]]]],[11,"encode","","",84,[[["vec"],["self"]]]],[11,"read","","",84,[[["reader"]],[["option",["newsessionticketextension"]],["newsessionticketextension"]]]],[11,"encode","rustls","",136,[[["vec"],["self"]]]],[11,"read","","",136,[[["reader"]],[["newsessionticketextensions"],["option",["newsessionticketextensions"]]]]],[11,"encode","rustls::internal::msgs::handshake","",72,[[["vec"],["self"]]]],[11,"read","","",72,[[["reader"]],[["option",["newsessionticketpayloadtls13"]],["newsessionticketpayloadtls13"]]]],[11,"encode","","",73,[[["vec"],["self"]]]],[11,"read","","",73,[[["reader"]],[["certificatestatus"],["option",["certificatestatus"]]]]],[11,"encode","","",74,[[["vec"],["self"]]]],[11,"read","","",74,[[["reader"]],[["handshakemessagepayload"],["option",["handshakemessagepayload"]]]]],[11,"encode","rustls::internal::msgs::ccs","",118,[[["vec"],["self"]]]],[11,"read","","",118,[[["reader"]],[["changecipherspecpayload"],["option",["changecipherspecpayload"]]]]],[11,"read","rustls::internal::msgs::message","",91,[[["reader"]],[["option",["message"]],["message"]]]],[11,"encode","","",91,[[["vec"],["self"]]]],[11,"encode","rustls::internal::msgs::persist","",119,[[["vec"],["self"]]]],[11,"read","","",119,[[["reader"]],[["option",["clientsessionkey"]],["clientsessionkey"]]]],[11,"encode","","",94,[[["vec"],["self"]]]],[11,"read","","",94,[[["reader"]],[["clientsessionvalue"],["option",["clientsessionvalue"]]]]],[11,"encode","","",95,[[["vec"],["self"]]]],[11,"read","","",95,[[["reader"]],[["option",["serversessionvalue"]],["serversessionvalue"]]]],[11,"supported","rustls","",123,[[],["ecpointformatlist"]]],[11,"sign","","",10,[[["self"]],["signaturealgorithm"]]],[11,"make","","",10,[[["signaturealgorithm"],["hashalgorithm"]],["signaturescheme"]]],[11,"get_hostname","","",126,[[["self"]],[["option",["dnsnameref"]],["dnsnameref"]]]],[11,"from_slices","","",137,[[],["protocolnamelist"]]],[11,"to_vecs","","",137,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,"as_single_slice","","",137,[[["self"]],["option"]]],[11,"get_extensions","rustls::internal::msgs::handshake","",61,[[["self"]]]],[11,"get_extensions","rustls","",133,[[["self"]]]],[11,"read_tls","","",22,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"write_tls","","Writes TLS messages to `wr`.",22,[[["self"],["write"]],[["result",["usize"]],["usize"]]]],[11,"writev_tls","","",22,[[["writev"],["self"]],[["result",["usize"]],["usize"]]]],[11,"process_new_packets","","",22,[[["self"]],[["result",["tlserror"]],["tlserror"]]]],[11,"wants_read","","",22,[[["self"]],["bool"]]],[11,"wants_write","","",22,[[["self"]],["bool"]]],[11,"is_handshaking","","",22,[[["self"]],["bool"]]],[11,"set_buffer_limit","","",22,[[["self"],["usize"]]]],[11,"send_close_notify","","",22,[[["self"]]]],[11,"get_peer_certificates","","",22,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[11,"get_alpn_protocol","","",22,[[["self"]],["option"]]],[11,"get_protocol_version","","",22,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"export_keying_material","","",22,[[["option"],["self"]],[["result",["tlserror"]],["tlserror"]]]],[11,"get_negotiated_ciphersuite","","",22,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"read_tls","","",25,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"write_tls","","Writes TLS messages to `wr`.",25,[[["self"],["write"]],[["result",["usize"]],["usize"]]]],[11,"writev_tls","","",25,[[["writev"],["self"]],[["result",["usize"]],["usize"]]]],[11,"process_new_packets","","",25,[[["self"]],[["result",["tlserror"]],["tlserror"]]]],[11,"wants_read","","",25,[[["self"]],["bool"]]],[11,"wants_write","","",25,[[["self"]],["bool"]]],[11,"is_handshaking","","",25,[[["self"]],["bool"]]],[11,"set_buffer_limit","","",25,[[["self"],["usize"]]]],[11,"send_close_notify","","",25,[[["self"]]]],[11,"get_peer_certificates","","",25,[[["self"]],[["option",["vec"]],["vec",["certificate"]]]]],[11,"get_alpn_protocol","","",25,[[["self"]],["option"]]],[11,"get_protocol_version","","",25,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"export_keying_material","","",25,[[["option"],["self"]],[["result",["tlserror"]],["tlserror"]]]],[11,"get_negotiated_ciphersuite","","",25,[[["self"]],[["option",["supportedciphersuite"]],["supportedciphersuite"]]]],[11,"offer_client_auth","","",16,[[["self"]],["bool"]]],[11,"client_auth_mandatory","","",16,[[["self"]],["bool"]]],[11,"client_auth_root_subjects","","",16,[[["self"]],["distinguishednames"]]],[11,"verify_client_cert","","",16,[[["self"]],[["result",["clientcertverified","tlserror"]],["clientcertverified"],["tlserror"]]]],[11,"offer_client_auth","","",17,[[["self"]],["bool"]]],[11,"client_auth_mandatory","","",17,[[["self"]],["bool"]]],[11,"client_auth_root_subjects","","",17,[[["self"]],["distinguishednames"]]],[11,"verify_client_cert","","",17,[[["self"]],[["result",["clientcertverified","tlserror"]],["clientcertverified"],["tlserror"]]]],[11,"offer_client_auth","","",18,[[["self"]],["bool"]]],[11,"client_auth_root_subjects","","",18,[[["self"]],["distinguishednames"]]],[11,"verify_client_cert","","",18,[[["self"]],[["result",["clientcertverified","tlserror"]],["clientcertverified"],["tlserror"]]]],[11,"put","","",113,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",113,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"take","","",113,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"put","","",20,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",20,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"take","","",20,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"resolve","","",21,[[["option",["dnsnameref"]],["dnsnameref"],["self"]],[["certifiedkey"],["option",["certifiedkey"]]]]],[11,"put","","",112,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",112,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"put","","",23,[[["vec",["u8"]],["self"],["u8"]],["bool"]]],[11,"get","","",23,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"log","","",114,[[["str"],["self"]]]],[11,"will_log","","",114,[[["str"],["self"]],["bool"]]],[11,"log","","",26,[[["str"],["self"]]]],[11,"choose_scheme","rustls::sign","",101,[[["self"]],[["box",["signer"]],["option",["box"]]]]],[11,"algorithm","","",101,[[["self"]],["signaturealgorithm"]]],[11,"as_ref","rustls","",6,[[["self"]]]],[11,"from","rustls::internal::msgs::base","",32,[[["okm",["payloadu8len"]],["payloadu8len"]],["self"]]],[11,"clone","","",29,[[["self"]],["payload"]]],[11,"clone","","",30,[[["self"]],["payloadu24"]]],[11,"clone","","",31,[[["self"]],["payloadu16"]]],[11,"clone","","",32,[[["self"]],["payloadu8"]]],[11,"clone","rustls","",9,[[["self"]],["protocolversion"]]],[11,"clone","rustls::internal::msgs::enums","",33,[[["self"]],["hashalgorithm"]]],[11,"clone","","",34,[[["self"]],["signaturealgorithm"]]],[11,"clone","","",35,[[["self"]],["clientcertificatetype"]]],[11,"clone","","",36,[[["self"]],["compression"]]],[11,"clone","","",37,[[["self"]],["contenttype"]]],[11,"clone","","",38,[[["self"]],["handshaketype"]]],[11,"clone","","",39,[[["self"]],["alertlevel"]]],[11,"clone","","",40,[[["self"]],["alertdescription"]]],[11,"clone","","",41,[[["self"]],["heartbeatmessagetype"]]],[11,"clone","","",42,[[["self"]],["extensiontype"]]],[11,"clone","","",43,[[["self"]],["servernametype"]]],[11,"clone","","",44,[[["self"]],["namedcurve"]]],[11,"clone","","",45,[[["self"]],["namedgroup"]]],[11,"clone","rustls","",11,[[["self"]],["ciphersuite"]]],[11,"clone","rustls::internal::msgs::enums","",46,[[["self"]],["ecpointformat"]]],[11,"clone","","",47,[[["self"]],["heartbeatmode"]]],[11,"clone","","",48,[[["self"]],["eccurvetype"]]],[11,"clone","rustls","",10,[[["self"]],["signaturescheme"]]],[11,"clone","rustls::internal::msgs::enums","",49,[[["self"]],["pskkeyexchangemode"]]],[11,"clone","","",50,[[["self"]],["keyupdaterequest"]]],[11,"clone","","",51,[[["self"]],["certificatestatustype"]]],[11,"clone","rustls::internal::msgs::handshake","",116,[[["self"]],["random"]]],[11,"clone","","",117,[[["self"]],["sessionid"]]],[11,"clone","","",53,[[["self"]],["unknownextension"]]],[11,"clone","","",75,[[["self"]],["servernamepayload"]]],[11,"clone","","",54,[[["self"]],["servername"]]],[11,"clone","","",55,[[["self"]],["keyshareentry"]]],[11,"clone","","",56,[[["self"]],["presharedkeyidentity"]]],[11,"clone","","",57,[[["self"]],["presharedkeyoffer"]]],[11,"clone","","",58,[[["self"]],["ocspcertificatestatusrequest"]]],[11,"clone","","",76,[[["self"]],["certificatestatusrequest"]]],[11,"clone","","",77,[[["self"]],["clientextension"]]],[11,"clone","","",78,[[["self"]],["serverextension"]]],[11,"clone","","",65,[[["self"]],["digitallysignedstruct"]]],[11,"clone","rustls","",12,[[["self"]],["tlserror"]]],[11,"clone","","",2,[[["self"]],["rootcertstore"]]],[11,"clone","","",4,[[["self"]],["serverconfig"]]],[11,"clone","","",3,[[["self"]],["clientconfig"]]],[11,"clone","","",7,[[["self"]],["privatekey"]]],[11,"clone","","",6,[[["self"]],["certificate"]]],[11,"clone","rustls::sign","",98,[[["self"]],["certifiedkey"]]],[11,"default","rustls::internal::msgs::deframer","",96,[[],["self"]]],[11,"default","rustls::internal::msgs::hsjoiner","",97,[[],["self"]]],[11,"default","rustls","",3,[[],["self"]]],[11,"eq","rustls::internal::msgs::base","",29,[[["payload"],["self"]],["bool"]]],[11,"ne","","",29,[[["payload"],["self"]],["bool"]]],[11,"eq","","",30,[[["payloadu24"],["self"]],["bool"]]],[11,"ne","","",30,[[["payloadu24"],["self"]],["bool"]]],[11,"eq","","",31,[[["payloadu16"],["self"]],["bool"]]],[11,"ne","","",31,[[["payloadu16"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["payloadu8"]],["bool"]]],[11,"ne","","",32,[[["self"],["payloadu8"]],["bool"]]],[11,"eq","rustls","",9,[[["self"],["protocolversion"]],["bool"]]],[11,"ne","","",9,[[["self"],["protocolversion"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",33,[[["self"],["hashalgorithm"]],["bool"]]],[11,"ne","","",33,[[["self"],["hashalgorithm"]],["bool"]]],[11,"eq","","",34,[[["self"],["signaturealgorithm"]],["bool"]]],[11,"ne","","",34,[[["self"],["signaturealgorithm"]],["bool"]]],[11,"eq","","",35,[[["clientcertificatetype"],["self"]],["bool"]]],[11,"ne","","",35,[[["clientcertificatetype"],["self"]],["bool"]]],[11,"eq","","",36,[[["compression"],["self"]],["bool"]]],[11,"ne","","",36,[[["compression"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["contenttype"]],["bool"]]],[11,"ne","","",37,[[["self"],["contenttype"]],["bool"]]],[11,"eq","","",38,[[["handshaketype"],["self"]],["bool"]]],[11,"ne","","",38,[[["handshaketype"],["self"]],["bool"]]],[11,"eq","","",39,[[["alertlevel"],["self"]],["bool"]]],[11,"ne","","",39,[[["alertlevel"],["self"]],["bool"]]],[11,"eq","","",40,[[["alertdescription"],["self"]],["bool"]]],[11,"ne","","",40,[[["alertdescription"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["heartbeatmessagetype"]],["bool"]]],[11,"ne","","",41,[[["self"],["heartbeatmessagetype"]],["bool"]]],[11,"eq","","",42,[[["extensiontype"],["self"]],["bool"]]],[11,"ne","","",42,[[["extensiontype"],["self"]],["bool"]]],[11,"eq","","",43,[[["servernametype"],["self"]],["bool"]]],[11,"ne","","",43,[[["servernametype"],["self"]],["bool"]]],[11,"eq","","",44,[[["namedcurve"],["self"]],["bool"]]],[11,"ne","","",44,[[["namedcurve"],["self"]],["bool"]]],[11,"eq","","",45,[[["namedgroup"],["self"]],["bool"]]],[11,"ne","","",45,[[["namedgroup"],["self"]],["bool"]]],[11,"eq","rustls","",11,[[["self"],["ciphersuite"]],["bool"]]],[11,"ne","","",11,[[["self"],["ciphersuite"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",46,[[["self"],["ecpointformat"]],["bool"]]],[11,"ne","","",46,[[["self"],["ecpointformat"]],["bool"]]],[11,"eq","","",47,[[["self"],["heartbeatmode"]],["bool"]]],[11,"ne","","",47,[[["self"],["heartbeatmode"]],["bool"]]],[11,"eq","","",48,[[["self"],["eccurvetype"]],["bool"]]],[11,"ne","","",48,[[["self"],["eccurvetype"]],["bool"]]],[11,"eq","rustls","",10,[[["self"],["signaturescheme"]],["bool"]]],[11,"ne","","",10,[[["self"],["signaturescheme"]],["bool"]]],[11,"eq","rustls::internal::msgs::enums","",49,[[["self"],["pskkeyexchangemode"]],["bool"]]],[11,"ne","","",49,[[["self"],["pskkeyexchangemode"]],["bool"]]],[11,"eq","","",50,[[["self"],["keyupdaterequest"]],["bool"]]],[11,"ne","","",50,[[["self"],["keyupdaterequest"]],["bool"]]],[11,"eq","","",51,[[["certificatestatustype"],["self"]],["bool"]]],[11,"ne","","",51,[[["certificatestatustype"],["self"]],["bool"]]],[11,"eq","rustls::internal::msgs::handshake","",116,[[["self"],["random"]],["bool"]]],[11,"ne","","",116,[[["self"],["random"]],["bool"]]],[11,"eq","","",117,[[["self"]],["bool"]]],[11,"eq","rustls","",12,[[["self"],["tlserror"]],["bool"]]],[11,"ne","","",12,[[["self"],["tlserror"]],["bool"]]],[11,"eq","","",13,[[["self"],["bulkalgorithm"]],["bool"]]],[11,"eq","","",5,[[["supportedciphersuite"],["self"]],["bool"]]],[11,"eq","","",7,[[["privatekey"],["self"]],["bool"]]],[11,"ne","","",7,[[["privatekey"],["self"]],["bool"]]],[11,"eq","","",6,[[["certificate"],["self"]],["bool"]]],[11,"ne","","",6,[[["certificate"],["self"]],["bool"]]],[11,"fmt","rustls::internal::msgs::codec","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::base","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::enums","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::alert","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::handshake","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::ccs","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::message","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls::internal::msgs::persist","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustls","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"description","","",12,[[["self"]],["str"]]],[11,"read","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","Obtain plaintext data received from the peer over this TLS…",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","Obtain plaintext data received from the peer over this TLS…",25,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","","Send the plaintext `buf` to the peer, encrypting and…",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",22,[[["self"]],["result"]]],[11,"write","","",24,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",24,[[["self"]],["result"]]],[11,"write","","Send the plaintext `buf` to the peer, encrypting and…",25,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",25,[[["self"]],["result"]]],[11,"get_encoding","rustls::internal::msgs::codec","Convenience function to get the results of `encode()`.",28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"read_bytes","","Read one of these from the front of `bytes` and return it.",28,[[],["option"]]],[11,"init","","",115,[[],["reader"]]],[11,"rest","","",115,[[["self"]]]],[11,"take","","",115,[[["self"],["usize"]],["option"]]],[11,"any_left","","",115,[[["self"]],["bool"]]],[11,"left","","",115,[[["self"]],["usize"]]],[11,"used","","",115,[[["self"]],["usize"]]],[11,"sub","","",115,[[["self"],["usize"]],[["option",["reader"]],["reader"]]]],[11,"decode","","",27,[[],[["option",["u24"]],["u24"]]]],[11,"new","rustls::internal::msgs::base","",29,[[["vec",["u8"]],["u8"]],["payload"]]],[11,"empty","","",29,[[],["payload"]]],[11,"from_slice","","",29,[[],["payload"]]],[11,"new","","",30,[[["vec",["u8"]],["u8"]],["payloadu24"]]],[11,"empty","","",30,[[],["payloadu24"]]],[11,"new","","",31,[[["vec",["u8"]],["u8"]],["payloadu16"]]],[11,"empty","","",31,[[],["payloadu16"]]],[11,"encode_slice","","",31,[[["vec"]]]],[11,"new","","",32,[[["vec",["u8"]],["u8"]],["payloadu8"]]],[11,"empty","","",32,[[],["payloadu8"]]],[11,"into_inner","","",32,[[],[["vec",["u8"]],["u8"]]]],[11,"get_u8","rustls::internal::msgs::enums","",33,[[["self"]],["u8"]]],[11,"get_u8","","",34,[[["self"]],["u8"]]],[11,"get_u8","","",35,[[["self"]],["u8"]]],[11,"get_u8","","",36,[[["self"]],["u8"]]],[11,"get_u8","","",37,[[["self"]],["u8"]]],[11,"get_u8","","",38,[[["self"]],["u8"]]],[11,"get_u8","","",39,[[["self"]],["u8"]]],[11,"get_u8","","",40,[[["self"]],["u8"]]],[11,"get_u8","","",41,[[["self"]],["u8"]]],[11,"get_u16","","",42,[[["self"]],["u16"]]],[11,"get_u8","","",43,[[["self"]],["u8"]]],[11,"get_u16","","",44,[[["self"]],["u16"]]],[11,"get_u16","","",45,[[["self"]],["u16"]]],[11,"get_u8","","",46,[[["self"]],["u8"]]],[11,"get_u8","","",47,[[["self"]],["u8"]]],[11,"get_u8","","",48,[[["self"]],["u8"]]],[11,"get_u8","","",49,[[["self"]],["u8"]]],[11,"get_u8","","",50,[[["self"]],["u8"]]],[11,"get_u8","","",51,[[["self"]],["u8"]]],[11,"length","rustls::internal::msgs::alert","",52,[[["self"]],["usize"]]],[11,"has_duplicate_extension","rustls::internal::msgs::handshake","Returns true if there is more than one extension of a…",90,[[["self"]],["bool"]]],[11,"find_extension","","",90,[[["self"],["extensiontype"]],[["serverextension"],["option",["serverextension"]]]]],[11,"get_alpn_protocol","","",90,[[["self"]],["option"]]],[11,"get_quic_params_extension","","",90,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"early_data_extension_offered","","",90,[[["self"]],["bool"]]],[11,"from_slice","","",116,[[],["random"]]],[11,"write_slice","","",116,[[["self"]]]],[11,"new","","",117,[[],["sessionid"]]],[11,"empty","","",117,[[],["sessionid"]]],[11,"len","","",117,[[["self"]],["usize"]]],[11,"is_empty","","",117,[[["self"]],["bool"]]],[11,"new","","",55,[[["namedgroup"]],["keyshareentry"]]],[11,"new","","",56,[[["vec",["u8"]],["u32"],["u8"]],["presharedkeyidentity"]]],[11,"new","","Make a new one with one entry.",57,[[["vec",["u8"]],["presharedkeyidentity"],["u8"]],["presharedkeyoffer"]]],[11,"build_ocsp","","",76,[[],["certificatestatusrequest"]]],[11,"get_type","","",77,[[["self"]],["extensiontype"]]],[11,"make_sni","","Make a basic SNI ServerNameRequest quoting `hostname`.",77,[[["dnsnameref"]],["clientextension"]]],[11,"get_type","","",78,[[["self"]],["extensiontype"]]],[11,"make_alpn","","",78,[[],["serverextension"]]],[11,"make_empty_renegotiation_info","","",78,[[],["serverextension"]]],[11,"make_sct","","",78,[[["vec",["u8"]],["u8"]],["serverextension"]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",59,[[["self"]],["bool"]]],[11,"find_extension","","",59,[[["self"],["extensiontype"]],[["option",["clientextension"]],["clientextension"]]]],[11,"get_sni_extension","","",59,[[["self"]],[["servernamerequest"],["option",["servernamerequest"]]]]],[11,"get_sigalgs_extension","","",59,[[["self"]],[["supportedsignatureschemes"],["option",["supportedsignatureschemes"]]]]],[11,"get_namedgroups_extension","","",59,[[["self"]],[["option",["namedgroups"]],["namedgroups"]]]],[11,"get_ecpoints_extension","","",59,[[["self"]],[["option",["ecpointformatlist"]],["ecpointformatlist"]]]],[11,"get_alpn_extension","","",59,[[["self"]],[["protocolnamelist"],["option",["protocolnamelist"]]]]],[11,"get_quic_params_extension","","",59,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"get_ticket_extension","","",59,[[["self"]],[["option",["clientextension"]],["clientextension"]]]],[11,"get_versions_extension","","",59,[[["self"]],[["option",["protocolversions"]],["protocolversions"]]]],[11,"get_keyshare_extension","","",59,[[["self"]],[["keyshareentries"],["option",["keyshareentries"]]]]],[11,"has_keyshare_extension_with_duplicates","","",59,[[["self"]],["bool"]]],[11,"get_psk","","",59,[[["self"]],[["option",["presharedkeyoffer"]],["presharedkeyoffer"]]]],[11,"check_psk_ext_is_last","","",59,[[["self"]],["bool"]]],[11,"get_psk_modes","","",59,[[["self"]],[["option",["pskkeyexchangemodes"]],["pskkeyexchangemodes"]]]],[11,"psk_mode_offered","","",59,[[["pskkeyexchangemode"],["self"]],["bool"]]],[11,"set_psk_binder","","",59,[[["self"],["vec",["u8"]],["u8"]]]],[11,"ems_support_offered","","",59,[[["self"]],["bool"]]],[11,"early_data_extension_offered","","",59,[[["self"]],["bool"]]],[11,"get_type","","",79,[[["self"]],["extensiontype"]]],[11,"has_duplicate_extension","","Returns true if there is more than one extension of a…",60,[[["self"]],["bool"]]],[11,"has_unknown_extension","","",60,[[["self"]],["bool"]]],[11,"get_requested_key_share_group","","",60,[[["self"]],[["option",["namedgroup"]],["namedgroup"]]]],[11,"get_cookie","","",60,[[["self"]],[["payloadu16"],["option",["payloadu16"]]]]],[11,"get_supported_versions","","",60,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"get_key_share","","",61,[[["self"]],[["option",["keyshareentry"]],["keyshareentry"]]]],[11,"get_psk_index","","",61,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"get_ecpoints_extension","","",61,[[["self"]],[["option",["ecpointformatlist"]],["ecpointformatlist"]]]],[11,"ems_support_acked","","",61,[[["self"]],["bool"]]],[11,"get_sct_list","","",61,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"get_supported_versions","","",61,[[["self"]],[["protocolversion"],["option",["protocolversion"]]]]],[11,"get_type","","",80,[[["self"]],["extensiontype"]]],[11,"make_sct","","",80,[[["vec",["u8"]],["u8"]],["certificateextension"]]],[11,"get_cert_status","","",80,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_sct_list","","",80,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"new","","",62,[[["certificate"]],["certificateentry"]]],[11,"has_duplicate_extension","","",62,[[["self"]],["bool"]]],[11,"has_unknown_extension","","",62,[[["self"]],["bool"]]],[11,"get_ocsp_response","","",62,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_scts","","",62,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"new","","",63,[[["vec",["certificateentry"]],["certificateentry"]],["certificatepayloadtls13"]]],[11,"any_entry_has_duplicate_extension","","",63,[[["self"]],["bool"]]],[11,"any_entry_has_unknown_extension","","",63,[[["self"]],["bool"]]],[11,"any_entry_has_extension","","",63,[[["self"]],["bool"]]],[11,"get_end_entity_ocsp","","",63,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get_end_entity_scts","","",63,[[["self"]],[["option",["sctlist"]],["sctlist"]]]],[11,"convert","","",63,[[["self"]],["certificatepayload"]]],[11,"new","","",65,[[["u8"],["vec",["u8"]],["signaturescheme"]],["digitallysignedstruct"]]],[11,"new","","",67,[[["namedgroup"]],["serverecdhparams"]]],[11,"unwrap_given_kxa","","",82,[[["keyexchangealgorithm"],["self"]],[["option",["serverkeyexchangepayload"]],["serverkeyexchangepayload"]]]],[11,"encode_params","","",82,[[["vec"],["self"]]]],[11,"get_sig","","",82,[[["self"]],[["option",["digitallysignedstruct"]],["digitallysignedstruct"]]]],[11,"get_type","","",83,[[["self"]],["extensiontype"]]],[11,"find_extension","","",70,[[["self"],["extensiontype"]],[["option",["certreqextension"]],["certreqextension"]]]],[11,"get_sigalgs_extension","","",70,[[["self"]],[["supportedsignatureschemes"],["option",["supportedsignatureschemes"]]]]],[11,"get_authorities_extension","","",70,[[["self"]],[["option",["distinguishednames"]],["distinguishednames"]]]],[11,"new","","",71,[[["u32"],["vec",["u8"]],["u8"]],["newsessionticketpayload"]]],[11,"get_type","","",84,[[["self"]],["extensiontype"]]],[11,"new","","",72,[[["u32"],["vec",["u8"]],["u8"]],["newsessionticketpayloadtls13"]]],[11,"find_extension","","",72,[[["self"],["extensiontype"]],[["option",["newsessionticketextension"]],["newsessionticketextension"]]]],[11,"get_max_early_data_size","","",72,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"new","","",73,[[["vec",["u8"]],["u8"]],["certificatestatus"]]],[11,"take_ocsp_response","","",73,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"length","","",74,[[["self"]],["usize"]]],[11,"read_version","","",74,[[["protocolversion"],["reader"]],[["handshakemessagepayload"],["option",["handshakemessagepayload"]]]]],[11,"build_key_update_notify","","",74,[[],["handshakemessagepayload"]]],[11,"get_encoding_for_binder_signing","","",74,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"build_handshake_hash","","",74,[[],["handshakemessagepayload"]]],[11,"length","rustls::internal::msgs::ccs","",118,[[["self"]],["usize"]]],[11,"encode","rustls::internal::msgs::message","",93,[[["vec"],["self"]]]],[11,"decode_given_type","","",93,[[["protocolversion"],["self"],["contenttype"]],[["messagepayload"],["option",["messagepayload"]]]]],[11,"length","","",93,[[["self"]],["usize"]]],[11,"new_opaque","","",93,[[["vec",["u8"]],["u8"]],["messagepayload"]]],[11,"check_header","","Do some very lax checks on the header, and return None if…",91,[[],[["option",["usize"]],["usize"]]]],[11,"is_content_type","","",91,[[["self"],["contenttype"]],["bool"]]],[11,"is_handshake_type","","",91,[[["self"],["handshaketype"]],["bool"]]],[11,"decode_payload","","",91,[[["self"]],["bool"]]],[11,"take_payload","","",91,[[],[["vec",["u8"]],["u8"]]]],[11,"take_opaque_payload","","",91,[[["self"]],[["option",["payload"]],["payload"]]]],[11,"into_opaque","","",91,[[],["message"]]],[11,"build_alert","","",91,[[["alertlevel"],["alertdescription"]],["message"]]],[11,"build_key_update_notify","","",91,[[],["message"]]],[11,"to_borrowed","","",91,[[["self"]],["borrowmessage"]]],[11,"session_for_dns_name","rustls::internal::msgs::persist","",119,[[["dnsnameref"]],["clientsessionkey"]]],[11,"hint_for_dns_name","","",119,[[["dnsnameref"]],["clientsessionkey"]]],[11,"new","","",94,[[["sessionid"],["u8"],["vec",["u8"]],["protocolversion"],["ciphersuite"]],["clientsessionvalue"]]],[11,"set_extended_ms_used","","",94,[[["self"]]]],[11,"set_times","","",94,[[["u32"],["self"],["u64"]]]],[11,"has_expired","","",94,[[["self"],["u64"]],["bool"]]],[11,"get_obfuscated_ticket_age","","",94,[[["self"],["u64"]],["u32"]]],[11,"take_ticket","","",94,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set_max_early_data_size","","",94,[[["self"],["u32"]]]],[11,"new","","",95,[[["option"],["protocolversion"],["option",["vec"]],["ciphersuite"],["option",["dnsname"]],["vec",["u8"]],["dnsname"],["u8"]],["serversessionvalue"]]],[11,"set_extended_ms_used","","",95,[[["self"]]]],[11,"new","rustls::internal::msgs::deframer","",96,[[],["messagedeframer"]]],[11,"read","","Read some bytes from `rd`, and add them to our internal…",96,[[["self"],["read"]],[["result",["usize"]],["usize"]]]],[11,"has_pending","","Returns true if we have messages for the caller to…",96,[[["self"]],["bool"]]],[11,"new","rustls::internal::msgs::fragmenter","Make a new fragmenter. `max_fragment_len` is the maximum…",120,[[["usize"]],["messagefragmenter"]]],[11,"fragment","","Take the Message `msg` and re-fragment it into new…",120,[[["message"],["self"],["vecdeque"]]]],[11,"fragment_borrow","","Enqueue borrowed fragments of (version, typ, payload)…",120,[[["contenttype"],["vecdeque"],["protocolversion"],["self"]]]],[11,"new","rustls::internal::msgs::hsjoiner","Make a new HandshakeJoiner.",97,[[],["handshakejoiner"]]],[11,"want_message","","Do we want to process this message?",97,[[["message"],["self"]],["bool"]]],[11,"is_empty","","Do we have any buffered data?",97,[[["self"]],["bool"]]],[11,"take_message","","Take the message, and join/split it as needed. Return the…",97,[[["message"],["self"]],[["option",["usize"]],["usize"]]]],[11,"complete_io","rustls","This function uses `io` to complete any outstanding IO for…",102,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"offer_client_auth","","Returns `true` to enable the server to request a client…",111,[[["self"]],["bool"]]],[11,"client_auth_mandatory","","Returns `true` to require a client certificate and `false`…",111,[[["self"]],["bool"]]],[11,"will_log","","Indicates whether the secret with label `label` will be…",108,[[["str"],["self"]],["bool"]]]],"p":[[3,"Stream"],[3,"StreamOwned"],[3,"RootCertStore"],[3,"ClientConfig"],[3,"ServerConfig"],[3,"SupportedCipherSuite"],[3,"Certificate"],[3,"PrivateKey"],[3,"DangerousClientConfig"],[4,"ProtocolVersion"],[4,"SignatureScheme"],[4,"CipherSuite"],[4,"TLSError"],[4,"BulkAlgorithm"],[3,"ServerCertVerified"],[3,"ClientCertVerified"],[3,"AllowAnyAuthenticatedClient"],[3,"AllowAnyAnonymousOrAuthenticatedClient"],[3,"NoClientAuth"],[3,"Ticketer"],[3,"ServerSessionMemoryCache"],[3,"ResolvesServerCertUsingSNI"],[3,"ServerSession"],[3,"ClientSessionMemoryCache"],[3,"WriteEarlyData"],[3,"ClientSession"],[3,"KeyLogFile"],[3,"u24"],[8,"Codec"],[3,"Payload"],[3,"PayloadU24"],[3,"PayloadU16"],[3,"PayloadU8"],[4,"HashAlgorithm"],[4,"SignatureAlgorithm"],[4,"ClientCertificateType"],[4,"Compression"],[4,"ContentType"],[4,"HandshakeType"],[4,"AlertLevel"],[4,"AlertDescription"],[4,"HeartbeatMessageType"],[4,"ExtensionType"],[4,"ServerNameType"],[4,"NamedCurve"],[4,"NamedGroup"],[4,"ECPointFormat"],[4,"HeartbeatMode"],[4,"ECCurveType"],[4,"PSKKeyExchangeMode"],[4,"KeyUpdateRequest"],[4,"CertificateStatusType"],[3,"AlertMessagePayload"],[3,"UnknownExtension"],[3,"ServerName"],[3,"KeyShareEntry"],[3,"PresharedKeyIdentity"],[3,"PresharedKeyOffer"],[3,"OCSPCertificateStatusRequest"],[3,"ClientHelloPayload"],[3,"HelloRetryRequest"],[3,"ServerHelloPayload"],[3,"CertificateEntry"],[3,"CertificatePayloadTLS13"],[3,"ECParameters"],[3,"DigitallySignedStruct"],[3,"ClientECDHParams"],[3,"ServerECDHParams"],[3,"ECDHEServerKeyExchange"],[3,"CertificateRequestPayload"],[3,"CertificateRequestPayloadTLS13"],[3,"NewSessionTicketPayload"],[3,"NewSessionTicketPayloadTLS13"],[3,"CertificateStatus"],[3,"HandshakeMessagePayload"],[4,"ServerNamePayload"],[4,"CertificateStatusRequest"],[4,"ClientExtension"],[4,"ServerExtension"],[4,"HelloRetryExtension"],[4,"CertificateExtension"],[4,"KeyExchangeAlgorithm"],[4,"ServerKeyExchangePayload"],[4,"CertReqExtension"],[4,"NewSessionTicketExtension"],[4,"HandshakePayload"],[8,"SupportedPointFormats"],[8,"DecomposedSignatureScheme"],[8,"ConvertServerNameList"],[8,"ConvertProtocolNameList"],[8,"HasServerExtensions"],[3,"Message"],[3,"BorrowMessage"],[4,"MessagePayload"],[3,"ClientSessionValue"],[3,"ServerSessionValue"],[3,"MessageDeframer"],[3,"HandshakeJoiner"],[3,"CertifiedKey"],[8,"SigningKey"],[8,"Signer"],[3,"RSASigningKey"],[8,"Session"],[8,"StoresClientSessions"],[8,"ResolvesClientCert"],[8,"StoresServerSessions"],[8,"ResolvesServerCert"],[8,"ProducesTickets"],[8,"KeyLog"],[8,"WriteV"],[8,"ServerCertVerifier"],[8,"ClientCertVerifier"],[3,"NoClientSessionStorage"],[3,"NoServerSessionStorage"],[3,"NoKeyLog"],[3,"Reader"],[3,"Random"],[3,"SessionID"],[3,"ChangeCipherSpecPayload"],[3,"ClientSessionKey"],[3,"MessageFragmenter"],[6,"VecU16OfPayloadU8"],[6,"VecU16OfPayloadU16"],[6,"ECPointFormatList"],[6,"NamedGroups"],[6,"SupportedSignatureSchemes"],[6,"ServerNameRequest"],[6,"PresharedKeyIdentities"],[6,"PSKKeyExchangeModes"],[6,"KeyShareEntries"],[6,"ProtocolVersions"],[6,"CertificatePayload"],[6,"CertificateExtensions"],[6,"EncryptedExtensions"],[6,"ClientCertificateTypes"],[6,"CertReqExtensions"],[6,"NewSessionTicketExtensions"],[6,"ProtocolNameList"]]};
searchIndex["ryu"] = {"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float"],["self"]],["str"]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[["f32"]],["usize"]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["safemem"] = {"doc":"Safe wrappers for memory-accessing functions like…","i":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges…",null,[[["usize"]]]],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",null,[[["u8"]]]],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",null,[[["vec"]]]]],"p":[]};
searchIndex["sct"] = {"doc":"SCT.rs: SCT verification library This library implements…","i":[[3,"Log","sct","Describes a CT log",null,null],[12,"description","","The operator's name/description of the log. This field is…",0,null],[12,"url","","The certificate submission url. This field is not used by…",0,null],[12,"operated_by","","Which entity operates the log. This field is not used by…",0,null],[12,"key","","Public key usable for verifying certificates. TODO: fixme…",0,null],[12,"id","","Key hash, which is SHA256 applied to the SPKI encoding.",0,null],[12,"max_merge_delay","","The log's maximum merge delay. This field is not used by…",0,null],[4,"Error","","How sct.rs reports errors.",null,null],[13,"MalformedSCT","","The SCT was somehow misencoded, truncated or otherwise…",1,null],[13,"InvalidSignature","","The SCT contained an invalid signature.",1,null],[13,"TimestampInFuture","","The SCT was signed in the future.  Clock skew?",1,null],[13,"UnsupportedSCTVersion","","The SCT had a version that this library does not handle.",1,null],[13,"UnknownLog","","The SCT was refers to an unknown log.",1,null],[5,"verify_sct","","Verifies that the SCT `sct` (a…",null,[[["u64"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"should_be_fatal","","Applies a suggested policy for error handling:",1,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Log"],[4,"Error"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["option"],["result",["option"]]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["ignoredany"],["result",["ignoredany"]]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["serde_json"] = {"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["result",["value","error"]],["value"],["error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],[["value"],["option",["value"]]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["w"],["self"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["w"],["self"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["w"],["self"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["w"],["self"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["w"],["self"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["w"],["self"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["result",["value","error"]],["value"],["error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["index"],["self"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["option",["number"]],["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","serde_json::de","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"begin_array","serde_json::ser","",12,[[["w"],["self"]],["result"]]],[11,"end_array","","",12,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object","","",12,[[["w"],["self"]],["result"]]],[11,"end_object","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"end_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["vec"],["self"]],[["reference",["str"]],["result",["reference"]]]]],[11,"parse_str_raw","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",14,[[["self"],["bool"]]]],[11,"next","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",15,[[["self"],["bool"]]]],[11,"next","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"set_failed","","",16,[[["self"],["bool"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["string"],["map",["string","value"]],["value"]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,[[],["self"]]],[11,"from","","Convert `()` to `Value`",0,[[],["self"]]],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[["self"]],[["option",["result"]],["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"default","serde_json::map","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["value"],["self"]],["bool"]]],[11,"ne","","",0,[[["value"],["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["string"],["self"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["number"],["self"]],["bool"]]],[11,"ne","","",13,[[["number"],["self"]],["bool"]]],[11,"fmt","serde_json::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde_json::ser","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],[["result",["value","error"]],["value"],["error"]]]],[11,"source","serde_json::error","",4,[[["self"]],[["option",["error"]],["error"]]]],[11,"deserialize_any","serde_json::value","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_option","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_char","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_str","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_string","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bytes","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_byte_buf","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_seq","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_map","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_identifier","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_ignored_any","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_any","serde_json","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",13,[[["v"]],["result"]]],[11,"deserialize_char","","",13,[[["v"]],["result"]]],[11,"deserialize_str","","",13,[[["v"]],["result"]]],[11,"deserialize_string","","",13,[[["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["v"]],["result"]]],[11,"deserialize_option","","",13,[[["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["v"]],["result"]]],[11,"deserialize_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",13,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["v"]],["result"]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json","",13,[[["s"],["self"]],["result"]]],[11,"serialize_bool","serde_json::value","",24,[[["bool"]],[["result",["value"]],["value"]]]],[11,"serialize_i8","","",24,[[["i8"]],[["result",["value"]],["value"]]]],[11,"serialize_i16","","",24,[[["i16"]],[["result",["value"]],["value"]]]],[11,"serialize_i32","","",24,[[["i32"]],[["result",["value"]],["value"]]]],[11,"serialize_i64","","",24,[[["i64"]],[["result",["value"]],["value"]]]],[11,"serialize_u8","","",24,[[["u8"]],[["result",["value"]],["value"]]]],[11,"serialize_u16","","",24,[[["u16"]],[["result",["value"]],["value"]]]],[11,"serialize_u32","","",24,[[["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_u64","","",24,[[["u64"]],[["result",["value"]],["value"]]]],[11,"serialize_f32","","",24,[[["f32"]],[["result",["value"]],["value"]]]],[11,"serialize_f64","","",24,[[["f64"]],[["result",["value"]],["value"]]]],[11,"serialize_char","","",24,[[["char"]],[["result",["value"]],["value"]]]],[11,"serialize_str","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_bytes","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit_struct","","",24,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_unit_variant","","",24,[[["str"],["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_struct","","",24,[[["str"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_variant","","",24,[[["str"],["u32"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_none","","",24,[[],[["result",["value"]],["value"]]]],[11,"serialize_some","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"serialize_seq","","",24,[[["option",["usize"]],["usize"]],["result"]]],[11,"serialize_tuple","","",24,[[["usize"]],["result"]]],[11,"serialize_tuple_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_tuple_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"serialize_map","","",24,[[["option",["usize"]],["usize"]],["result"]]],[11,"serialize_struct","","",24,[[["str"],["usize"]],["result"]]],[11,"serialize_struct_variant","","",24,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_str","","",24,[[["t"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],[["result",["number"]],["number"]]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"invalid_type","","",4,[[["unexpected"],["expected"]],["self"]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]};
searchIndex["serde_with"] = {"doc":"docs.rs badge crates.io badge Build Status codecov","i":[[23,"skip_serializing_none","serde_with","Add `skip_serializing_if` annotations to [`Option`] fields.",null,null],[3,"SpaceSeparator","","Predefined separator using a single space",null,null],[3,"CommaSeparator","","Predefined separator using a single comma",null,null],[0,"rust","","De/Serialization for Rust's builtin and std types",null,null],[3,"StringWithSeparator","serde_with::rust","De/Serialize a delimited collection using [`Display`] and…",null,null],[0,"display_fromstr","","De/Serialize using [`Display`] and [`FromStr`]…",null,null],[5,"deserialize","serde_with::rust::display_fromstr","Deserialize T using [FromStr]",null,[[["d"]],["result"]]],[5,"serialize","","Serialize T using [Display]",null,[[["t"],["s"]],["result"]]],[0,"seq_display_fromstr","serde_with::rust","De/Serialize sequences using [`FromIterator`] and…",null,null],[5,"deserialize","serde_with::rust::seq_display_fromstr","Deserialize collection T using [FromIterator] and…",null,[[["d"]],["result"]]],[5,"serialize","","Serialize collection T using [IntoIterator] and [Display]…",null,[[["t"],["s"]],["result"]]],[0,"double_option","serde_with::rust","Makes a distinction between a missing, unset, or existing…",null,null],[5,"deserialize","serde_with::rust::double_option","Deserialize potentially non-existing optional value",null,[[["d"]],[["option",["option"]],["result",["option"]]]]],[5,"serialize","","Serialize optional value",null,[[["option"],["s"]],["result"]]],[0,"unwrap_or_skip","serde_with::rust","Serialize inner value if [`Some`]`(T)`. If [`None`],…",null,null],[5,"deserialize","serde_with::rust::unwrap_or_skip","Deserialize value wrapped in Some(T)",null,[[["d"]],[["option"],["result",["option"]]]]],[5,"serialize","","Serialize value if Some(T), unit struct if None",null,[[["s"],["option"]],["result"]]],[0,"sets_duplicate_value_is_error","serde_with::rust","Ensure no duplicate values exist in a set.",null,null],[5,"deserialize","serde_with::rust::sets_duplicate_value_is_error","Deserialize a set and return an error on duplicate values",null,[[["d"]],["result"]]],[0,"maps_duplicate_key_is_error","serde_with::rust","Ensure no duplicate keys exist in a map.",null,null],[5,"deserialize","serde_with::rust::maps_duplicate_key_is_error","Deserialize a map and return an error on duplicate keys",null,[[["d"]],["result"]]],[0,"sets_first_value_wins","serde_with::rust","Ensure that the first value is taken, if duplicate values…",null,null],[5,"deserialize","serde_with::rust::sets_first_value_wins","Deserialize a set and return an error on duplicate values",null,[[["d"]],["result"]]],[0,"maps_first_key_wins","serde_with::rust","Ensure that the first key is taken, if duplicate keys exist",null,null],[5,"deserialize","serde_with::rust::maps_first_key_wins","Deserialize a map and return an error on duplicate keys",null,[[["d"]],["result"]]],[0,"string_empty_as_none","serde_with::rust","De/Serialize a [`Option`]`<String>` type while…",null,null],[5,"deserialize","serde_with::rust::string_empty_as_none","Deserialize an `Option<T>` from a string using `FromStr`",null,[[["d"]],[["result",["option"]],["option"]]]],[5,"serialize","","Serialize a string from `Option<T>` using `AsRef<str>` or…",null,[[["s"],["option"]],["result"]]],[0,"hashmap_as_tuple_list","serde_with::rust","De/Serialize a [`HashMap`] into a list of tuples",null,null],[5,"serialize","serde_with::rust::hashmap_as_tuple_list","Serialize the [`HashMap`] as a list of tuples",null,[[["hashmap"],["s"]],["result"]]],[5,"deserialize","","Deserialize a [`HashMap`] from a list of tuples",null,[[["d"]],[["result",["hashmap"]],["hashmap"]]]],[0,"btreemap_as_tuple_list","serde_with::rust","De/Serialize a [`BTreeMap`] into a list of tuples",null,null],[5,"serialize","serde_with::rust::btreemap_as_tuple_list","Serialize the [`BTreeMap`] as a list of tuples",null,[[["btreemap"],["s"]],["result"]]],[5,"deserialize","","Deserialize a [`BTreeMap`] from a list of tuples",null,[[["d"]],[["btreemap"],["result",["btreemap"]]]]],[0,"tuple_list_as_map","serde_with::rust","This serializes a list of tuples into a map and back",null,null],[5,"serialize","serde_with::rust::tuple_list_as_map","Serialize any iteration of tuples into a map.",null,[[["i"],["s"]],["result"]]],[5,"deserialize","","Deserialize a map into an iterator of tuples.",null,[[["d"]],["result"]]],[0,"bytes_or_string","serde_with::rust","Deserialize from bytes or String",null,null],[5,"deserialize","serde_with::rust::bytes_or_string","Deserialize a [`Vec`]`<u8>` from either bytes or string",null,[[["d"]],[["result",["vec"]],["vec",["u8"]]]]],[0,"default_on_error","serde_with::rust","Deserialize value and return [`Default`] on error",null,null],[5,"deserialize","serde_with::rust::default_on_error","Deserialize T and return the [`Default`] value on error",null,[[["d"]],["result"]]],[0,"default_on_null","serde_with::rust","Deserialize default value if encountering `null`.",null,null],[5,"deserialize","serde_with::rust::default_on_null","Deserialize T and return the [`Default`] value if original…",null,[[["d"]],["result"]]],[11,"serialize","serde_with::rust","Serialize collection into a string with separator symbol",0,[[["s"],["t"]],["result"]]],[11,"deserialize","","Deserialize a collection from a string with separator symbol",0,[[["d"]],["result"]]],[8,"Separator","serde_with","Separator for string-based collection de/serialization",null,null],[10,"separator","","Return the string delimiting two elements in the…",1,[[],["str"]]],[14,"flattened_maybe","","Support deserializing from flattened and non-flattened…",null,null],[14,"with_prefix","","Serialize with an added prefix on every field name and…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_with::rust","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"separator","serde_with","",2,[[],["str"]]],[11,"separator","","",3,[[],["str"]]],[11,"clone","serde_with::rust","",0,[[["self"]],["stringwithseparator"]]],[11,"clone","serde_with","",2,[[["self"]],["spaceseparator"]]],[11,"clone","","",3,[[["self"]],["commaseparator"]]],[11,"default","serde_with::rust","",0,[[],["stringwithseparator"]]],[11,"default","serde_with","",2,[[],["spaceseparator"]]],[11,"default","","",3,[[],["commaseparator"]]],[11,"cmp","serde_with::rust","",0,[[["self"],["stringwithseparator"]],["ordering"]]],[11,"cmp","serde_with","",2,[[["spaceseparator"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["commaseparator"],["self"]],["ordering"]]],[11,"eq","serde_with::rust","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"ne","","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"eq","serde_with","",2,[[["spaceseparator"],["self"]],["bool"]]],[11,"eq","","",3,[[["commaseparator"],["self"]],["bool"]]],[11,"partial_cmp","serde_with::rust","",0,[[["self"],["stringwithseparator"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"le","","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"gt","","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"ge","","",0,[[["self"],["stringwithseparator"]],["bool"]]],[11,"partial_cmp","serde_with","",2,[[["spaceseparator"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["commaseparator"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","serde_with::rust","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_with","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","serde_with::rust","",0,[[["self"],["__h"]]]],[11,"hash","serde_with","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]]],"p":[[3,"StringWithSeparator"],[8,"Separator"],[3,"SpaceSeparator"],[3,"CommaSeparator"]]};
searchIndex["serde_with_macros"] = {"doc":"proc-macro extensions for [`serde_with`]","i":[[23,"skip_serializing_none","serde_with_macros","Add `skip_serializing_if` annotations to [`Option`] fields.",null,null]],"p":[]};
searchIndex["sha1"] = {"doc":"An implementation of the [SHA-1][1] cryptographic hash…","i":[[8,"Digest","sha1","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["self"],["b"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["b"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["genericarray",["u8"]],["u8"]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["genericarray",["u8"]],["u8"]]]],[3,"Sha1","","Structure representing the state of a SHA-1 computation",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"new","","",1,[[],["d"]]],[11,"input","","",1,[[["self"],["b"]]]],[11,"chain","","",1,[[["b"]],["d"]]],[11,"result","","",1,[[],[["u8"],["genericarray",["u8"]]]]],[11,"result_reset","","",1,[[["self"]],[["u8"],["genericarray",["u8"]]]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[],["usize"]]],[11,"digest","","",1,[[],[["u8"],["genericarray",["u8"]]]]],[11,"input","","",1,[[["self"]]]],[11,"result_reset","","",1,[[["self"]],["box"]]],[11,"result","","",1,[[["box"]],["box"]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[["self"]],["usize"]]],[11,"box_clone","","",1,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",1,[[["self"]],["sha1"]]],[11,"default","","",1,[[],["self"]]],[11,"write","","",1,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"input","","",1,[[["self"],["asref"]]]],[11,"fixed_result","","",1,[[],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",1,[[["self"]]]]],"p":[[8,"Digest"],[3,"Sha1"]]};
searchIndex["sha2"] = {"doc":"An implementation of the [SHA-2][1] cryptographic hash…","i":[[8,"Digest","sha2","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["self"],["b"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["b"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["u8"],["genericarray",["u8"]]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["u8"],["genericarray",["u8"]]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["u8"],["genericarray",["u8"]]]]],[3,"Sha256","","The SHA-256 hash algorithm with the SHA-256 initial hash…",null,null],[3,"Sha224","","The SHA-256 hash algorithm with the SHA-224 initial hash…",null,null],[3,"Sha512","","The SHA-512 hash algorithm with the SHA-512 initial hash…",null,null],[3,"Sha384","","The SHA-512 hash algorithm with the SHA-384 initial hash…",null,null],[3,"Sha512Trunc224","","The SHA-512 hash algorithm with the SHA-512/224 initial…",null,null],[3,"Sha512Trunc256","","The SHA-512 hash algorithm with the SHA-512/256 initial…",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"new","","",1,[[],["d"]]],[11,"input","","",1,[[["self"],["b"]]]],[11,"chain","","",1,[[["b"]],["d"]]],[11,"result","","",1,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",1,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[],["usize"]]],[11,"digest","","",1,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",1,[[["self"]]]],[11,"result_reset","","",1,[[["self"]],["box"]]],[11,"result","","",1,[[["box"]],["box"]]],[11,"reset","","",1,[[["self"]]]],[11,"output_size","","",1,[[["self"]],["usize"]]],[11,"box_clone","","",1,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"new","","",2,[[],["d"]]],[11,"input","","",2,[[["self"],["b"]]]],[11,"chain","","",2,[[["b"]],["d"]]],[11,"result","","",2,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",2,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",2,[[["self"]]]],[11,"output_size","","",2,[[],["usize"]]],[11,"digest","","",2,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",2,[[["self"]]]],[11,"result_reset","","",2,[[["self"]],["box"]]],[11,"result","","",2,[[["box"]],["box"]]],[11,"reset","","",2,[[["self"]]]],[11,"output_size","","",2,[[["self"]],["usize"]]],[11,"box_clone","","",2,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"new","","",3,[[],["d"]]],[11,"input","","",3,[[["self"],["b"]]]],[11,"chain","","",3,[[["b"]],["d"]]],[11,"result","","",3,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",3,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",3,[[["self"]]]],[11,"output_size","","",3,[[],["usize"]]],[11,"digest","","",3,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",3,[[["self"]]]],[11,"result_reset","","",3,[[["self"]],["box"]]],[11,"result","","",3,[[["box"]],["box"]]],[11,"reset","","",3,[[["self"]]]],[11,"output_size","","",3,[[["self"]],["usize"]]],[11,"box_clone","","",3,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"new","","",4,[[],["d"]]],[11,"input","","",4,[[["self"],["b"]]]],[11,"chain","","",4,[[["b"]],["d"]]],[11,"result","","",4,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",4,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",4,[[["self"]]]],[11,"output_size","","",4,[[],["usize"]]],[11,"digest","","",4,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",4,[[["self"]]]],[11,"result_reset","","",4,[[["self"]],["box"]]],[11,"result","","",4,[[["box"]],["box"]]],[11,"reset","","",4,[[["self"]]]],[11,"output_size","","",4,[[["self"]],["usize"]]],[11,"box_clone","","",4,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"new","","",5,[[],["d"]]],[11,"input","","",5,[[["self"],["b"]]]],[11,"chain","","",5,[[["b"]],["d"]]],[11,"result","","",5,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",5,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",5,[[["self"]]]],[11,"output_size","","",5,[[],["usize"]]],[11,"digest","","",5,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",5,[[["self"]]]],[11,"result_reset","","",5,[[["self"]],["box"]]],[11,"result","","",5,[[["box"]],["box"]]],[11,"reset","","",5,[[["self"]]]],[11,"output_size","","",5,[[["self"]],["usize"]]],[11,"box_clone","","",5,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"new","","",6,[[],["d"]]],[11,"input","","",6,[[["self"],["b"]]]],[11,"chain","","",6,[[["b"]],["d"]]],[11,"result","","",6,[[],[["genericarray",["u8"]],["u8"]]]],[11,"result_reset","","",6,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[11,"reset","","",6,[[["self"]]]],[11,"output_size","","",6,[[],["usize"]]],[11,"digest","","",6,[[],[["genericarray",["u8"]],["u8"]]]],[11,"input","","",6,[[["self"]]]],[11,"result_reset","","",6,[[["self"]],["box"]]],[11,"result","","",6,[[["box"]],["box"]]],[11,"reset","","",6,[[["self"]]]],[11,"output_size","","",6,[[["self"]],["usize"]]],[11,"box_clone","","",6,[[["self"]],[["box",["dyndigest"]],["dyndigest"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",1,[[["self"]],["sha256"]]],[11,"clone","","",2,[[["self"]],["sha224"]]],[11,"clone","","",3,[[["self"]],["sha512"]]],[11,"clone","","",4,[[["self"]],["sha384"]]],[11,"clone","","",6,[[["self"]],["sha512trunc256"]]],[11,"clone","","",5,[[["self"]],["sha512trunc224"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"write","","",2,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",2,[[["self"]],["result"]]],[11,"write","","",1,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","","",4,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",3,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",5,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","","",6,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",6,[[["self"]],["result"]]],[11,"input","","",1,[[["self"],["asref"]]]],[11,"input","","",2,[[["self"],["asref"]]]],[11,"input","","",3,[[["self"],["asref"]]]],[11,"input","","",4,[[["self"],["asref"]]]],[11,"input","","",6,[[["self"],["asref"]]]],[11,"input","","",5,[[["self"],["asref"]]]],[11,"fixed_result","","",1,[[],[["u8"],["genericarray",["u8"]]]]],[11,"fixed_result","","",2,[[],[["u8"],["genericarray",["u8"]]]]],[11,"fixed_result","","",3,[[],[["u8"],["genericarray",["u8"]]]]],[11,"fixed_result","","",4,[[],[["u8"],["genericarray",["u8"]]]]],[11,"fixed_result","","",6,[[],[["u8"],["genericarray",["u8"]]]]],[11,"fixed_result","","",5,[[],[["u8"],["genericarray",["u8"]]]]],[11,"reset","","",1,[[["self"]]]],[11,"reset","","",2,[[["self"]]]],[11,"reset","","",3,[[["self"]]]],[11,"reset","","",4,[[["self"]]]],[11,"reset","","",6,[[["self"]]]],[11,"reset","","",5,[[["self"]]]]],"p":[[8,"Digest"],[3,"Sha256"],[3,"Sha224"],[3,"Sha512"],[3,"Sha384"],[3,"Sha512Trunc224"],[3,"Sha512Trunc256"]]};
searchIndex["slab"] = {"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[3,"Drain","","A draining iterator for `Slab`",null,null],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],[["t"],["option"]]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],[["option"],["t"]]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"drain","","Return a draining iterator that removes all elements from…",0,[[["self"]],["drain"]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",0,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",1,null],[10,"size","","Returns the number of items the array can hold.",1,[[],["usize"]]],[11,"new","","Construct an empty vector",2,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",2,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",2,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",2,[[["usize"],["maybeuninit"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",2,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",2,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",2,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",2,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",2,[[["self"]],["bool"]]],[11,"drain","","Creates a draining iterator that removes the specified…",2,[[["self"],["r"]],["drain"]]],[11,"push","","Append an item to the vector.",2,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",2,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",2,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",2,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",2,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",2,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",2,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",2,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",2,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",2,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",2,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",2,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",2,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",2,[[["intoiterator"],["self"],["usize"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",2,[[],["vec"]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",2,[[],["box"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",2,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["self"],["fnmut"]]]],[11,"dedup","","Removes consecutive duplicate elements.",2,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",2,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",2,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",2,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",2,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",2,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",2,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",2,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",2,[[["usize"]],["self"]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"extend_from_slice","","",2,[[["self"]]]],[11,"deref","","",2,[[["self"]]]],[11,"deref_mut","","",2,[[["self"]]]],[11,"from","","",2,[[],["smallvec"]]],[11,"from","","",2,[[["vec"]],["smallvec"]]],[11,"from","","",2,[[["a"]],["smallvec"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["smallvec"]],["bool"]]],[11,"cmp","","",2,[[["self"],["smallvec"]],["ordering"]]],[11,"partial_cmp","","",2,[[["self"],["smallvec"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"index","","",2,[[["i"],["self"]]]],[11,"index_mut","","",2,[[["self"],["i"]]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"extend","","",2,[[["intoiterator"],["self"]]]],[11,"from_iter","","",2,[[["intoiterator"]],["smallvec"]]],[11,"into_iter","","",2,[[]]],[11,"len","","",4,[[["self"]],["usize"]]],[11,"as_ref","","",2,[[["self"]]]],[11,"as_mut","","",2,[[["self"]]]],[11,"clone","","",2,[[["self"]],["smallvec"]]],[11,"clone","","",3,[[["self"]],["intoiter"]]],[11,"default","","",2,[[],["smallvec"]]],[11,"borrow","","",2,[[["self"]]]],[11,"borrow_mut","","",2,[[["self"]]]]],"p":[[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["spin"] = {"doc":"Synchronization primitives based on spinning","i":[[3,"Mutex","spin","This type provides MUTual EXclusion based on spinning.",null,null],[3,"MutexGuard","","A guard to which the protected data can be accessed",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","A guard from which the protected data can be read",null,null],[3,"RwLockWriteGuard","","A guard to which the protected data can be written",null,null],[3,"RwLockUpgradeableGuard","","A guard from which the protected data can be read, and can…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[11,"new","","Creates a new spinlock wrapping the supplied data.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[],["t"]]],[11,"lock","","Locks the spinlock and returns a guard.",0,[[["self"]],["mutexguard"]]],[11,"force_unlock","","Force unlock the spinlock.",0,[[["self"]]]],[11,"try_lock","","Tries to lock the mutex. If it is already locked, it will…",0,[[["self"]],[["option",["mutexguard"]],["mutexguard"]]]],[11,"new","","Creates a new spinlock wrapping the supplied data.",1,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",1,[[],["t"]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",1,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempt to acquire this lock with shared read access.",1,[[["self"]],[["option",["rwlockreadguard"]],["rwlockreadguard"]]]],[11,"force_read_decrement","","Force decrement the reader count.",1,[[["self"]]]],[11,"force_write_unlock","","Force unlock exclusive write access.",1,[[["self"]]]],[11,"write","","Lock this rwlock with exclusive write access, blocking the…",1,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempt to lock this rwlock with exclusive write access.",1,[[["self"]],[["rwlockwriteguard"],["option",["rwlockwriteguard"]]]]],[11,"upgradeable_read","","Obtain a readable lock guard that can later be upgraded to…",1,[[["self"]],["rwlockupgradeableguard"]]],[11,"try_upgradeable_read","","Tries to obtain an upgradeable lock guard.",1,[[["self"]],[["option",["rwlockupgradeableguard"]],["rwlockupgradeableguard"]]]],[11,"upgrade","","Upgrades an upgradeable lock guard to a writable lock guard.",2,[[],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to upgrade an upgradeable lock guard to a writable…",2,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"downgrade","","Downgrades the upgradeable lock guard to a readable,…",2,[[],["rwlockreadguard"]]],[11,"downgrade","","Downgrades the writable lock guard to a readable, shared…",3,[[],["rwlockreadguard"]]],[18,"INIT","","Initialization constant of `Once`.",4,null],[11,"new","","Creates a new `Once` value.",4,[[],["once"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",4,[[["self"],["f"]],["t"]]],[11,"try","","Returns a pointer iff the `Once` was previously initialized",4,[[["self"]],[["t"],["option"]]]],[11,"wait","","Like try, but will spin if the `Once` is in the process of…",4,[[["self"]],[["t"],["option"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",6,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref_mut","","",5,[[["self"]],["t"]]],[11,"deref_mut","","",3,[[["self"]],["t"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"drop","","The dropping of the MutexGuard will release the lock it…",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",1,[[],["rwlock"]]]],"p":[[3,"Mutex"],[3,"RwLock"],[3,"RwLockUpgradeableGuard"],[3,"RwLockWriteGuard"],[3,"Once"],[3,"MutexGuard"],[3,"RwLockReadGuard"]]};
searchIndex["stringprep"] = {"doc":"An implementation of the \"stringprep\" algorithm defined in…","i":[[3,"Error","stringprep","An error performing the stringprep algorithm.",null,null],[5,"saslprep","","Prepares a string with the SASLprep profile of the…",null,[[["str"]],[["result",["cow","error"]],["cow",["str"]],["error"]]]],[5,"nameprep","","Prepares a string with the Nameprep profile of the…",null,[[["str"]],[["result",["cow","error"]],["cow",["str"]],["error"]]]],[5,"nodeprep","","Prepares a string with the Nodeprep profile of the…",null,[[["str"]],[["result",["cow","error"]],["cow",["str"]],["error"]]]],[5,"resourceprep","","Prepares a string with the Resourceprep profile of the…",null,[[["str"]],[["result",["cow","error"]],["cow",["str"]],["error"]]]],[0,"tables","","Character Tables",null,null],[3,"CaseFoldForNfkc","stringprep::tables","The iterator returned by `case_fold_for_nfkc`.",null,null],[5,"unassigned_code_point","","A.1 Unassigned code points in Unicode 3.2",null,[[["char"]],["bool"]]],[5,"commonly_mapped_to_nothing","","B.1 Commonly mapped to nothing",null,[[["char"]],["bool"]]],[5,"case_fold_for_nfkc","","B.2 Mapping for case-folding used with NFKC.",null,[[["char"]],["casefoldfornfkc"]]],[5,"ascii_space_character","","C.1.1 ASCII space characters",null,[[["char"]],["bool"]]],[5,"non_ascii_space_character","","C.1.2 Non-ASCII space characters",null,[[["char"]],["bool"]]],[5,"ascii_control_character","","C.2.1 ASCII control characters",null,[[["char"]],["bool"]]],[5,"non_ascii_control_character","","C.2.2 Non-ASCII control characters",null,[[["char"]],["bool"]]],[5,"private_use","","C.3 Private use",null,[[["char"]],["bool"]]],[5,"non_character_code_point","","C.4 Non-character code points",null,[[["char"]],["bool"]]],[5,"surrogate_code","","C.5 Surrogate codes",null,[[["char"]],["bool"]]],[5,"inappropriate_for_plain_text","","C.6 Inappropriate for plain text",null,[[["char"]],["bool"]]],[5,"inappropriate_for_canonical_representation","","C.7 Inappropriate for canonical representation",null,[[["char"]],["bool"]]],[5,"change_display_properties_or_deprecated","","C.8 Change display properties or are deprecated",null,[[["char"]],["bool"]]],[5,"tagging_character","","C.9 Tagging characters",null,[[["char"]],["bool"]]],[5,"bidi_r_or_al","","D.1 Characters with bidirectional property \"R\" or \"AL\"",null,[[["char"]],["bool"]]],[5,"bidi_l","","D.2 Characters with bidirectional property \"L\"",null,[[["char"]],["bool"]]],[11,"from","stringprep","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","stringprep::tables","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"nfd","","",1,[[],["decompositions"]]],[11,"nfkd","","",1,[[],["decompositions"]]],[11,"nfc","","",1,[[],["recompositions"]]],[11,"nfkc","","",1,[[],["recompositions"]]],[11,"stream_safe","","",1,[[],["streamsafe"]]],[11,"next","","",1,[[["self"]],[["option",["char"]],["char"]]]],[11,"fmt","stringprep","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[3,"Error"],[3,"CaseFoldForNfkc"]]};
searchIndex["subtle"] = {"doc":"Note that docs will only build on nightly Rust until RFC…","i":[[3,"Choice","subtle","The `Choice` struct represents a choice for use in…",null,null],[3,"CtOption","","The `CtOption<T>` type represents an optional value…",null,null],[8,"ConstantTimeEq","","An `Eq`-like trait that produces a `Choice` instead of a…",null,null],[10,"ct_eq","","Determine if two items are equal.",0,[[["self"]],["choice"]]],[8,"ConditionallySelectable","","A type which can be conditionally selected in constant time.",null,null],[10,"conditional_select","","Select `a` or `b` according to `choice`.",1,[[["choice"],["self"]],["self"]]],[11,"conditional_assign","","Conditionally assign `other` to `self`, according to…",1,[[["self"],["self"],["choice"]]]],[11,"conditional_swap","","Conditionally swap `self` and `other` if `choice == 1`;…",1,[[["self"],["choice"]]]],[8,"ConditionallyNegatable","","A type which can be conditionally negated in constant time.",null,null],[10,"conditional_negate","","Negate `self` if `choice == Choice(1)`; otherwise, leave…",2,[[["self"],["choice"]]]],[11,"unwrap_u8","","Unwrap the `Choice` wrapper to reveal the underlying `u8`.",3,[[["self"]],["u8"]]],[11,"new","","This method is used to construct a new `CtOption<T>` and…",4,[[["choice"],["t"]],["ctoption"]]],[11,"unwrap","","This returns the underlying value but panics if it is not…",4,[[],["t"]]],[11,"unwrap_or","","This returns the underlying value if it is `Some` or the…",4,[[["t"]],["t"]]],[11,"unwrap_or_else","","This returns the underlying value if it is `Some` or the…",4,[[["f"]],["t"]]],[11,"is_some","","Returns a true `Choice` if this value is `Some`.",4,[[["self"]],["choice"]]],[11,"is_none","","Returns a true `Choice` if this value is `None`.",4,[[["self"]],["choice"]]],[11,"map","","Returns a `None` value if the option is `None`, otherwise…",4,[[["f"]],["ctoption"]]],[11,"and_then","","Returns a `None` value if the option is `None`, otherwise…",4,[[["f"]],["ctoption"]]],[11,"or_else","","Returns `self` if it contains a value, and otherwise…",4,[[["f"]],["ctoption"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"ct_eq","","Two `CtOption<T>`s are equal if they are both `Some` and…",4,[[["ctoption"],["self"]],["choice"]]],[11,"conditional_select","","",3,[[["choice"],["self"]],["self"]]],[11,"conditional_select","","",4,[[["choice"],["self"]],["self"]]],[11,"from","","",3,[[["u8"]],["choice"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"not","","",3,[[],["choice"]]],[11,"bitand","","",3,[[["choice"]],["choice"]]],[11,"bitor","","",3,[[["choice"]],["choice"]]],[11,"bitxor","","",3,[[["choice"]],["choice"]]],[11,"bitand_assign","","",3,[[["self"],["choice"]]]],[11,"bitor_assign","","",3,[[["self"],["choice"]]]],[11,"bitxor_assign","","",3,[[["self"],["choice"]]]],[11,"clone","","",3,[[["self"]],["choice"]]],[11,"clone","","",4,[[["self"]],["ctoption"]]]],"p":[[8,"ConstantTimeEq"],[8,"ConditionallySelectable"],[8,"ConditionallyNegatable"],[3,"Choice"],[3,"CtOption"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",10,null],[12,"bracket_token","","",10,null],[12,"elems","","",10,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",11,null],[12,"left","","",11,null],[12,"eq_token","","",11,null],[12,"right","","",11,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",12,null],[12,"left","","",12,null],[12,"op","","",12,null],[12,"right","","",12,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",13,null],[12,"async_token","","",13,null],[12,"capture","","",13,null],[12,"block","","",13,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",14,null],[12,"left","","",14,null],[12,"op","","",14,null],[12,"right","","",14,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",15,null],[12,"label","","",15,null],[12,"block","","",15,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",16,null],[12,"box_token","","",16,null],[12,"expr","","",16,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",17,null],[12,"break_token","","",17,null],[12,"label","","",17,null],[12,"expr","","",17,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",18,null],[12,"func","","",18,null],[12,"paren_token","","",18,null],[12,"args","","",18,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",19,null],[12,"expr","","",19,null],[12,"as_token","","",19,null],[12,"ty","","",19,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",20,null],[12,"asyncness","","",20,null],[12,"movability","","",20,null],[12,"capture","","",20,null],[12,"or1_token","","",20,null],[12,"inputs","","",20,null],[12,"or2_token","","",20,null],[12,"output","","",20,null],[12,"body","","",20,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",21,null],[12,"continue_token","","",21,null],[12,"label","","",21,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",22,null],[12,"base","","",22,null],[12,"dot_token","","",22,null],[12,"member","","",22,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",23,null],[12,"label","","",23,null],[12,"for_token","","",23,null],[12,"pat","","",23,null],[12,"in_token","","",23,null],[12,"expr","","",23,null],[12,"body","","",23,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",24,null],[12,"group_token","","",24,null],[12,"expr","","",24,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",25,null],[12,"if_token","","",25,null],[12,"cond","","",25,null],[12,"then_branch","","",25,null],[12,"else_branch","","",25,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[12,"attrs","","",26,null],[12,"place","","",26,null],[12,"arrow_token","","",26,null],[12,"value","","",26,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",27,null],[12,"expr","","",27,null],[12,"bracket_token","","",27,null],[12,"index","","",27,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",28,null],[12,"let_token","","",28,null],[12,"pats","","",28,null],[12,"eq_token","","",28,null],[12,"expr","","",28,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",29,null],[12,"lit","","",29,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",30,null],[12,"label","","",30,null],[12,"loop_token","","",30,null],[12,"body","","",30,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",31,null],[12,"mac","","",31,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",32,null],[12,"match_token","","",32,null],[12,"expr","","",32,null],[12,"brace_token","","",32,null],[12,"arms","","",32,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",33,null],[12,"receiver","","",33,null],[12,"dot_token","","",33,null],[12,"method","","",33,null],[12,"turbofish","","",33,null],[12,"paren_token","","",33,null],[12,"args","","",33,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",34,null],[12,"paren_token","","",34,null],[12,"expr","","",34,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",35,null],[12,"qself","","",35,null],[12,"path","","",35,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",36,null],[12,"from","","",36,null],[12,"limits","","",36,null],[12,"to","","",36,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",37,null],[12,"and_token","","",37,null],[12,"mutability","","",37,null],[12,"expr","","",37,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",38,null],[12,"bracket_token","","",38,null],[12,"expr","","",38,null],[12,"semi_token","","",38,null],[12,"len","","",38,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",39,null],[12,"return_token","","",39,null],[12,"expr","","",39,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",40,null],[12,"path","","",40,null],[12,"brace_token","","",40,null],[12,"fields","","",40,null],[12,"dot2_token","","",40,null],[12,"rest","","",40,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",41,null],[12,"expr","","",41,null],[12,"question_token","","",41,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",42,null],[12,"try_token","","",42,null],[12,"block","","",42,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",43,null],[12,"paren_token","","",43,null],[12,"elems","","",43,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",44,null],[12,"expr","","",44,null],[12,"colon_token","","",44,null],[12,"ty","","",44,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",45,null],[12,"op","","",45,null],[12,"expr","","",45,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",46,null],[12,"unsafe_token","","",46,null],[12,"block","","",46,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",47,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",48,null],[12,"label","","",48,null],[12,"while_token","","",48,null],[12,"cond","","",48,null],[12,"body","","",48,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",49,null],[12,"yield_token","","",49,null],[12,"expr","","",49,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",50,null],[12,"span","","",50,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",51,null],[12,"leading_vert","","",51,null],[12,"pats","","",51,null],[12,"guard","","",51,null],[12,"fat_arrow_token","","",51,null],[12,"body","","",51,null],[12,"comma","","",51,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",52,null],[12,"stmts","","Statements in a block",52,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",53,null],[12,"member","","",53,null],[12,"colon_token","","",53,null],[12,"pat","","",53,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",54,null],[12,"member","","Name or index of the field.",54,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",54,null],[12,"expr","","Value of the field.",54,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",55,null],[12,"colon_token","","",55,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",56,null],[12,"let_token","","",56,null],[12,"pats","","",56,null],[12,"ty","","",56,null],[12,"init","","",56,null],[12,"semi_token","","",56,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",57,null],[12,"lt_token","","",57,null],[12,"args","","",57,null],[12,"gt_token","","",57,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"box_token","","",58,null],[12,"pat","","",58,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"by_ref","","",59,null],[12,"mutability","","",59,null],[12,"ident","","",59,null],[12,"subpat","","",59,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"expr","","",60,null],[3,"PatMacro","","A macro in expression position.",null,null],[12,"mac","","",61,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"qself","","",62,null],[12,"path","","",62,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"lo","","",63,null],[12,"limits","","",63,null],[12,"hi","","",63,null],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",null,null],[12,"and_token","","",64,null],[12,"mutability","","",64,null],[12,"pat","","",64,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",null,null],[12,"bracket_token","","",65,null],[12,"front","","",65,null],[12,"middle","","",65,null],[12,"dot2_token","","",65,null],[12,"comma_token","","",65,null],[12,"back","","",65,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"path","","",66,null],[12,"brace_token","","",66,null],[12,"fields","","",66,null],[12,"dot2_token","","",66,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"paren_token","","",67,null],[12,"front","","",67,null],[12,"dot2_token","","",67,null],[12,"comma_token","","",67,null],[12,"back","","",67,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"path","","",68,null],[12,"pat","","",68,null],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",null,null],[12,"tts","","",69,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"underscore_token","","",70,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",71,null],[12,"lt_token","","",71,null],[12,"lifetimes","","",71,null],[12,"gt_token","","",71,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"default","","",72,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",73,null],[12,"params","","",73,null],[12,"gt_token","","",73,null],[12,"where_clause","","",73,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",74,null],[12,"lifetime","","",74,null],[12,"colon_token","","",74,null],[12,"bounds","","",74,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",75,null],[12,"eq_token","","",75,null],[12,"rhs_ty","","",75,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",76,null],[12,"colon_token","","",76,null],[12,"bounds","","",76,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",77,null],[12,"bounded_ty","","The type being bounded",77,null],[12,"colon_token","","",77,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",78,null],[12,"modifier","","",78,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",79,null],[12,"ident","","",79,null],[12,"colon_token","","",79,null],[12,"bounds","","",79,null],[12,"eq_token","","",79,null],[12,"default","","",79,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",80,null],[12,"predicates","","",80,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ArgCaptured","","An explicitly typed pattern captured by a function…",null,null],[12,"pat","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[3,"ArgSelf","","Self captured by value in a function signature: `self` or…",null,null],[12,"mutability","","",82,null],[12,"self_token","","",82,null],[3,"ArgSelfRef","","Self captured by reference in a function signature:…",null,null],[12,"and_token","","",83,null],[12,"lifetime","","",83,null],[12,"mutability","","",83,null],[12,"self_token","","",83,null],[3,"FnDecl","","Header of a function declaration, without including the…",null,null],[12,"fn_token","","",84,null],[12,"generics","","",84,null],[12,"paren_token","","",84,null],[12,"inputs","","",84,null],[12,"variadic","","",84,null],[12,"output","","",84,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"ident","","",85,null],[12,"decl","","",85,null],[12,"semi_token","","",85,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",86,null],[12,"mac","","",86,null],[12,"semi_token","","",86,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"static_token","","",87,null],[12,"mutability","","",87,null],[12,"ident","","",87,null],[12,"colon_token","","",87,null],[12,"ty","","",87,null],[12,"semi_token","","",87,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",88,null],[12,"vis","","",88,null],[12,"type_token","","",88,null],[12,"ident","","",88,null],[12,"semi_token","","",88,null],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",null,null],[12,"tts","","",89,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",90,null],[12,"vis","","",90,null],[12,"defaultness","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"eq_token","","",90,null],[12,"expr","","",90,null],[12,"semi_token","","",90,null],[3,"ImplItemExistential","","An existential type within an impl block.",null,null],[12,"attrs","","",91,null],[12,"existential_token","","",91,null],[12,"type_token","","",91,null],[12,"ident","","",91,null],[12,"generics","","",91,null],[12,"colon_token","","",91,null],[12,"bounds","","",91,null],[12,"semi_token","","",91,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",92,null],[12,"mac","","",92,null],[12,"semi_token","","",92,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",93,null],[12,"vis","","",93,null],[12,"defaultness","","",93,null],[12,"sig","","",93,null],[12,"block","","",93,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",94,null],[12,"vis","","",94,null],[12,"defaultness","","",94,null],[12,"type_token","","",94,null],[12,"ident","","",94,null],[12,"generics","","",94,null],[12,"eq_token","","",94,null],[12,"ty","","",94,null],[12,"semi_token","","",94,null],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",null,null],[12,"tts","","",95,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",96,null],[12,"vis","","",96,null],[12,"const_token","","",96,null],[12,"ident","","",96,null],[12,"colon_token","","",96,null],[12,"ty","","",96,null],[12,"eq_token","","",96,null],[12,"expr","","",96,null],[12,"semi_token","","",96,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",null,null],[12,"attrs","","",97,null],[12,"vis","","",97,null],[12,"enum_token","","",97,null],[12,"ident","","",97,null],[12,"generics","","",97,null],[12,"brace_token","","",97,null],[12,"variants","","",97,null],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item…",null,null],[12,"attrs","","",98,null],[12,"vis","","",98,null],[12,"existential_token","","",98,null],[12,"type_token","","",98,null],[12,"ident","","",98,null],[12,"generics","","",98,null],[12,"colon_token","","",98,null],[12,"bounds","","",98,null],[12,"semi_token","","",98,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",99,null],[12,"vis","","",99,null],[12,"extern_token","","",99,null],[12,"crate_token","","",99,null],[12,"ident","","",99,null],[12,"rename","","",99,null],[12,"semi_token","","",99,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",100,null],[12,"vis","","",100,null],[12,"constness","","",100,null],[12,"asyncness","","",100,null],[12,"unsafety","","",100,null],[12,"abi","","",100,null],[12,"ident","","",100,null],[12,"decl","","",100,null],[12,"block","","",100,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",101,null],[12,"abi","","",101,null],[12,"brace_token","","",101,null],[12,"items","","",101,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",102,null],[12,"defaultness","","",102,null],[12,"unsafety","","",102,null],[12,"impl_token","","",102,null],[12,"generics","","",102,null],[12,"trait_","","Trait this impl implements.",102,null],[12,"self_ty","","The Self type of the impl.",102,null],[12,"brace_token","","",102,null],[12,"items","","",102,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",103,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",103,null],[12,"mac","","",103,null],[12,"semi_token","","",103,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",104,null],[12,"vis","","",104,null],[12,"macro_token","","",104,null],[12,"ident","","",104,null],[12,"paren_token","","",104,null],[12,"args","","",104,null],[12,"brace_token","","",104,null],[12,"body","","",104,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",105,null],[12,"vis","","",105,null],[12,"mod_token","","",105,null],[12,"ident","","",105,null],[12,"content","","",105,null],[12,"semi","","",105,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",106,null],[12,"vis","","",106,null],[12,"static_token","","",106,null],[12,"mutability","","",106,null],[12,"ident","","",106,null],[12,"colon_token","","",106,null],[12,"ty","","",106,null],[12,"eq_token","","",106,null],[12,"expr","","",106,null],[12,"semi_token","","",106,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",107,null],[12,"vis","","",107,null],[12,"struct_token","","",107,null],[12,"ident","","",107,null],[12,"generics","","",107,null],[12,"fields","","",107,null],[12,"semi_token","","",107,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",108,null],[12,"vis","","",108,null],[12,"unsafety","","",108,null],[12,"auto_token","","",108,null],[12,"trait_token","","",108,null],[12,"ident","","",108,null],[12,"generics","","",108,null],[12,"colon_token","","",108,null],[12,"supertraits","","",108,null],[12,"brace_token","","",108,null],[12,"items","","",108,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",109,null],[12,"vis","","",109,null],[12,"trait_token","","",109,null],[12,"ident","","",109,null],[12,"generics","","",109,null],[12,"eq_token","","",109,null],[12,"bounds","","",109,null],[12,"semi_token","","",109,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",110,null],[12,"vis","","",110,null],[12,"type_token","","",110,null],[12,"ident","","",110,null],[12,"generics","","",110,null],[12,"eq_token","","",110,null],[12,"ty","","",110,null],[12,"semi_token","","",110,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",111,null],[12,"vis","","",111,null],[12,"union_token","","",111,null],[12,"ident","","",111,null],[12,"generics","","",111,null],[12,"fields","","",111,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",112,null],[12,"vis","","",112,null],[12,"use_token","","",112,null],[12,"leading_colon","","",112,null],[12,"tree","","",112,null],[12,"semi_token","","",112,null],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",null,null],[12,"tts","","",113,null],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",114,null],[12,"asyncness","","",114,null],[12,"unsafety","","",114,null],[12,"abi","","",114,null],[12,"ident","","",114,null],[12,"decl","","",114,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",115,null],[12,"const_token","","",115,null],[12,"ident","","",115,null],[12,"colon_token","","",115,null],[12,"ty","","",115,null],[12,"default","","",115,null],[12,"semi_token","","",115,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",116,null],[12,"mac","","",116,null],[12,"semi_token","","",116,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",117,null],[12,"sig","","",117,null],[12,"default","","",117,null],[12,"semi_token","","",117,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",118,null],[12,"type_token","","",118,null],[12,"ident","","",118,null],[12,"generics","","",118,null],[12,"colon_token","","",118,null],[12,"bounds","","",118,null],[12,"default","","",118,null],[12,"semi_token","","",118,null],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by…",null,null],[12,"tts","","",119,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",120,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",121,null],[12,"items","","",121,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",122,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",123,null],[12,"colon2_token","","",123,null],[12,"tree","","",123,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",124,null],[12,"as_token","","",124,null],[12,"rename","","",124,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",125,null],[12,"attrs","","",125,null],[12,"items","","",125,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",126,null],[12,"ident","","",126,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",127,null],[12,"span","","",127,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",null,null],[12,"token","","",128,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",129,null],[12,"bang_token","","",129,null],[12,"delimiter","","",129,null],[12,"tts","","",129,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",130,null],[12,"brace_token","","",130,null],[12,"variants","","",130,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",131,null],[12,"fields","","",131,null],[12,"semi_token","","",131,null],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",132,null],[12,"fields","","",132,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",133,null],[12,"vis","","Visibility of the struct or enum.",133,null],[12,"ident","","Name of the struct or enum.",133,null],[12,"generics","","Generics required to complete the definition.",133,null],[12,"data","","Data within the struct or enum.",133,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",134,null],[12,"name","","",134,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"name","","",135,null],[12,"ty","","",135,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",136,null],[12,"elem","","",136,null],[12,"semi_token","","",136,null],[12,"len","","",136,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",137,null],[12,"unsafety","","",137,null],[12,"abi","","",137,null],[12,"fn_token","","",137,null],[12,"paren_token","","",137,null],[12,"inputs","","",137,null],[12,"variadic","","",137,null],[12,"output","","",137,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",138,null],[12,"elem","","",138,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",139,null],[12,"bounds","","",139,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",140,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",141,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",142,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",143,null],[12,"elem","","",143,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",144,null],[12,"path","","",144,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",145,null],[12,"const_token","","",145,null],[12,"mutability","","",145,null],[12,"elem","","",145,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",146,null],[12,"lifetime","","",146,null],[12,"mutability","","",146,null],[12,"elem","","",146,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",147,null],[12,"elem","","",147,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",148,null],[12,"bounds","","",148,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",149,null],[12,"elems","","",149,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",150,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",151,null],[12,"lt_token","","",151,null],[12,"args","","",151,null],[12,"gt_token","","",151,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",152,null],[12,"eq_token","","",152,null],[12,"ty","","",152,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",153,null],[12,"colon_token","","",153,null],[12,"bounds","","",153,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",154,null],[12,"inputs","","`(A, B)`",154,null],[12,"output","","`C`",154,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",155,null],[12,"segments","","",155,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",156,null],[12,"arguments","","",156,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",157,null],[12,"ty","","",157,null],[12,"position","","",157,null],[12,"as_token","","",157,null],[12,"gt_token","","",157,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",158,null],[13,"Inner","","",158,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",159,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",159,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",159,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",160,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",160,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",161,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",161,null],[13,"Unit","","Unit struct or unit variant such as `None`.",161,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",162,null],[13,"Crate","","A crate-level visibility: `crate`.",162,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",162,null],[13,"Inherited","","An inherited visibility, which usually means private.",162,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",163,null],[13,"InPlace","","A placement expression: `place <- value`.",163,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",163,null],[13,"Call","","A function call expression: `invoke(a, b)`.",163,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",163,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",163,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",163,null],[13,"Unary","","A unary operation: `!x`, `*x`.",163,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",163,null],[13,"Cast","","A cast expression: `foo as f64`.",163,null],[13,"Type","","A type ascription expression: `foo: f64`.",163,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",163,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",163,null],[13,"While","","A while loop: `while expr { ... }`.",163,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",163,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",163,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",163,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",163,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",163,null],[13,"Block","","A blocked scope: `{ ... }`.",163,null],[13,"Assign","","An assignment expression: `a = compute()`.",163,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",163,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",163,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",163,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",163,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",163,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",163,null],[13,"Break","","A `break`, with an optional label to break and an optional…",163,null],[13,"Continue","","A `continue`, with an optional label.",163,null],[13,"Return","","A `return`, with an optional value to be returned.",163,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",163,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",163,null],[13,"Repeat","","An array literal constructed from one repeated element:…",163,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",163,null],[13,"Group","","An expression contained within invisible delimiters.",163,null],[13,"Try","","A try-expression: `expr?`.",163,null],[13,"Async","","An async block: `async { ... }`.",163,null],[13,"TryBlock","","A try block: `try { ... }`.",163,null],[13,"Yield","","A yield expression: `yield expr`.",163,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",163,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",164,null],[13,"Unnamed","","An unnamed field like `self.0`.",164,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",165,null],[13,"Const","","A const expression. Must be inside of a block.",165,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Wild","","A pattern that matches any value: `_`.",166,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",166,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",166,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",166,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",166,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",166,null],[13,"Box","","A box pattern: `box v`.",166,null],[13,"Ref","","A reference pattern: `&mut (first, second)`.",166,null],[13,"Lit","","A literal pattern: `0`.",166,null],[13,"Range","","A range pattern: `1..=2`.",166,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",166,null],[13,"Macro","","A macro in expression position.",166,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",166,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",167,null],[13,"Closed","","Inclusive at the beginning and end.",167,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",168,null],[13,"Item","","An item definition.",168,null],[13,"Expr","","Expr without trailing semicolon.",168,null],[13,"Semi","","Expression with trailing semicolon.",168,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",169,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",169,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",169,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",170,null],[13,"Maybe","","",170,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",171,null],[13,"Lifetime","","",171,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",172,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",172,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",172,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"SelfRef","","Self captured by reference in a function signature:…",173,null],[13,"SelfValue","","Self captured by value in a function signature: `self` or…",173,null],[13,"Captured","","An explicitly typed pattern captured by a function…",173,null],[13,"Inferred","","A pattern whose type is inferred captured by a function…",173,null],[13,"Ignored","","A type not bound to any pattern in a function signature.",173,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",174,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",174,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",174,null],[13,"Macro","","A macro invocation within an extern block.",174,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",174,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",175,null],[13,"Method","","A method within an impl block.",175,null],[13,"Type","","An associated type within an impl block.",175,null],[13,"Existential","","An existential type within an impl block.",175,null],[13,"Macro","","A macro invocation within an impl block.",175,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",175,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",176,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",176,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",176,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",176,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",176,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",176,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",176,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",176,null],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item…",176,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",176,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",176,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",176,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",176,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",176,null],[13,"Impl","","An impl block providing trait or associated items:…",176,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",176,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",176,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",176,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",177,null],[13,"Method","","A trait method within the definition of a trait.",177,null],[13,"Type","","An associated type within the definition of a trait.",177,null],[13,"Macro","","A macro invocation within the definition of a trait.",177,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",177,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",178,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",178,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",178,null],[13,"Glob","","A glob import in a `use` item: `*`.",178,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",178,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",null,null],[13,"F32","","",179,null],[13,"F64","","",179,null],[13,"None","","",179,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",null,null],[13,"I8","","",180,null],[13,"I16","","",180,null],[13,"I32","","",180,null],[13,"I64","","",180,null],[13,"I128","","",180,null],[13,"Isize","","",180,null],[13,"U8","","",180,null],[13,"U16","","",180,null],[13,"U32","","",180,null],[13,"U64","","",180,null],[13,"U128","","",180,null],[13,"Usize","","",180,null],[13,"None","","",180,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",181,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",181,null],[13,"Byte","","A byte literal: `b'f'`.",181,null],[13,"Char","","A character literal: `'a'`.",181,null],[13,"Int","","An integer literal: `1` or `1u16`.",181,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",181,null],[13,"Bool","","A boolean literal: `true` or `false`.",181,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",181,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",182,null],[13,"Raw","","A raw string like `r##\"data\"##`.",182,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",183,null],[13,"Brace","","",183,null],[13,"Bracket","","",183,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",184,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",184,null],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",184,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",185,null],[13,"Sub","","The `-` operator (subtraction)",185,null],[13,"Mul","","The `*` operator (multiplication)",185,null],[13,"Div","","The `/` operator (division)",185,null],[13,"Rem","","The `%` operator (modulus)",185,null],[13,"And","","The `&&` operator (logical and)",185,null],[13,"Or","","The `||` operator (logical or)",185,null],[13,"BitXor","","The `^` operator (bitwise xor)",185,null],[13,"BitAnd","","The `&` operator (bitwise and)",185,null],[13,"BitOr","","The `|` operator (bitwise or)",185,null],[13,"Shl","","The `<<` operator (shift left)",185,null],[13,"Shr","","The `>>` operator (shift right)",185,null],[13,"Eq","","The `==` operator (equality)",185,null],[13,"Lt","","The `<` operator (less than)",185,null],[13,"Le","","The `<=` operator (less than or equal to)",185,null],[13,"Ne","","The `!=` operator (not equal to)",185,null],[13,"Ge","","The `>=` operator (greater than or equal to)",185,null],[13,"Gt","","The `>` operator (greater than)",185,null],[13,"AddEq","","The `+=` operator",185,null],[13,"SubEq","","The `-=` operator",185,null],[13,"MulEq","","The `*=` operator",185,null],[13,"DivEq","","The `/=` operator",185,null],[13,"RemEq","","The `%=` operator",185,null],[13,"BitXorEq","","The `^=` operator",185,null],[13,"BitAndEq","","The `&=` operator",185,null],[13,"BitOrEq","","The `|=` operator",185,null],[13,"ShlEq","","The `<<=` operator",185,null],[13,"ShrEq","","The `>>=` operator",185,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",186,null],[13,"Not","","The `!` operator for logical inversion",186,null],[13,"Neg","","The `-` operator for negation",186,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",null,null],[13,"Named","","Argument given a name.",187,null],[13,"Wild","","Argument not given a name, matched with `_`.",187,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",188,null],[13,"Type","","A particular type is returned.",188,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",189,null],[13,"Array","","A fixed size array type: `[T; n]`.",189,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",189,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",189,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",189,null],[13,"Never","","The never type: `!`.",189,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",189,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",189,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",189,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",189,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",189,null],[13,"Group","","A type contained within invisible delimiters.",189,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",189,null],[13,"Macro","","A macro in the type position.",189,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",189,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",190,null],[13,"Type","","A type argument.",190,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",190,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",190,null],[13,"Const","","A const expression. Must be inside of a block.",190,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",191,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",191,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",191,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["file"],["result",["file"]]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",192,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",193,null],[3,"As","","`as`",null,null],[12,"span","","",194,null],[3,"Async","","`async`",null,null],[12,"span","","",195,null],[3,"Auto","","`auto`",null,null],[12,"span","","",196,null],[3,"Become","","`become`",null,null],[12,"span","","",197,null],[3,"Box","","`box`",null,null],[12,"span","","",198,null],[3,"Break","","`break`",null,null],[12,"span","","",199,null],[3,"Const","","`const`",null,null],[12,"span","","",200,null],[3,"Continue","","`continue`",null,null],[12,"span","","",201,null],[3,"Crate","","`crate`",null,null],[12,"span","","",202,null],[3,"Default","","`default`",null,null],[12,"span","","",203,null],[3,"Do","","`do`",null,null],[12,"span","","",204,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",205,null],[3,"Else","","`else`",null,null],[12,"span","","",206,null],[3,"Enum","","`enum`",null,null],[12,"span","","",207,null],[3,"Existential","","`existential`",null,null],[12,"span","","",208,null],[3,"Extern","","`extern`",null,null],[12,"span","","",209,null],[3,"Final","","`final`",null,null],[12,"span","","",210,null],[3,"Fn","","`fn`",null,null],[12,"span","","",211,null],[3,"For","","`for`",null,null],[12,"span","","",212,null],[3,"If","","`if`",null,null],[12,"span","","",213,null],[3,"Impl","","`impl`",null,null],[12,"span","","",214,null],[3,"In","","`in`",null,null],[12,"span","","",215,null],[3,"Let","","`let`",null,null],[12,"span","","",216,null],[3,"Loop","","`loop`",null,null],[12,"span","","",217,null],[3,"Macro","","`macro`",null,null],[12,"span","","",218,null],[3,"Match","","`match`",null,null],[12,"span","","",219,null],[3,"Mod","","`mod`",null,null],[12,"span","","",220,null],[3,"Move","","`move`",null,null],[12,"span","","",221,null],[3,"Mut","","`mut`",null,null],[12,"span","","",222,null],[3,"Override","","`override`",null,null],[12,"span","","",223,null],[3,"Priv","","`priv`",null,null],[12,"span","","",224,null],[3,"Pub","","`pub`",null,null],[12,"span","","",225,null],[3,"Ref","","`ref`",null,null],[12,"span","","",226,null],[3,"Return","","`return`",null,null],[12,"span","","",227,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",228,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",229,null],[3,"Static","","`static`",null,null],[12,"span","","",230,null],[3,"Struct","","`struct`",null,null],[12,"span","","",231,null],[3,"Super","","`super`",null,null],[12,"span","","",232,null],[3,"Trait","","`trait`",null,null],[12,"span","","",233,null],[3,"Try","","`try`",null,null],[12,"span","","",234,null],[3,"Type","","`type`",null,null],[12,"span","","",235,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",236,null],[3,"Union","","`union`",null,null],[12,"span","","",237,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",238,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",239,null],[3,"Use","","`use`",null,null],[12,"span","","",240,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",241,null],[3,"Where","","`where`",null,null],[12,"span","","",242,null],[3,"While","","`while`",null,null],[12,"span","","",243,null],[3,"Yield","","`yield`",null,null],[12,"span","","",244,null],[3,"Add","","`+`",null,null],[12,"spans","","",245,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",246,null],[3,"And","","`&`",null,null],[12,"spans","","",247,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",248,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",249,null],[3,"At","","`@`",null,null],[12,"spans","","",250,null],[3,"Bang","","`!`",null,null],[12,"spans","","",251,null],[3,"Caret","","`^`",null,null],[12,"spans","","",252,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",253,null],[3,"Colon","","`:`",null,null],[12,"spans","","",254,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",255,null],[3,"Comma","","`,`",null,null],[12,"spans","","",256,null],[3,"Div","","`/`",null,null],[12,"spans","","",257,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",258,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",259,null],[3,"Dot","","`.`",null,null],[12,"spans","","",260,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",261,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",262,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",263,null],[3,"Eq","","`=`",null,null],[12,"spans","","",264,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",265,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",266,null],[3,"Gt","","`>`",null,null],[12,"spans","","",267,null],[3,"Le","","`<=`",null,null],[12,"spans","","",268,null],[3,"Lt","","`<`",null,null],[12,"spans","","",269,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",270,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",271,null],[3,"Or","","`|`",null,null],[12,"spans","","",272,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",273,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",274,null],[3,"Pound","","`#`",null,null],[12,"spans","","",275,null],[3,"Question","","`?`",null,null],[12,"spans","","",276,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",277,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",278,null],[3,"Rem","","`%`",null,null],[12,"spans","","",279,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",280,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",281,null],[3,"Semi","","`;`",null,null],[12,"spans","","",282,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",283,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",284,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",285,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",286,null],[3,"Star","","`*`",null,null],[12,"spans","","",287,null],[3,"Sub","","`-`",null,null],[12,"spans","","",288,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",289,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",290,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",291,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",292,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",293,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",294,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",291,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",292,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",293,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",294,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"name","","Returns the identifier that begins this structured meta…",159,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",161,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",161,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",52,[[["parsestream"]],[["vec",["stmt"]],["result",["vec"]]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",73,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",73,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",73,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",73,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",73,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",73,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",73,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",295,[[["self"]],["turbofish"]]],[11,"new","","",74,[[["lifetime"]],["self"]]],[11,"new","","Panics",126,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",181,[[["literal"]],["self"]]],[11,"new","","",296,[[["str"],["span"]],["self"]]],[11,"value","","",296,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",296,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",296,[[["self"],["parser"]],["result"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"set_span","","",296,[[["span"],["self"]]]],[11,"new","","",297,[[["span"]],["self"]]],[11,"value","","",297,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"set_span","","",297,[[["span"],["self"]]]],[11,"new","","",298,[[["span"],["u8"]],["self"]]],[11,"value","","",298,[[["self"]],["u8"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"set_span","","",298,[[["span"],["self"]]]],[11,"new","","",299,[[["span"],["char"]],["self"]]],[11,"value","","",299,[[["self"]],["char"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"set_span","","",299,[[["span"],["self"]]]],[11,"new","","",300,[[["span"],["u64"],["intsuffix"]],["self"]]],[11,"value","","",300,[[["self"]],["u64"]]],[11,"suffix","","",300,[[["self"]],["intsuffix"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"set_span","","",300,[[["span"],["self"]]]],[11,"new","","",301,[[["floatsuffix"],["f64"],["span"]],["self"]]],[11,"value","","",301,[[["self"]],["f64"]]],[11,"suffix","","",301,[[["self"]],["floatsuffix"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"set_span","","",301,[[["span"],["self"]]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"set_span","","",128,[[["span"],["self"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",129,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",129,[[["self"],["parser"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",189,[[["parsestream"]],["result"]]],[11,"without_plus","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",155,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",155,[[["i"],["self"]],["bool"]]],[11,"is_empty","","",191,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",302,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",303,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",303,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",303,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",303,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",303,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",303,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",303,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",303,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",303,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",303,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",304,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",304,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",304,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",305,null],[13,"End","","",305,null],[11,"new","","Creates an empty punctuated sequence.",306,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",306,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",306,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",306,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",306,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",306,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",306,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",306,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",306,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",306,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",306,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",306,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",306,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",306,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",306,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",305,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",305,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",305,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",305,[[["self"]],[["p"],["option"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",305,[[["option"],["t"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",305,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",307,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arg_captured","","",null,[[["v"],["argcaptured"]]]],[5,"visit_arg_self","","",null,[[["v"],["argself"]]]],[5,"visit_arg_self_ref","","",null,[[["argselfref"],["v"]]]],[5,"visit_arm","","",null,[[["arm"],["v"]]]],[5,"visit_attr_style","","",null,[[["attrstyle"],["v"]]]],[5,"visit_attribute","","",null,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",null,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",null,[[["barefnargname"],["v"]]]],[5,"visit_bin_op","","",null,[[["v"],["binop"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_block","","",null,[[["block"],["v"]]]],[5,"visit_bound_lifetimes","","",null,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["constraint"],["v"]]]],[5,"visit_data","","",null,[[["data"],["v"]]]],[5,"visit_data_enum","","",null,[[["dataenum"],["v"]]]],[5,"visit_data_struct","","",null,[[["datastruct"],["v"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["deriveinput"],["v"]]]],[5,"visit_expr","","",null,[[["expr"],["v"]]]],[5,"visit_expr_array","","",null,[[["exprarray"],["v"]]]],[5,"visit_expr_assign","","",null,[[["exprassign"],["v"]]]],[5,"visit_expr_assign_op","","",null,[[["v"],["exprassignop"]]]],[5,"visit_expr_async","","",null,[[["v"],["exprasync"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_block","","",null,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",null,[[["exprbox"],["v"]]]],[5,"visit_expr_break","","",null,[[["exprbreak"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["exprcast"],["v"]]]],[5,"visit_expr_closure","","",null,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue"],["v"]]]],[5,"visit_expr_field","","",null,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",null,[[["v"],["exprforloop"]]]],[5,"visit_expr_group","","",null,[[["exprgroup"],["v"]]]],[5,"visit_expr_if","","",null,[[["exprif"],["v"]]]],[5,"visit_expr_in_place","","",null,[[["v"],["exprinplace"]]]],[5,"visit_expr_index","","",null,[[["v"],["exprindex"]]]],[5,"visit_expr_let","","",null,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",null,[[["v"],["exprloop"]]]],[5,"visit_expr_macro","","",null,[[["exprmacro"],["v"]]]],[5,"visit_expr_match","","",null,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_range","","",null,[[["exprrange"],["v"]]]],[5,"visit_expr_reference","","",null,[[["exprreference"],["v"]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat"],["v"]]]],[5,"visit_expr_return","","",null,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",null,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",null,[[["exprtry"],["v"]]]],[5,"visit_expr_try_block","","",null,[[["v"],["exprtryblock"]]]],[5,"visit_expr_tuple","","",null,[[["v"],["exprtuple"]]]],[5,"visit_expr_type","","",null,[[["v"],["exprtype"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",null,[[["v"],["exprunsafe"]]]],[5,"visit_expr_verbatim","","",null,[[["v"],["exprverbatim"]]]],[5,"visit_expr_while","","",null,[[["v"],["exprwhile"]]]],[5,"visit_expr_yield","","",null,[[["expryield"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_field_pat","","",null,[[["v"],["fieldpat"]]]],[5,"visit_field_value","","",null,[[["fieldvalue"],["v"]]]],[5,"visit_fields","","",null,[[["fields"],["v"]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed"],["v"]]]],[5,"visit_fields_unnamed","","",null,[[["v"],["fieldsunnamed"]]]],[5,"visit_file","","",null,[[["v"],["file"]]]],[5,"visit_fn_arg","","",null,[[["v"],["fnarg"]]]],[5,"visit_fn_decl","","",null,[[["v"],["fndecl"]]]],[5,"visit_foreign_item","","",null,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn"],["v"]]]],[5,"visit_foreign_item_macro","","",null,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic"],["v"]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype"],["v"]]]],[5,"visit_foreign_item_verbatim","","",null,[[["foreignitemverbatim"],["v"]]]],[5,"visit_generic_argument","","",null,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument","","",null,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["generics"],["v"]]]],[5,"visit_impl_item","","",null,[[["v"],["implitem"]]]],[5,"visit_impl_item_const","","",null,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_existential","","",null,[[["implitemexistential"],["v"]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro"],["v"]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod"],["v"]]]],[5,"visit_impl_item_type","","",null,[[["v"],["implitemtype"]]]],[5,"visit_impl_item_verbatim","","",null,[[["v"],["implitemverbatim"]]]],[5,"visit_index","","",null,[[["v"],["index"]]]],[5,"visit_item","","",null,[[["item"],["v"]]]],[5,"visit_item_const","","",null,[[["v"],["itemconst"]]]],[5,"visit_item_enum","","",null,[[["v"],["itemenum"]]]],[5,"visit_item_existential","","",null,[[["itemexistential"],["v"]]]],[5,"visit_item_extern_crate","","",null,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",null,[[["itemfn"],["v"]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod"],["v"]]]],[5,"visit_item_impl","","",null,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",null,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2"],["v"]]]],[5,"visit_item_mod","","",null,[[["v"],["itemmod"]]]],[5,"visit_item_static","","",null,[[["itemstatic"],["v"]]]],[5,"visit_item_struct","","",null,[[["itemstruct"],["v"]]]],[5,"visit_item_trait","","",null,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias"],["v"]]]],[5,"visit_item_type","","",null,[[["itemtype"],["v"]]]],[5,"visit_item_union","","",null,[[["itemunion"],["v"]]]],[5,"visit_item_use","","",null,[[["itemuse"],["v"]]]],[5,"visit_item_verbatim","","",null,[[["v"],["itemverbatim"]]]],[5,"visit_label","","",null,[[["label"],["v"]]]],[5,"visit_lifetime","","",null,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["litbool"],["v"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["litstr"],["v"]]]],[5,"visit_lit_verbatim","","",null,[[["litverbatim"],["v"]]]],[5,"visit_local","","",null,[[["local"],["v"]]]],[5,"visit_macro","","",null,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["v"],["member"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["metalist"],["v"]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue"],["v"]]]],[5,"visit_method_sig","","",null,[[["v"],["methodsig"]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish"],["v"]]]],[5,"visit_nested_meta","","",null,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",null,[[["pat"],["v"]]]],[5,"visit_pat_box","","",null,[[["patbox"],["v"]]]],[5,"visit_pat_ident","","",null,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",null,[[["patlit"],["v"]]]],[5,"visit_pat_macro","","",null,[[["patmacro"],["v"]]]],[5,"visit_pat_path","","",null,[[["patpath"],["v"]]]],[5,"visit_pat_range","","",null,[[["patrange"],["v"]]]],[5,"visit_pat_ref","","",null,[[["patref"],["v"]]]],[5,"visit_pat_slice","","",null,[[["v"],["patslice"]]]],[5,"visit_pat_struct","","",null,[[["patstruct"],["v"]]]],[5,"visit_pat_tuple","","",null,[[["pattuple"],["v"]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct"],["v"]]]],[5,"visit_pat_verbatim","","",null,[[["patverbatim"],["v"]]]],[5,"visit_pat_wild","","",null,[[["patwild"],["v"]]]],[5,"visit_path","","",null,[[["v"],["path"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq"],["v"]]]],[5,"visit_predicate_lifetime","","",null,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["v"],["qself"]]]],[5,"visit_range_limits","","",null,[[["rangelimits"],["v"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_stmt","","",null,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",null,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_trait_item","","",null,[[["traititem"],["v"]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst"],["v"]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro"],["v"]]]],[5,"visit_trait_item_method","","",null,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",null,[[["v"],["traititemtype"]]]],[5,"visit_trait_item_verbatim","","",null,[[["traititemverbatim"],["v"]]]],[5,"visit_type","","",null,[[["type"],["v"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait"],["v"]]]],[5,"visit_type_infer","","",null,[[["typeinfer"],["v"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound"],["v"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["typepath"],["v"]]]],[5,"visit_type_ptr","","",null,[[["typeptr"],["v"]]]],[5,"visit_type_reference","","",null,[[["typereference"],["v"]]]],[5,"visit_type_slice","","",null,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",null,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_type_verbatim","","",null,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_use_glob","","",null,[[["v"],["useglob"]]]],[5,"visit_use_group","","",null,[[["v"],["usegroup"]]]],[5,"visit_use_name","","",null,[[["usename"],["v"]]]],[5,"visit_use_path","","",null,[[["usepath"],["v"]]]],[5,"visit_use_rename","","",null,[[["v"],["userename"]]]],[5,"visit_use_tree","","",null,[[["usetree"],["v"]]]],[5,"visit_variant","","",null,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",null,[[["viscrate"],["v"]]]],[5,"visit_vis_public","","",null,[[["vispublic"],["v"]]]],[5,"visit_vis_restricted","","",null,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[5,"visit_span","","",null,[[["v"],["span"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",308,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["argselfref"],["self"]]]],[11,"visit_arm","","",308,[[["arm"],["self"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["block"],["self"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["constparam"],["self"]]]],[11,"visit_constraint","","",308,[[["constraint"],["self"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",308,[[["expr"],["self"]]]],[11,"visit_expr_array","","",308,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",308,[[["exprassign"],["self"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["exprbinary"],["self"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["exprbox"],["self"]]]],[11,"visit_expr_break","","",308,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",308,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["foreignitemstatic"],["self"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["implitemmacro"],["self"]]]],[11,"visit_impl_item_method","","",308,[[["implitemmethod"],["self"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["item"],["self"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",308,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["itemmacro2"],["self"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["itemstatic"],["self"]]]],[11,"visit_item_struct","","",308,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["local"],["self"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["macrodelimiter"],["self"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["meta"],["self"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["metanamevalue"],["self"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",308,[[["patmacro"],["self"]]]],[11,"visit_pat_path","","",308,[[["patpath"],["self"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["patverbatim"],["self"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["traitboundmodifier"],["self"]]]],[11,"visit_trait_item","","",308,[[["traititem"],["self"]]]],[11,"visit_trait_item_const","","",308,[[["traititemconst"],["self"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["traititemverbatim"],["self"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["typebarefn"],["self"]]]],[11,"visit_type_group","","",308,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",308,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",308,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",308,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",308,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["typetuple"],["self"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["usename"],["self"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["usetree"],["self"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",309,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",310,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",311,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",311,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",311,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",311,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",313,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",313,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",313,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",313,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",313,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",313,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",313,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",313,[[["display"],["self"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",313,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",313,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",314,[[["span"],["display"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",314,[[["totokens"],["display"]],["self"]]],[11,"span","","The source location of the error.",314,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",314,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"span","","",315,[[["self"]],["span"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,[[["self"],["t"]]]],[11,"to_string","","",315,[[["self"]],["string"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"try_into","","",315,[[],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"type_id","","",315,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",316,[[["self"]],["span"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[],["u"]]],[11,"to_owned","","",316,[[["self"]],["t"]]],[11,"clone_into","","",316,[[["self"],["t"]]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"try_into","","",316,[[],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"type_id","","",316,[[["self"]],["typeid"]]],[11,"span","","",317,[[["self"]],["span"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,[[["self"],["t"]]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"try_into","","",317,[[],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"type_id","","",317,[[["self"]],["typeid"]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,[[["self"],["t"]]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"try_into","","",295,[[],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"type_id","","",295,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,[[["self"],["t"]]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"try_into","","",298,[[],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"type_id","","",298,[[["self"]],["typeid"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,[[["self"],["t"]]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"try_into","","",297,[[],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"type_id","","",297,[[["self"]],["typeid"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,[[["self"],["t"]]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"try_into","","",299,[[],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"type_id","","",299,[[["self"]],["typeid"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,[[["self"],["t"]]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,[[["self"],["t"]]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,[[["self"],["t"]]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"try_into","","",296,[[],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"type_id","","",296,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,[[["self"],["t"]]]],[11,"to_string","","",314,[[["self"]],["string"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"try_into","","",314,[[],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"type_id","","",314,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,[[["self"],["t"]]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,[[["self"],["t"]]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"try_into","","",292,[[],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"type_id","","",292,[[["self"]],["typeid"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",306,[[["self"]],["span"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,[[["self"],["t"]]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[],["u"]]],[11,"into_iter","","",318,[[],["i"]]],[11,"to_owned","","",318,[[["self"]],["t"]]],[11,"clone_into","","",318,[[["self"],["t"]]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"try_into","","",318,[[],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"type_id","","",318,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[],["u"]]],[11,"into_iter","","",319,[[],["i"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"try_into","","",319,[[],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"into","","",320,[[],["u"]]],[11,"into_iter","","",320,[[],["i"]]],[11,"to_owned","","",320,[[["self"]],["t"]]],[11,"clone_into","","",320,[[["self"],["t"]]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"try_into","","",320,[[],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"type_id","","",320,[[["self"]],["typeid"]]],[11,"from","","",321,[[["t"]],["t"]]],[11,"into","","",321,[[],["u"]]],[11,"into_iter","","",321,[[],["i"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,[[["self"],["t"]]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"try_into","","",321,[[],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"type_id","","",321,[[["self"]],["typeid"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"into","","",322,[[],["u"]]],[11,"into_iter","","",322,[[],["i"]]],[11,"to_owned","","",322,[[["self"]],["t"]]],[11,"clone_into","","",322,[[["self"],["t"]]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"try_into","","",322,[[],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"type_id","","",322,[[["self"]],["typeid"]]],[11,"from","","",323,[[["t"]],["t"]]],[11,"into","","",323,[[],["u"]]],[11,"into_iter","","",323,[[],["i"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"try_into","","",323,[[],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"type_id","","",323,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"from","syn::parse","",324,[[["t"]],["t"]]],[11,"into","","",324,[[],["u"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"try_into","","",324,[[],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"type_id","","",324,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[],["u"]]],[11,"to_string","","",313,[[["self"]],["string"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"try_into","","",313,[[],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"type_id","","",313,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,[[["self"],["t"]]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"eq","syn","",315,[[["t"],["self"]],["bool"]]],[11,"eq","","",315,[[["ident"],["self"]],["bool"]]],[11,"cmp","","",315,[[["ident"],["self"]],["ordering"]]],[11,"clone","","",315,[[["self"]],["ident"]]],[11,"fmt","","",315,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",315,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",315,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",315,[[["self"],["h"]]]],[11,"to_tokens","","",315,[[["tokenstream"],["self"]]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"peek","syn","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"parse_any","","",315,[[["parsestream"]],["result"]]],[11,"unraw","","",315,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",313,[[["self"]]]],[11,"parse","syn::token","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","","",279,[[["parsestream"]],["result"]]],[11,"parse","","",280,[[["parsestream"]],["result"]]],[11,"parse","","",281,[[["parsestream"]],["result"]]],[11,"parse","","",282,[[["parsestream"]],["result"]]],[11,"parse","","",283,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",290,[[["parsestream"]],["result"]]],[11,"parse","syn","",315,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",18,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],[["result",["arm"]],["arm"]]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],[["usetree"],["result",["usetree"]]]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",296,[[["parsestream"]],["result"]]],[11,"parse","","",297,[[["parsestream"]],["result"]]],[11,"parse","","",298,[[["parsestream"]],["result"]]],[11,"parse","","",299,[[["parsestream"]],["result"]]],[11,"parse","","",300,[[["parsestream"]],["result"]]],[11,"parse","","",301,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"drop","syn::parse","",313,[[["self"]]]],[11,"from","syn","",315,[[["selfvalue"]],["ident"]]],[11,"from","","",315,[[["selftype"]],["ident"]]],[11,"from","","",315,[[["super"]],["ident"]]],[11,"from","","",315,[[["crate"]],["ident"]]],[11,"from","","",315,[[["extern"]],["ident"]]],[11,"from","","",315,[[["underscore"]],["ident"]]],[11,"from","","",159,[[["ident"]],["meta"]]],[11,"from","","",159,[[["metalist"]],["meta"]]],[11,"from","","",159,[[["metanamevalue"]],["meta"]]],[11,"from","","",160,[[["meta"]],["nestedmeta"]]],[11,"from","","",160,[[["lit"]],["nestedmeta"]]],[11,"from","","",161,[[["fieldsnamed"]],["fields"]]],[11,"from","","",161,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",162,[[["vispublic"]],["visibility"]]],[11,"from","","",162,[[["viscrate"]],["visibility"]]],[11,"from","","",162,[[["visrestricted"]],["visibility"]]],[11,"from","","",163,[[["exprbox"]],["expr"]]],[11,"from","","",163,[[["exprinplace"]],["expr"]]],[11,"from","","",163,[[["exprarray"]],["expr"]]],[11,"from","","",163,[[["exprcall"]],["expr"]]],[11,"from","","",163,[[["exprmethodcall"]],["expr"]]],[11,"from","","",163,[[["exprtuple"]],["expr"]]],[11,"from","","",163,[[["exprbinary"]],["expr"]]],[11,"from","","",163,[[["exprunary"]],["expr"]]],[11,"from","","",163,[[["exprlit"]],["expr"]]],[11,"from","","",163,[[["exprcast"]],["expr"]]],[11,"from","","",163,[[["exprtype"]],["expr"]]],[11,"from","","",163,[[["exprlet"]],["expr"]]],[11,"from","","",163,[[["exprif"]],["expr"]]],[11,"from","","",163,[[["exprwhile"]],["expr"]]],[11,"from","","",163,[[["exprforloop"]],["expr"]]],[11,"from","","",163,[[["exprloop"]],["expr"]]],[11,"from","","",163,[[["exprmatch"]],["expr"]]],[11,"from","","",163,[[["exprclosure"]],["expr"]]],[11,"from","","",163,[[["exprunsafe"]],["expr"]]],[11,"from","","",163,[[["exprblock"]],["expr"]]],[11,"from","","",163,[[["exprassign"]],["expr"]]],[11,"from","","",163,[[["exprassignop"]],["expr"]]],[11,"from","","",163,[[["exprfield"]],["expr"]]],[11,"from","","",163,[[["exprindex"]],["expr"]]],[11,"from","","",163,[[["exprrange"]],["expr"]]],[11,"from","","",163,[[["exprpath"]],["expr"]]],[11,"from","","",163,[[["exprreference"]],["expr"]]],[11,"from","","",163,[[["exprbreak"]],["expr"]]],[11,"from","","",163,[[["exprcontinue"]],["expr"]]],[11,"from","","",163,[[["exprreturn"]],["expr"]]],[11,"from","","",163,[[["exprmacro"]],["expr"]]],[11,"from","","",163,[[["exprstruct"]],["expr"]]],[11,"from","","",163,[[["exprrepeat"]],["expr"]]],[11,"from","","",163,[[["exprparen"]],["expr"]]],[11,"from","","",163,[[["exprgroup"]],["expr"]]],[11,"from","","",163,[[["exprtry"]],["expr"]]],[11,"from","","",163,[[["exprasync"]],["expr"]]],[11,"from","","",163,[[["exprtryblock"]],["expr"]]],[11,"from","","",163,[[["expryield"]],["expr"]]],[11,"from","","",163,[[["exprverbatim"]],["expr"]]],[11,"from","","",50,[[["usize"]],["index"]]],[11,"from","","",166,[[["patwild"]],["pat"]]],[11,"from","","",166,[[["patident"]],["pat"]]],[11,"from","","",166,[[["patstruct"]],["pat"]]],[11,"from","","",166,[[["pattuplestruct"]],["pat"]]],[11,"from","","",166,[[["patpath"]],["pat"]]],[11,"from","","",166,[[["pattuple"]],["pat"]]],[11,"from","","",166,[[["patbox"]],["pat"]]],[11,"from","","",166,[[["patref"]],["pat"]]],[11,"from","","",166,[[["patlit"]],["pat"]]],[11,"from","","",166,[[["patrange"]],["pat"]]],[11,"from","","",166,[[["patslice"]],["pat"]]],[11,"from","","",166,[[["patmacro"]],["pat"]]],[11,"from","","",166,[[["patverbatim"]],["pat"]]],[11,"from","","",169,[[["typeparam"]],["genericparam"]]],[11,"from","","",169,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",169,[[["constparam"]],["genericparam"]]],[11,"from","","",79,[[["ident"]],["self"]]],[11,"from","","",171,[[["traitbound"]],["typeparambound"]]],[11,"from","","",171,[[["lifetime"]],["typeparambound"]]],[11,"from","","",172,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",172,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",172,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",176,[[["itemexterncrate"]],["item"]]],[11,"from","","",176,[[["itemuse"]],["item"]]],[11,"from","","",176,[[["itemstatic"]],["item"]]],[11,"from","","",176,[[["itemconst"]],["item"]]],[11,"from","","",176,[[["itemfn"]],["item"]]],[11,"from","","",176,[[["itemmod"]],["item"]]],[11,"from","","",176,[[["itemforeignmod"]],["item"]]],[11,"from","","",176,[[["itemtype"]],["item"]]],[11,"from","","",176,[[["itemexistential"]],["item"]]],[11,"from","","",176,[[["itemstruct"]],["item"]]],[11,"from","","",176,[[["itemenum"]],["item"]]],[11,"from","","",176,[[["itemunion"]],["item"]]],[11,"from","","",176,[[["itemtrait"]],["item"]]],[11,"from","","",176,[[["itemtraitalias"]],["item"]]],[11,"from","","",176,[[["itemimpl"]],["item"]]],[11,"from","","",176,[[["itemmacro"]],["item"]]],[11,"from","","",176,[[["itemmacro2"]],["item"]]],[11,"from","","",176,[[["itemverbatim"]],["item"]]],[11,"from","","",176,[[["deriveinput"]],["item"]]],[11,"from","","",178,[[["usepath"]],["usetree"]]],[11,"from","","",178,[[["usename"]],["usetree"]]],[11,"from","","",178,[[["userename"]],["usetree"]]],[11,"from","","",178,[[["useglob"]],["usetree"]]],[11,"from","","",178,[[["usegroup"]],["usetree"]]],[11,"from","","",174,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"from","","",177,[[["traititemconst"]],["traititem"]]],[11,"from","","",177,[[["traititemmethod"]],["traititem"]]],[11,"from","","",177,[[["traititemtype"]],["traititem"]]],[11,"from","","",177,[[["traititemmacro"]],["traititem"]]],[11,"from","","",177,[[["traititemverbatim"]],["traititem"]]],[11,"from","","",175,[[["implitemconst"]],["implitem"]]],[11,"from","","",175,[[["implitemmethod"]],["implitem"]]],[11,"from","","",175,[[["implitemtype"]],["implitem"]]],[11,"from","","",175,[[["implitemexistential"]],["implitem"]]],[11,"from","","",175,[[["implitemmacro"]],["implitem"]]],[11,"from","","",175,[[["implitemverbatim"]],["implitem"]]],[11,"from","","",173,[[["argselfref"]],["fnarg"]]],[11,"from","","",173,[[["argself"]],["fnarg"]]],[11,"from","","",173,[[["argcaptured"]],["fnarg"]]],[11,"from","","",173,[[["pat"]],["fnarg"]]],[11,"from","","",173,[[["type"]],["fnarg"]]],[11,"from","","",181,[[["litstr"]],["lit"]]],[11,"from","","",181,[[["litbytestr"]],["lit"]]],[11,"from","","",181,[[["litbyte"]],["lit"]]],[11,"from","","",181,[[["litchar"]],["lit"]]],[11,"from","","",181,[[["litint"]],["lit"]]],[11,"from","","",181,[[["litfloat"]],["lit"]]],[11,"from","","",181,[[["litbool"]],["lit"]]],[11,"from","","",181,[[["litverbatim"]],["lit"]]],[11,"from","","",184,[[["datastruct"]],["data"]]],[11,"from","","",184,[[["dataenum"]],["data"]]],[11,"from","","",184,[[["dataunion"]],["data"]]],[11,"from","","",189,[[["typeslice"]],["type"]]],[11,"from","","",189,[[["typearray"]],["type"]]],[11,"from","","",189,[[["typeptr"]],["type"]]],[11,"from","","",189,[[["typereference"]],["type"]]],[11,"from","","",189,[[["typebarefn"]],["type"]]],[11,"from","","",189,[[["typenever"]],["type"]]],[11,"from","","",189,[[["typetuple"]],["type"]]],[11,"from","","",189,[[["typepath"]],["type"]]],[11,"from","","",189,[[["typetraitobject"]],["type"]]],[11,"from","","",189,[[["typeimpltrait"]],["type"]]],[11,"from","","",189,[[["typeparen"]],["type"]]],[11,"from","","",189,[[["typegroup"]],["type"]]],[11,"from","","",189,[[["typeinfer"]],["type"]]],[11,"from","","",189,[[["typemacro"]],["type"]]],[11,"from","","",189,[[["typeverbatim"]],["type"]]],[11,"from","","",155,[[["t"]],["self"]]],[11,"from","","",156,[[["t"]],["self"]]],[11,"from","","",314,[[["lexerror"]],["self"]]],[11,"len","syn::punctuated","",318,[[["self"]],["usize"]]],[11,"len","","",319,[[["self"]],["usize"]]],[11,"len","","",320,[[["self"]],["usize"]]],[11,"len","","",321,[[["self"]],["usize"]]],[11,"len","","",322,[[["self"]],["usize"]]],[11,"len","","",323,[[["self"]],["usize"]]],[11,"extend","","",306,[[["self"],["intoiterator"]]]],[11,"extend","","",306,[[["intoiterator"],["self"]]]],[11,"into_iter","","",306,[[]]],[11,"next","","",318,[[["self"]],["option"]]],[11,"next","","",319,[[["self"]],["option"]]],[11,"next","","",320,[[["self"]],["option"]]],[11,"next","","",321,[[["self"]],["option"]]],[11,"next","","",322,[[["self"]],["option"]]],[11,"next","","",323,[[["self"]],["option"]]],[11,"clone","syn::token","",192,[[["self"]],["underscore"]]],[11,"clone","","",193,[[["self"]],["abstract"]]],[11,"clone","","",194,[[["self"]],["as"]]],[11,"clone","","",195,[[["self"]],["async"]]],[11,"clone","","",196,[[["self"]],["auto"]]],[11,"clone","","",197,[[["self"]],["become"]]],[11,"clone","","",198,[[["self"]],["box"]]],[11,"clone","","",199,[[["self"]],["break"]]],[11,"clone","","",200,[[["self"]],["const"]]],[11,"clone","","",201,[[["self"]],["continue"]]],[11,"clone","","",202,[[["self"]],["crate"]]],[11,"clone","","",203,[[["self"]],["default"]]],[11,"clone","","",204,[[["self"]],["do"]]],[11,"clone","","",205,[[["self"]],["dyn"]]],[11,"clone","","",206,[[["self"]],["else"]]],[11,"clone","","",207,[[["self"]],["enum"]]],[11,"clone","","",208,[[["self"]],["existential"]]],[11,"clone","","",209,[[["self"]],["extern"]]],[11,"clone","","",210,[[["self"]],["final"]]],[11,"clone","","",211,[[["self"]],["fn"]]],[11,"clone","","",212,[[["self"]],["for"]]],[11,"clone","","",213,[[["self"]],["if"]]],[11,"clone","","",214,[[["self"]],["impl"]]],[11,"clone","","",215,[[["self"]],["in"]]],[11,"clone","","",216,[[["self"]],["let"]]],[11,"clone","","",217,[[["self"]],["loop"]]],[11,"clone","","",218,[[["self"]],["macro"]]],[11,"clone","","",219,[[["self"]],["match"]]],[11,"clone","","",220,[[["self"]],["mod"]]],[11,"clone","","",221,[[["self"]],["move"]]],[11,"clone","","",222,[[["self"]],["mut"]]],[11,"clone","","",223,[[["self"]],["override"]]],[11,"clone","","",224,[[["self"]],["priv"]]],[11,"clone","","",225,[[["self"]],["pub"]]],[11,"clone","","",226,[[["self"]],["ref"]]],[11,"clone","","",227,[[["self"]],["return"]]],[11,"clone","","",228,[[["self"]],["selftype"]]],[11,"clone","","",229,[[["self"]],["selfvalue"]]],[11,"clone","","",230,[[["self"]],["static"]]],[11,"clone","","",231,[[["self"]],["struct"]]],[11,"clone","","",232,[[["self"]],["super"]]],[11,"clone","","",233,[[["self"]],["trait"]]],[11,"clone","","",234,[[["self"]],["try"]]],[11,"clone","","",235,[[["self"]],["type"]]],[11,"clone","","",236,[[["self"]],["typeof"]]],[11,"clone","","",237,[[["self"]],["union"]]],[11,"clone","","",238,[[["self"]],["unsafe"]]],[11,"clone","","",239,[[["self"]],["unsized"]]],[11,"clone","","",240,[[["self"]],["use"]]],[11,"clone","","",241,[[["self"]],["virtual"]]],[11,"clone","","",242,[[["self"]],["where"]]],[11,"clone","","",243,[[["self"]],["while"]]],[11,"clone","","",244,[[["self"]],["yield"]]],[11,"clone","","",245,[[["self"]],["add"]]],[11,"clone","","",246,[[["self"]],["addeq"]]],[11,"clone","","",247,[[["self"]],["and"]]],[11,"clone","","",248,[[["self"]],["andand"]]],[11,"clone","","",249,[[["self"]],["andeq"]]],[11,"clone","","",250,[[["self"]],["at"]]],[11,"clone","","",251,[[["self"]],["bang"]]],[11,"clone","","",252,[[["self"]],["caret"]]],[11,"clone","","",253,[[["self"]],["careteq"]]],[11,"clone","","",254,[[["self"]],["colon"]]],[11,"clone","","",255,[[["self"]],["colon2"]]],[11,"clone","","",256,[[["self"]],["comma"]]],[11,"clone","","",257,[[["self"]],["div"]]],[11,"clone","","",258,[[["self"]],["diveq"]]],[11,"clone","","",259,[[["self"]],["dollar"]]],[11,"clone","","",260,[[["self"]],["dot"]]],[11,"clone","","",261,[[["self"]],["dot2"]]],[11,"clone","","",262,[[["self"]],["dot3"]]],[11,"clone","","",263,[[["self"]],["dotdoteq"]]],[11,"clone","","",264,[[["self"]],["eq"]]],[11,"clone","","",265,[[["self"]],["eqeq"]]],[11,"clone","","",266,[[["self"]],["ge"]]],[11,"clone","","",267,[[["self"]],["gt"]]],[11,"clone","","",268,[[["self"]],["le"]]],[11,"clone","","",269,[[["self"]],["lt"]]],[11,"clone","","",270,[[["self"]],["muleq"]]],[11,"clone","","",271,[[["self"]],["ne"]]],[11,"clone","","",272,[[["self"]],["or"]]],[11,"clone","","",273,[[["self"]],["oreq"]]],[11,"clone","","",274,[[["self"]],["oror"]]],[11,"clone","","",275,[[["self"]],["pound"]]],[11,"clone","","",276,[[["self"]],["question"]]],[11,"clone","","",277,[[["self"]],["rarrow"]]],[11,"clone","","",278,[[["self"]],["larrow"]]],[11,"clone","","",279,[[["self"]],["rem"]]],[11,"clone","","",280,[[["self"]],["remeq"]]],[11,"clone","","",281,[[["self"]],["fatarrow"]]],[11,"clone","","",282,[[["self"]],["semi"]]],[11,"clone","","",283,[[["self"]],["shl"]]],[11,"clone","","",284,[[["self"]],["shleq"]]],[11,"clone","","",285,[[["self"]],["shr"]]],[11,"clone","","",286,[[["self"]],["shreq"]]],[11,"clone","","",287,[[["self"]],["star"]]],[11,"clone","","",288,[[["self"]],["sub"]]],[11,"clone","","",289,[[["self"]],["subeq"]]],[11,"clone","","",290,[[["self"]],["tilde"]]],[11,"clone","","",291,[[["self"]],["brace"]]],[11,"clone","","",292,[[["self"]],["bracket"]]],[11,"clone","","",293,[[["self"]],["paren"]]],[11,"clone","","",294,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",158,[[["self"]],["attrstyle"]]],[11,"clone","","",159,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",160,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",161,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",162,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",163,[[["self"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprbox"]]],[11,"clone","","",26,[[["self"]],["exprinplace"]]],[11,"clone","","",10,[[["self"]],["exprarray"]]],[11,"clone","","",18,[[["self"]],["exprcall"]]],[11,"clone","","",33,[[["self"]],["exprmethodcall"]]],[11,"clone","","",43,[[["self"]],["exprtuple"]]],[11,"clone","","",14,[[["self"]],["exprbinary"]]],[11,"clone","","",45,[[["self"]],["exprunary"]]],[11,"clone","","",29,[[["self"]],["exprlit"]]],[11,"clone","","",19,[[["self"]],["exprcast"]]],[11,"clone","","",44,[[["self"]],["exprtype"]]],[11,"clone","","",28,[[["self"]],["exprlet"]]],[11,"clone","","",25,[[["self"]],["exprif"]]],[11,"clone","","",48,[[["self"]],["exprwhile"]]],[11,"clone","","",23,[[["self"]],["exprforloop"]]],[11,"clone","","",30,[[["self"]],["exprloop"]]],[11,"clone","","",32,[[["self"]],["exprmatch"]]],[11,"clone","","",20,[[["self"]],["exprclosure"]]],[11,"clone","","",46,[[["self"]],["exprunsafe"]]],[11,"clone","","",15,[[["self"]],["exprblock"]]],[11,"clone","","",11,[[["self"]],["exprassign"]]],[11,"clone","","",12,[[["self"]],["exprassignop"]]],[11,"clone","","",22,[[["self"]],["exprfield"]]],[11,"clone","","",27,[[["self"]],["exprindex"]]],[11,"clone","","",36,[[["self"]],["exprrange"]]],[11,"clone","","",35,[[["self"]],["exprpath"]]],[11,"clone","","",37,[[["self"]],["exprreference"]]],[11,"clone","","",17,[[["self"]],["exprbreak"]]],[11,"clone","","",21,[[["self"]],["exprcontinue"]]],[11,"clone","","",39,[[["self"]],["exprreturn"]]],[11,"clone","","",31,[[["self"]],["exprmacro"]]],[11,"clone","","",40,[[["self"]],["exprstruct"]]],[11,"clone","","",38,[[["self"]],["exprrepeat"]]],[11,"clone","","",34,[[["self"]],["exprparen"]]],[11,"clone","","",24,[[["self"]],["exprgroup"]]],[11,"clone","","",41,[[["self"]],["exprtry"]]],[11,"clone","","",13,[[["self"]],["exprasync"]]],[11,"clone","","",42,[[["self"]],["exprtryblock"]]],[11,"clone","","",49,[[["self"]],["expryield"]]],[11,"clone","","",47,[[["self"]],["exprverbatim"]]],[11,"clone","","",164,[[["self"]],["member"]]],[11,"clone","","",50,[[["self"]],["index"]]],[11,"clone","","",57,[[["self"]],["methodturbofish"]]],[11,"clone","","",165,[[["self"]],["genericmethodargument"]]],[11,"clone","","",54,[[["self"]],["fieldvalue"]]],[11,"clone","","",55,[[["self"]],["label"]]],[11,"clone","","",52,[[["self"]],["block"]]],[11,"clone","","",168,[[["self"]],["stmt"]]],[11,"clone","","",56,[[["self"]],["local"]]],[11,"clone","","",166,[[["self"]],["pat"]]],[11,"clone","","",70,[[["self"]],["patwild"]]],[11,"clone","","",59,[[["self"]],["patident"]]],[11,"clone","","",66,[[["self"]],["patstruct"]]],[11,"clone","","",68,[[["self"]],["pattuplestruct"]]],[11,"clone","","",62,[[["self"]],["patpath"]]],[11,"clone","","",67,[[["self"]],["pattuple"]]],[11,"clone","","",58,[[["self"]],["patbox"]]],[11,"clone","","",64,[[["self"]],["patref"]]],[11,"clone","","",60,[[["self"]],["patlit"]]],[11,"clone","","",63,[[["self"]],["patrange"]]],[11,"clone","","",65,[[["self"]],["patslice"]]],[11,"clone","","",61,[[["self"]],["patmacro"]]],[11,"clone","","",69,[[["self"]],["patverbatim"]]],[11,"clone","","",51,[[["self"]],["arm"]]],[11,"clone","","",167,[[["self"]],["rangelimits"]]],[11,"clone","","",53,[[["self"]],["fieldpat"]]],[11,"clone","","",73,[[["self"]],["generics"]]],[11,"clone","","",169,[[["self"]],["genericparam"]]],[11,"clone","","",79,[[["self"]],["typeparam"]]],[11,"clone","","",74,[[["self"]],["lifetimedef"]]],[11,"clone","","",72,[[["self"]],["constparam"]]],[11,"clone","","",316,[[["self"]],["implgenerics"]]],[11,"clone","","",295,[[["self"]],["typegenerics"]]],[11,"clone","","",317,[[["self"]],["turbofish"]]],[11,"clone","","",71,[[["self"]],["boundlifetimes"]]],[11,"clone","","",171,[[["self"]],["typeparambound"]]],[11,"clone","","",78,[[["self"]],["traitbound"]]],[11,"clone","","",170,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",80,[[["self"]],["whereclause"]]],[11,"clone","","",172,[[["self"]],["wherepredicate"]]],[11,"clone","","",77,[[["self"]],["predicatetype"]]],[11,"clone","","",76,[[["self"]],["predicatelifetime"]]],[11,"clone","","",75,[[["self"]],["predicateeq"]]],[11,"clone","","",176,[[["self"]],["item"]]],[11,"clone","","",99,[[["self"]],["itemexterncrate"]]],[11,"clone","","",112,[[["self"]],["itemuse"]]],[11,"clone","","",106,[[["self"]],["itemstatic"]]],[11,"clone","","",96,[[["self"]],["itemconst"]]],[11,"clone","","",100,[[["self"]],["itemfn"]]],[11,"clone","","",105,[[["self"]],["itemmod"]]],[11,"clone","","",101,[[["self"]],["itemforeignmod"]]],[11,"clone","","",110,[[["self"]],["itemtype"]]],[11,"clone","","",98,[[["self"]],["itemexistential"]]],[11,"clone","","",107,[[["self"]],["itemstruct"]]],[11,"clone","","",97,[[["self"]],["itemenum"]]],[11,"clone","","",111,[[["self"]],["itemunion"]]],[11,"clone","","",108,[[["self"]],["itemtrait"]]],[11,"clone","","",109,[[["self"]],["itemtraitalias"]]],[11,"clone","","",102,[[["self"]],["itemimpl"]]],[11,"clone","","",103,[[["self"]],["itemmacro"]]],[11,"clone","","",104,[[["self"]],["itemmacro2"]]],[11,"clone","","",113,[[["self"]],["itemverbatim"]]],[11,"clone","","",178,[[["self"]],["usetree"]]],[11,"clone","","",123,[[["self"]],["usepath"]]],[11,"clone","","",122,[[["self"]],["usename"]]],[11,"clone","","",124,[[["self"]],["userename"]]],[11,"clone","","",120,[[["self"]],["useglob"]]],[11,"clone","","",121,[[["self"]],["usegroup"]]],[11,"clone","","",174,[[["self"]],["foreignitem"]]],[11,"clone","","",85,[[["self"]],["foreignitemfn"]]],[11,"clone","","",87,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",88,[[["self"]],["foreignitemtype"]]],[11,"clone","","",86,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",89,[[["self"]],["foreignitemverbatim"]]],[11,"clone","","",177,[[["self"]],["traititem"]]],[11,"clone","","",115,[[["self"]],["traititemconst"]]],[11,"clone","","",117,[[["self"]],["traititemmethod"]]],[11,"clone","","",118,[[["self"]],["traititemtype"]]],[11,"clone","","",116,[[["self"]],["traititemmacro"]]],[11,"clone","","",119,[[["self"]],["traititemverbatim"]]],[11,"clone","","",175,[[["self"]],["implitem"]]],[11,"clone","","",90,[[["self"]],["implitemconst"]]],[11,"clone","","",93,[[["self"]],["implitemmethod"]]],[11,"clone","","",94,[[["self"]],["implitemtype"]]],[11,"clone","","",91,[[["self"]],["implitemexistential"]]],[11,"clone","","",92,[[["self"]],["implitemmacro"]]],[11,"clone","","",95,[[["self"]],["implitemverbatim"]]],[11,"clone","","",114,[[["self"]],["methodsig"]]],[11,"clone","","",84,[[["self"]],["fndecl"]]],[11,"clone","","",173,[[["self"]],["fnarg"]]],[11,"clone","","",83,[[["self"]],["argselfref"]]],[11,"clone","","",82,[[["self"]],["argself"]]],[11,"clone","","",81,[[["self"]],["argcaptured"]]],[11,"clone","","",125,[[["self"]],["file"]]],[11,"clone","","",126,[[["self"]],["lifetime"]]],[11,"clone","","",181,[[["self"]],["lit"]]],[11,"clone","","",296,[[["self"]],["litstr"]]],[11,"clone","","",297,[[["self"]],["litbytestr"]]],[11,"clone","","",298,[[["self"]],["litbyte"]]],[11,"clone","","",299,[[["self"]],["litchar"]]],[11,"clone","","",300,[[["self"]],["litint"]]],[11,"clone","","",301,[[["self"]],["litfloat"]]],[11,"clone","","",127,[[["self"]],["litbool"]]],[11,"clone","","",128,[[["self"]],["litverbatim"]]],[11,"clone","","",182,[[["self"]],["strstyle"]]],[11,"clone","","",180,[[["self"]],["intsuffix"]]],[11,"clone","","",179,[[["self"]],["floatsuffix"]]],[11,"clone","","",129,[[["self"]],["macro"]]],[11,"clone","","",183,[[["self"]],["macrodelimiter"]]],[11,"clone","","",133,[[["self"]],["deriveinput"]]],[11,"clone","","",184,[[["self"]],["data"]]],[11,"clone","","",131,[[["self"]],["datastruct"]]],[11,"clone","","",130,[[["self"]],["dataenum"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"clone","","",185,[[["self"]],["binop"]]],[11,"clone","","",186,[[["self"]],["unop"]]],[11,"clone","","",189,[[["self"]],["type"]]],[11,"clone","","",147,[[["self"]],["typeslice"]]],[11,"clone","","",136,[[["self"]],["typearray"]]],[11,"clone","","",145,[[["self"]],["typeptr"]]],[11,"clone","","",146,[[["self"]],["typereference"]]],[11,"clone","","",137,[[["self"]],["typebarefn"]]],[11,"clone","","",142,[[["self"]],["typenever"]]],[11,"clone","","",149,[[["self"]],["typetuple"]]],[11,"clone","","",144,[[["self"]],["typepath"]]],[11,"clone","","",148,[[["self"]],["typetraitobject"]]],[11,"clone","","",139,[[["self"]],["typeimpltrait"]]],[11,"clone","","",143,[[["self"]],["typeparen"]]],[11,"clone","","",138,[[["self"]],["typegroup"]]],[11,"clone","","",140,[[["self"]],["typeinfer"]]],[11,"clone","","",141,[[["self"]],["typemacro"]]],[11,"clone","","",150,[[["self"]],["typeverbatim"]]],[11,"clone","","",134,[[["self"]],["abi"]]],[11,"clone","","",135,[[["self"]],["barefnarg"]]],[11,"clone","","",187,[[["self"]],["barefnargname"]]],[11,"clone","","",188,[[["self"]],["returntype"]]],[11,"clone","","",155,[[["self"]],["path"]]],[11,"clone","","",156,[[["self"]],["pathsegment"]]],[11,"clone","","",191,[[["self"]],["patharguments"]]],[11,"clone","","",190,[[["self"]],["genericargument"]]],[11,"clone","","",151,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",152,[[["self"]],["binding"]]],[11,"clone","","",153,[[["self"]],["constraint"]]],[11,"clone","","",154,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",157,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",303,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",306,[[["self"]],["punctuated"]]],[11,"clone","","",318,[[["self"]],["self"]]],[11,"clone","","",320,[[["self"]],["intopairs"]]],[11,"clone","","",321,[[["self"]],["intoiter"]]],[11,"clone","","",322,[[["self"]],["self"]]],[11,"clone","","",305,[[["self"]],["pair"]]],[11,"clone","syn::parse","",312,[[["self"]],["stepcursor"]]],[11,"clone","syn","",314,[[["self"]],["self"]]],[11,"default","syn::token","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","","",283,[[],["self"]]],[11,"default","","",284,[[],["self"]]],[11,"default","","",285,[[],["self"]]],[11,"default","","",286,[[],["self"]]],[11,"default","","",287,[[],["self"]]],[11,"default","","",288,[[],["self"]]],[11,"default","","",289,[[],["self"]]],[11,"default","","",290,[[],["self"]]],[11,"default","","",291,[[],["self"]]],[11,"default","","",292,[[],["self"]]],[11,"default","","",293,[[],["self"]]],[11,"default","","",294,[[],["self"]]],[11,"default","syn","",73,[[],["generics"]]],[11,"default","","",71,[[],["boundlifetimes"]]],[11,"default","","",191,[[],["self"]]],[11,"default","syn::punctuated","",306,[[],["self"]]],[11,"cmp","syn","",126,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","syn::token","",192,[[["underscore"],["self"]],["bool"]]],[11,"eq","","",193,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["as"]],["bool"]]],[11,"eq","","",195,[[["self"],["async"]],["bool"]]],[11,"eq","","",196,[[["self"],["auto"]],["bool"]]],[11,"eq","","",197,[[["become"],["self"]],["bool"]]],[11,"eq","","",198,[[["box"],["self"]],["bool"]]],[11,"eq","","",199,[[["break"],["self"]],["bool"]]],[11,"eq","","",200,[[["const"],["self"]],["bool"]]],[11,"eq","","",201,[[["self"],["continue"]],["bool"]]],[11,"eq","","",202,[[["self"],["crate"]],["bool"]]],[11,"eq","","",203,[[["default"],["self"]],["bool"]]],[11,"eq","","",204,[[["do"],["self"]],["bool"]]],[11,"eq","","",205,[[["dyn"],["self"]],["bool"]]],[11,"eq","","",206,[[["self"],["else"]],["bool"]]],[11,"eq","","",207,[[["self"],["enum"]],["bool"]]],[11,"eq","","",208,[[["existential"],["self"]],["bool"]]],[11,"eq","","",209,[[["extern"],["self"]],["bool"]]],[11,"eq","","",210,[[["self"],["final"]],["bool"]]],[11,"eq","","",211,[[["self"],["fn"]],["bool"]]],[11,"eq","","",212,[[["self"],["for"]],["bool"]]],[11,"eq","","",213,[[["self"],["if"]],["bool"]]],[11,"eq","","",214,[[["impl"],["self"]],["bool"]]],[11,"eq","","",215,[[["in"],["self"]],["bool"]]],[11,"eq","","",216,[[["let"],["self"]],["bool"]]],[11,"eq","","",217,[[["self"],["loop"]],["bool"]]],[11,"eq","","",218,[[["self"],["macro"]],["bool"]]],[11,"eq","","",219,[[["self"],["match"]],["bool"]]],[11,"eq","","",220,[[["mod"],["self"]],["bool"]]],[11,"eq","","",221,[[["self"],["move"]],["bool"]]],[11,"eq","","",222,[[["mut"],["self"]],["bool"]]],[11,"eq","","",223,[[["override"],["self"]],["bool"]]],[11,"eq","","",224,[[["self"],["priv"]],["bool"]]],[11,"eq","","",225,[[["pub"],["self"]],["bool"]]],[11,"eq","","",226,[[["self"],["ref"]],["bool"]]],[11,"eq","","",227,[[["self"],["return"]],["bool"]]],[11,"eq","","",228,[[["selftype"],["self"]],["bool"]]],[11,"eq","","",229,[[["selfvalue"],["self"]],["bool"]]],[11,"eq","","",230,[[["self"],["static"]],["bool"]]],[11,"eq","","",231,[[["self"],["struct"]],["bool"]]],[11,"eq","","",232,[[["self"],["super"]],["bool"]]],[11,"eq","","",233,[[["self"],["trait"]],["bool"]]],[11,"eq","","",234,[[["try"],["self"]],["bool"]]],[11,"eq","","",235,[[["type"],["self"]],["bool"]]],[11,"eq","","",236,[[["typeof"],["self"]],["bool"]]],[11,"eq","","",237,[[["union"],["self"]],["bool"]]],[11,"eq","","",238,[[["unsafe"],["self"]],["bool"]]],[11,"eq","","",239,[[["unsized"],["self"]],["bool"]]],[11,"eq","","",240,[[["use"],["self"]],["bool"]]],[11,"eq","","",241,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",242,[[["where"],["self"]],["bool"]]],[11,"eq","","",243,[[["self"],["while"]],["bool"]]],[11,"eq","","",244,[[["self"],["yield"]],["bool"]]],[11,"eq","","",245,[[["add"],["self"]],["bool"]]],[11,"eq","","",246,[[["addeq"],["self"]],["bool"]]],[11,"eq","","",247,[[["and"],["self"]],["bool"]]],[11,"eq","","",248,[[["andand"],["self"]],["bool"]]],[11,"eq","","",249,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",250,[[["self"],["at"]],["bool"]]],[11,"eq","","",251,[[["self"],["bang"]],["bool"]]],[11,"eq","","",252,[[["caret"],["self"]],["bool"]]],[11,"eq","","",253,[[["careteq"],["self"]],["bool"]]],[11,"eq","","",254,[[["colon"],["self"]],["bool"]]],[11,"eq","","",255,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",256,[[["self"],["comma"]],["bool"]]],[11,"eq","","",257,[[["self"],["div"]],["bool"]]],[11,"eq","","",258,[[["diveq"],["self"]],["bool"]]],[11,"eq","","",259,[[["dollar"],["self"]],["bool"]]],[11,"eq","","",260,[[["self"],["dot"]],["bool"]]],[11,"eq","","",261,[[["dot2"],["self"]],["bool"]]],[11,"eq","","",262,[[["dot3"],["self"]],["bool"]]],[11,"eq","","",263,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",264,[[["eq"],["self"]],["bool"]]],[11,"eq","","",265,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",266,[[["ge"],["self"]],["bool"]]],[11,"eq","","",267,[[["self"],["gt"]],["bool"]]],[11,"eq","","",268,[[["self"],["le"]],["bool"]]],[11,"eq","","",269,[[["lt"],["self"]],["bool"]]],[11,"eq","","",270,[[["muleq"],["self"]],["bool"]]],[11,"eq","","",271,[[["self"],["ne"]],["bool"]]],[11,"eq","","",272,[[["or"],["self"]],["bool"]]],[11,"eq","","",273,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",274,[[["oror"],["self"]],["bool"]]],[11,"eq","","",275,[[["pound"],["self"]],["bool"]]],[11,"eq","","",276,[[["self"],["question"]],["bool"]]],[11,"eq","","",277,[[["rarrow"],["self"]],["bool"]]],[11,"eq","","",278,[[["larrow"],["self"]],["bool"]]],[11,"eq","","",279,[[["self"],["rem"]],["bool"]]],[11,"eq","","",280,[[["remeq"],["self"]],["bool"]]],[11,"eq","","",281,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",282,[[["semi"],["self"]],["bool"]]],[11,"eq","","",283,[[["shl"],["self"]],["bool"]]],[11,"eq","","",284,[[["shleq"],["self"]],["bool"]]],[11,"eq","","",285,[[["shr"],["self"]],["bool"]]],[11,"eq","","",286,[[["shreq"],["self"]],["bool"]]],[11,"eq","","",287,[[["self"],["star"]],["bool"]]],[11,"eq","","",288,[[["self"],["sub"]],["bool"]]],[11,"eq","","",289,[[["subeq"],["self"]],["bool"]]],[11,"eq","","",290,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",291,[[["self"],["brace"]],["bool"]]],[11,"eq","","",292,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",293,[[["self"],["paren"]],["bool"]]],[11,"eq","","",294,[[["group"],["self"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",159,[[["self"],["meta"]],["bool"]]],[11,"ne","","",159,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["metalist"],["self"]],["bool"]]],[11,"ne","","",1,[[["metalist"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",160,[[["nestedmeta"],["self"]],["bool"]]],[11,"ne","","",160,[[["nestedmeta"],["self"]],["bool"]]],[11,"eq","","",6,[[["variant"],["self"]],["bool"]]],[11,"ne","","",6,[[["variant"],["self"]],["bool"]]],[11,"eq","","",161,[[["self"],["fields"]],["bool"]]],[11,"ne","","",161,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",162,[[["visibility"],["self"]],["bool"]]],[11,"ne","","",162,[[["visibility"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"ne","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"eq","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"ne","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"eq","","",163,[[["expr"],["self"]],["bool"]]],[11,"ne","","",163,[[["expr"],["self"]],["bool"]]],[11,"eq","","",16,[[["exprbox"],["self"]],["bool"]]],[11,"ne","","",16,[[["exprbox"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",33,[[["exprmethodcall"],["self"]],["bool"]]],[11,"ne","","",33,[[["exprmethodcall"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",14,[[["exprbinary"],["self"]],["bool"]]],[11,"ne","","",14,[[["exprbinary"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",44,[[["exprtype"],["self"]],["bool"]]],[11,"ne","","",44,[[["exprtype"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",25,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",25,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",48,[[["exprwhile"],["self"]],["bool"]]],[11,"ne","","",48,[[["exprwhile"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",30,[[["exprloop"],["self"]],["bool"]]],[11,"ne","","",30,[[["exprloop"],["self"]],["bool"]]],[11,"eq","","",32,[[["exprmatch"],["self"]],["bool"]]],[11,"ne","","",32,[[["exprmatch"],["self"]],["bool"]]],[11,"eq","","",20,[[["exprclosure"],["self"]],["bool"]]],[11,"ne","","",20,[[["exprclosure"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",15,[[["exprblock"],["self"]],["bool"]]],[11,"ne","","",15,[[["exprblock"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",12,[[["exprassignop"],["self"]],["bool"]]],[11,"ne","","",12,[[["exprassignop"],["self"]],["bool"]]],[11,"eq","","",22,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",22,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",35,[[["exprpath"],["self"]],["bool"]]],[11,"ne","","",35,[[["exprpath"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",17,[[["exprbreak"],["self"]],["bool"]]],[11,"ne","","",17,[[["exprbreak"],["self"]],["bool"]]],[11,"eq","","",21,[[["exprcontinue"],["self"]],["bool"]]],[11,"ne","","",21,[[["exprcontinue"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",40,[[["exprstruct"],["self"]],["bool"]]],[11,"ne","","",40,[[["exprstruct"],["self"]],["bool"]]],[11,"eq","","",38,[[["exprrepeat"],["self"]],["bool"]]],[11,"ne","","",38,[[["exprrepeat"],["self"]],["bool"]]],[11,"eq","","",34,[[["exprparen"],["self"]],["bool"]]],[11,"ne","","",34,[[["exprparen"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",49,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",49,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",47,[[["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["member"]],["bool"]]],[11,"ne","","",164,[[["self"],["member"]],["bool"]]],[11,"eq","","",50,[[["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",54,[[["fieldvalue"],["self"]],["bool"]]],[11,"ne","","",54,[[["fieldvalue"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["label"]],["bool"]]],[11,"ne","","",55,[[["self"],["label"]],["bool"]]],[11,"eq","","",52,[[["block"],["self"]],["bool"]]],[11,"ne","","",52,[[["block"],["self"]],["bool"]]],[11,"eq","","",168,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",168,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",56,[[["self"],["local"]],["bool"]]],[11,"ne","","",56,[[["self"],["local"]],["bool"]]],[11,"eq","","",166,[[["pat"],["self"]],["bool"]]],[11,"ne","","",166,[[["pat"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["patwild"]],["bool"]]],[11,"ne","","",70,[[["self"],["patwild"]],["bool"]]],[11,"eq","","",59,[[["patident"],["self"]],["bool"]]],[11,"ne","","",59,[[["patident"],["self"]],["bool"]]],[11,"eq","","",66,[[["patstruct"],["self"]],["bool"]]],[11,"ne","","",66,[[["patstruct"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",62,[[["patpath"],["self"]],["bool"]]],[11,"ne","","",62,[[["patpath"],["self"]],["bool"]]],[11,"eq","","",67,[[["pattuple"],["self"]],["bool"]]],[11,"ne","","",67,[[["pattuple"],["self"]],["bool"]]],[11,"eq","","",58,[[["patbox"],["self"]],["bool"]]],[11,"ne","","",58,[[["patbox"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["patref"]],["bool"]]],[11,"ne","","",64,[[["self"],["patref"]],["bool"]]],[11,"eq","","",60,[[["patlit"],["self"]],["bool"]]],[11,"ne","","",60,[[["patlit"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",63,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",65,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",65,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"eq","","",69,[[["self"]],["bool"]]],[11,"eq","","",51,[[["arm"],["self"]],["bool"]]],[11,"ne","","",51,[[["arm"],["self"]],["bool"]]],[11,"eq","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"ne","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"eq","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",73,[[["self"],["generics"]],["bool"]]],[11,"ne","","",73,[[["self"],["generics"]],["bool"]]],[11,"eq","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",79,[[["typeparam"],["self"]],["bool"]]],[11,"ne","","",79,[[["typeparam"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",72,[[["constparam"],["self"]],["bool"]]],[11,"ne","","",72,[[["constparam"],["self"]],["bool"]]],[11,"eq","","",316,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",316,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",71,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",71,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",78,[[["traitbound"],["self"]],["bool"]]],[11,"ne","","",78,[[["traitbound"],["self"]],["bool"]]],[11,"eq","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",77,[[["predicatetype"],["self"]],["bool"]]],[11,"ne","","",77,[[["predicatetype"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",176,[[["item"],["self"]],["bool"]]],[11,"ne","","",176,[[["item"],["self"]],["bool"]]],[11,"eq","","",99,[[["itemexterncrate"],["self"]],["bool"]]],[11,"ne","","",99,[[["itemexterncrate"],["self"]],["bool"]]],[11,"eq","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",106,[[["itemstatic"],["self"]],["bool"]]],[11,"ne","","",106,[[["itemstatic"],["self"]],["bool"]]],[11,"eq","","",96,[[["itemconst"],["self"]],["bool"]]],[11,"ne","","",96,[[["itemconst"],["self"]],["bool"]]],[11,"eq","","",100,[[["itemfn"],["self"]],["bool"]]],[11,"ne","","",100,[[["itemfn"],["self"]],["bool"]]],[11,"eq","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",101,[[["itemforeignmod"],["self"]],["bool"]]],[11,"ne","","",101,[[["itemforeignmod"],["self"]],["bool"]]],[11,"eq","","",110,[[["itemtype"],["self"]],["bool"]]],[11,"ne","","",110,[[["itemtype"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"ne","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"eq","","",107,[[["itemstruct"],["self"]],["bool"]]],[11,"ne","","",107,[[["itemstruct"],["self"]],["bool"]]],[11,"eq","","",97,[[["itemenum"],["self"]],["bool"]]],[11,"ne","","",97,[[["itemenum"],["self"]],["bool"]]],[11,"eq","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",108,[[["itemtrait"],["self"]],["bool"]]],[11,"ne","","",108,[[["itemtrait"],["self"]],["bool"]]],[11,"eq","","",109,[[["itemtraitalias"],["self"]],["bool"]]],[11,"ne","","",109,[[["itemtraitalias"],["self"]],["bool"]]],[11,"eq","","",102,[[["itemimpl"],["self"]],["bool"]]],[11,"ne","","",102,[[["itemimpl"],["self"]],["bool"]]],[11,"eq","","",103,[[["itemmacro"],["self"]],["bool"]]],[11,"ne","","",103,[[["itemmacro"],["self"]],["bool"]]],[11,"eq","","",104,[[["self"]],["bool"]]],[11,"eq","","",113,[[["self"]],["bool"]]],[11,"eq","","",178,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",178,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",123,[[["usepath"],["self"]],["bool"]]],[11,"ne","","",123,[[["usepath"],["self"]],["bool"]]],[11,"eq","","",122,[[["usename"],["self"]],["bool"]]],[11,"ne","","",122,[[["usename"],["self"]],["bool"]]],[11,"eq","","",124,[[["userename"],["self"]],["bool"]]],[11,"ne","","",124,[[["userename"],["self"]],["bool"]]],[11,"eq","","",120,[[["useglob"],["self"]],["bool"]]],[11,"ne","","",120,[[["useglob"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"ne","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"eq","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",87,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"ne","","",87,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"eq","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",89,[[["self"]],["bool"]]],[11,"eq","","",177,[[["traititem"],["self"]],["bool"]]],[11,"ne","","",177,[[["traititem"],["self"]],["bool"]]],[11,"eq","","",115,[[["traititemconst"],["self"]],["bool"]]],[11,"ne","","",115,[[["traititemconst"],["self"]],["bool"]]],[11,"eq","","",117,[[["traititemmethod"],["self"]],["bool"]]],[11,"ne","","",117,[[["traititemmethod"],["self"]],["bool"]]],[11,"eq","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"ne","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"eq","","",116,[[["traititemmacro"],["self"]],["bool"]]],[11,"ne","","",116,[[["traititemmacro"],["self"]],["bool"]]],[11,"eq","","",119,[[["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["implitem"]],["bool"]]],[11,"ne","","",175,[[["self"],["implitem"]],["bool"]]],[11,"eq","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"ne","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"eq","","",93,[[["implitemmethod"],["self"]],["bool"]]],[11,"ne","","",93,[[["implitemmethod"],["self"]],["bool"]]],[11,"eq","","",94,[[["implitemtype"],["self"]],["bool"]]],[11,"ne","","",94,[[["implitemtype"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"ne","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"eq","","",92,[[["implitemmacro"],["self"]],["bool"]]],[11,"ne","","",92,[[["implitemmacro"],["self"]],["bool"]]],[11,"eq","","",95,[[["self"]],["bool"]]],[11,"eq","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"ne","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"eq","","",84,[[["fndecl"],["self"]],["bool"]]],[11,"ne","","",84,[[["fndecl"],["self"]],["bool"]]],[11,"eq","","",173,[[["fnarg"],["self"]],["bool"]]],[11,"ne","","",173,[[["fnarg"],["self"]],["bool"]]],[11,"eq","","",83,[[["argselfref"],["self"]],["bool"]]],[11,"ne","","",83,[[["argselfref"],["self"]],["bool"]]],[11,"eq","","",82,[[["argself"],["self"]],["bool"]]],[11,"ne","","",82,[[["argself"],["self"]],["bool"]]],[11,"eq","","",81,[[["argcaptured"],["self"]],["bool"]]],[11,"ne","","",81,[[["argcaptured"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["file"]],["bool"]]],[11,"ne","","",125,[[["self"],["file"]],["bool"]]],[11,"eq","","",126,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",181,[[["lit"],["self"]],["bool"]]],[11,"ne","","",181,[[["lit"],["self"]],["bool"]]],[11,"eq","","",296,[[["self"]],["bool"]]],[11,"eq","","",297,[[["self"]],["bool"]]],[11,"eq","","",298,[[["self"]],["bool"]]],[11,"eq","","",299,[[["self"]],["bool"]]],[11,"eq","","",300,[[["self"]],["bool"]]],[11,"eq","","",301,[[["self"]],["bool"]]],[11,"eq","","",127,[[["self"]],["bool"]]],[11,"eq","","",128,[[["self"]],["bool"]]],[11,"eq","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",180,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",179,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",183,[[["macrodelimiter"],["self"]],["bool"]]],[11,"ne","","",183,[[["macrodelimiter"],["self"]],["bool"]]],[11,"eq","","",129,[[["self"]],["bool"]]],[11,"eq","","",133,[[["deriveinput"],["self"]],["bool"]]],[11,"ne","","",133,[[["deriveinput"],["self"]],["bool"]]],[11,"eq","","",184,[[["data"],["self"]],["bool"]]],[11,"ne","","",184,[[["data"],["self"]],["bool"]]],[11,"eq","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",130,[[["dataenum"],["self"]],["bool"]]],[11,"ne","","",130,[[["dataenum"],["self"]],["bool"]]],[11,"eq","","",132,[[["dataunion"],["self"]],["bool"]]],[11,"ne","","",132,[[["dataunion"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["binop"]],["bool"]]],[11,"ne","","",185,[[["self"],["binop"]],["bool"]]],[11,"eq","","",186,[[["self"],["unop"]],["bool"]]],[11,"ne","","",186,[[["self"],["unop"]],["bool"]]],[11,"eq","","",189,[[["self"],["type"]],["bool"]]],[11,"ne","","",189,[[["self"],["type"]],["bool"]]],[11,"eq","","",147,[[["typeslice"],["self"]],["bool"]]],[11,"ne","","",147,[[["typeslice"],["self"]],["bool"]]],[11,"eq","","",136,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",136,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",146,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",146,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",137,[[["typebarefn"],["self"]],["bool"]]],[11,"ne","","",137,[[["typebarefn"],["self"]],["bool"]]],[11,"eq","","",142,[[["typenever"],["self"]],["bool"]]],[11,"ne","","",142,[[["typenever"],["self"]],["bool"]]],[11,"eq","","",149,[[["typetuple"],["self"]],["bool"]]],[11,"ne","","",149,[[["typetuple"],["self"]],["bool"]]],[11,"eq","","",144,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",144,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",139,[[["typeimpltrait"],["self"]],["bool"]]],[11,"ne","","",139,[[["typeimpltrait"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",138,[[["typegroup"],["self"]],["bool"]]],[11,"ne","","",138,[[["typegroup"],["self"]],["bool"]]],[11,"eq","","",140,[[["typeinfer"],["self"]],["bool"]]],[11,"ne","","",140,[[["typeinfer"],["self"]],["bool"]]],[11,"eq","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",150,[[["self"]],["bool"]]],[11,"eq","","",134,[[["abi"],["self"]],["bool"]]],[11,"ne","","",134,[[["abi"],["self"]],["bool"]]],[11,"eq","","",135,[[["barefnarg"],["self"]],["bool"]]],[11,"ne","","",135,[[["barefnarg"],["self"]],["bool"]]],[11,"eq","","",187,[[["barefnargname"],["self"]],["bool"]]],[11,"ne","","",187,[[["barefnargname"],["self"]],["bool"]]],[11,"eq","","",188,[[["returntype"],["self"]],["bool"]]],[11,"ne","","",188,[[["returntype"],["self"]],["bool"]]],[11,"eq","","",155,[[["self"],["path"]],["bool"]]],[11,"ne","","",155,[[["self"],["path"]],["bool"]]],[11,"eq","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",191,[[["patharguments"],["self"]],["bool"]]],[11,"ne","","",191,[[["patharguments"],["self"]],["bool"]]],[11,"eq","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",151,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",151,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",152,[[["binding"],["self"]],["bool"]]],[11,"ne","","",152,[[["binding"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",153,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",157,[[["qself"],["self"]],["bool"]]],[11,"ne","","",157,[[["qself"],["self"]],["bool"]]],[11,"eq","syn::buffer","",303,[[["cursor"],["self"]],["bool"]]],[11,"ne","","",303,[[["cursor"],["self"]],["bool"]]],[11,"eq","syn::punctuated","",306,[[["punctuated"],["self"]],["bool"]]],[11,"ne","","",306,[[["punctuated"],["self"]],["bool"]]],[11,"partial_cmp","syn","",126,[[["self"],["lifetime"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",192,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",250,[[["self"]]]],[11,"deref","","",251,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",254,[[["self"]]]],[11,"deref","","",256,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",259,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",269,[[["self"]]]],[11,"deref","","",272,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",279,[[["self"]]]],[11,"deref","","",282,[[["self"]]]],[11,"deref","","",287,[[["self"]]]],[11,"deref","","",288,[[["self"]]]],[11,"deref","","",290,[[["self"]]]],[11,"deref","syn::parse","",312,[[["self"]]]],[11,"deref_mut","syn::token","",192,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",250,[[["self"]]]],[11,"deref_mut","","",251,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",254,[[["self"]]]],[11,"deref_mut","","",256,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",259,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",269,[[["self"]]]],[11,"deref_mut","","",272,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",279,[[["self"]]]],[11,"deref_mut","","",282,[[["self"]]]],[11,"deref_mut","","",287,[[["self"]]]],[11,"deref_mut","","",288,[[["self"]]]],[11,"deref_mut","","",290,[[["self"]]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",244,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",254,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",255,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",256,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",257,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",258,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",259,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",260,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",261,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",262,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",263,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",264,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",265,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",266,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",267,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",268,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",269,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",270,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",271,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",272,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",273,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",274,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",275,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",276,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",277,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",278,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",279,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",280,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",281,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",282,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",283,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",284,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",285,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",286,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",287,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",290,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",291,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",292,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",293,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",294,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",316,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",295,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",317,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",296,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",297,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",298,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",299,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",300,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",306,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",313,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",314,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",313,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",314,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",306,[[["self"],["usize"]]]],[11,"index_mut","","",306,[[["self"],["usize"]]]],[11,"hash","syn::token","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","","",283,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",290,[[["self"],["h"]]]],[11,"hash","","",291,[[["self"],["h"]]]],[11,"hash","","",292,[[["self"],["h"]]]],[11,"hash","","",293,[[["self"],["h"]]]],[11,"hash","","",294,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["__h"]]]],[11,"hash","","",159,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",162,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",163,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",168,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",166,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",167,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",169,[[["self"],["__h"]]]],[11,"hash","","",79,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","","",316,[[["self"],["__h"]]]],[11,"hash","","",295,[[["self"],["__h"]]]],[11,"hash","","",317,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",171,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",170,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",176,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",96,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",101,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",97,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",174,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",173,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["__h"]]]],[11,"hash","","",296,[[["self"],["h"]]]],[11,"hash","","",297,[[["self"],["h"]]]],[11,"hash","","",298,[[["self"],["h"]]]],[11,"hash","","",299,[[["self"],["h"]]]],[11,"hash","","",300,[[["self"],["h"]]]],[11,"hash","","",301,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["__h"]]]],[11,"hash","","",180,[[["self"],["__h"]]]],[11,"hash","","",179,[[["self"],["__h"]]]],[11,"hash","","",183,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",184,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",185,[[["self"],["__h"]]]],[11,"hash","","",186,[[["self"],["__h"]]]],[11,"hash","","",189,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",187,[[["self"],["__h"]]]],[11,"hash","","",188,[[["self"],["__h"]]]],[11,"hash","","",155,[[["self"],["__h"]]]],[11,"hash","","",156,[[["self"],["__h"]]]],[11,"hash","","",191,[[["self"],["__h"]]]],[11,"hash","","",190,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]],[11,"hash","","",152,[[["self"],["__h"]]]],[11,"hash","","",153,[[["self"],["__h"]]]],[11,"hash","","",154,[[["self"],["__h"]]]],[11,"hash","","",157,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",306,[[["self"],["__h"]]]],[11,"from_iter","","",306,[[["intoiterator"]],["self"]]],[11,"from_iter","","",306,[[["intoiterator"]],["self"]]],[11,"description","syn","",314,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",279,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",280,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",281,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",282,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",290,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",316,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",295,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",317,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",170,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",105,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",103,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",104,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",296,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",297,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",298,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",299,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",300,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",301,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",149,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",148,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",155,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",306,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",305,[[["tokenstream"],["self"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",315,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",315,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",315,[[["span"],["self"]]]],[11,"visit_abi","syn::visit","",308,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["argselfref"],["self"]]]],[11,"visit_arm","","",308,[[["arm"],["self"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["block"],["self"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["constparam"],["self"]]]],[11,"visit_constraint","","",308,[[["constraint"],["self"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",308,[[["expr"],["self"]]]],[11,"visit_expr_array","","",308,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",308,[[["exprassign"],["self"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["exprbinary"],["self"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["exprbox"],["self"]]]],[11,"visit_expr_break","","",308,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",308,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["foreignitemstatic"],["self"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["implitemmacro"],["self"]]]],[11,"visit_impl_item_method","","",308,[[["implitemmethod"],["self"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["item"],["self"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",308,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["itemmacro2"],["self"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["itemstatic"],["self"]]]],[11,"visit_item_struct","","",308,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["local"],["self"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["macrodelimiter"],["self"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["meta"],["self"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["metanamevalue"],["self"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",308,[[["patmacro"],["self"]]]],[11,"visit_pat_path","","",308,[[["patpath"],["self"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["patverbatim"],["self"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["traitboundmodifier"],["self"]]]],[11,"visit_trait_item","","",308,[[["traititem"],["self"]]]],[11,"visit_trait_item_const","","",308,[[["traititemconst"],["self"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["traititemverbatim"],["self"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["typebarefn"],["self"]]]],[11,"visit_type_group","","",308,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",308,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",308,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",308,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",308,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["typetuple"],["self"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["usename"],["self"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["usetree"],["self"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",324,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",324,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemExistential"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExistential"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["syn_mid"] = {"doc":"Providing the features between \"full\" and \"derive\" of syn.","i":[[3,"Receiver","syn_mid","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",0,null],[12,"reference","","",0,null],[12,"mutability","","",0,null],[12,"self_token","","",0,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",1,null],[12,"by_ref","","",1,null],[12,"mutability","","",1,null],[12,"ident","","",1,null],[3,"PatPath","","A path pattern like `Color::Red`.",null,null],[12,"attrs","","",2,null],[12,"path","","",2,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",3,null],[12,"and_token","","",3,null],[12,"mutability","","",3,null],[12,"pat","","",3,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",4,null],[12,"path","","",4,null],[12,"brace_token","","",4,null],[12,"fields","","",4,null],[12,"dot2_token","","",4,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",5,null],[12,"paren_token","","",5,null],[12,"elems","","",5,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",6,null],[12,"path","","",6,null],[12,"pat","","",6,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",7,null],[12,"pat","","",7,null],[12,"colon_token","","",7,null],[12,"ty","","",7,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",8,null],[12,"underscore_token","","",8,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",9,null],[12,"member","","",9,null],[12,"colon_token","","",9,null],[12,"pat","","",9,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",10,null],[12,"stmts","","Statements in a block",10,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",11,null],[12,"vis","","",11,null],[12,"sig","","",11,null],[12,"block","","",11,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",12,null],[12,"asyncness","","",12,null],[12,"unsafety","","",12,null],[12,"abi","","",12,null],[12,"fn_token","","",12,null],[12,"ident","","",12,null],[12,"generics","","",12,null],[12,"paren_token","","",12,null],[12,"inputs","","",12,null],[12,"variadic","","",12,null],[12,"output","","",12,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",13,null],[13,"Typed","","A function argument accepted by pattern and type.",13,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",14,null],[13,"Path","","A path pattern like `Color::Red`.",14,null],[13,"Reference","","A reference pattern: `&mut var`.",14,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",14,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",14,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",14,null],[13,"Type","","A type ascription pattern: `foo: f64`.",14,null],[13,"Wild","","A pattern that matches any value: `_`.",14,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",13,[[["receiver"]],["fnarg"]]],[11,"from","","",13,[[["pattype"]],["fnarg"]]],[11,"from","","",14,[[["patident"]],["pat"]]],[11,"from","","",14,[[["patpath"]],["pat"]]],[11,"from","","",14,[[["patreference"]],["pat"]]],[11,"from","","",14,[[["patstruct"]],["pat"]]],[11,"from","","",14,[[["pattuple"]],["pat"]]],[11,"from","","",14,[[["pattuplestruct"]],["pat"]]],[11,"from","","",14,[[["pattype"]],["pat"]]],[11,"from","","",14,[[["patwild"]],["pat"]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",0,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]]],"p":[[3,"Receiver"],[3,"PatIdent"],[3,"PatPath"],[3,"PatReference"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Block"],[3,"ItemFn"],[3,"Signature"],[4,"FnArg"],[4,"Pat"]]};
searchIndex["synstructure"] = {"doc":"This crate provides helper types for matching against enum…","i":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",null,null],[12,"binding","","The name which this BindingInfo will bind to.",0,null],[12,"style","","The type of binding which this BindingInfo will create.",0,null],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",null,null],[12,"attrs","","",1,null],[12,"ident","","",1,null],[12,"fields","","",1,null],[12,"discriminant","","",1,null],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",null,null],[12,"prefix","","",2,null],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",null,null],[4,"AddBounds","","Changes how bounds are added",null,null],[13,"Both","","Add for fields and generics",3,null],[13,"Fields","","Fields only",3,null],[13,"Generics","","Generics only",3,null],[13,"None","","None",3,null],[4,"BindStyle","","The type of binding to use when generating a pattern.",null,null],[13,"Move","","`x`",4,null],[13,"MoveMut","","`mut x`",4,null],[13,"Ref","","`ref x`",4,null],[13,"RefMut","","`ref mut x`",4,null],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",null,[[["display"]],["string"]]],[8,"MacroResult","","Helper trait describing values which may be returned by…",null,null],[10,"into_result","","Convert this result into a `Result` for further processing…",5,[[],[["tokenstream"],["result",["tokenstream"]]]]],[11,"into_stream","","Convert this result into a `proc_macro::TokenStream`,…",5,[[],["tokenstream"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["self"]]],[11,"try_new","","Create a new `Structure` with the variants and fields from…",6,[[["deriveinput"]],["result"]]],[11,"variants","","Returns a slice of the variants in this Structure.",6,[[["self"]]]],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",6,[[["self"]]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",6,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",6,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",6,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",6,[[["i"],["self"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",6,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"add_where_predicate","","Specify additional where predicate bounds which should be…",6,[[["self"],["wherepredicate"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by…",6,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",6,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",6,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",6,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",6,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",6,[[["traitbound"],["addbounds"],["option"],["self"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",6,[[["totokens"],["self"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",6,[[["tokenstream"],["self"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",null,null],[14,"decl_attribute","","The `decl_attribute!` macro declares a custom attribute…",null,null],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",6,[[["self"]],["structure"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["variantast"],["self"]],["bool"]]],[11,"ne","","",1,[[["variantast"],["self"]],["bool"]]],[11,"eq","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"ne","","",2,[[["variantinfo"],["self"]],["bool"]]],[11,"eq","","",6,[[["structure"],["self"]],["bool"]]],[11,"ne","","",6,[[["structure"],["self"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"p":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[8,"MacroResult"],[3,"Structure"]]};
searchIndex["thiserror"] = {"doc":"This library provides a convenient derive macro for the…","i":[[24,"Error","thiserror","",null,null]],"p":[]};
searchIndex["thiserror_impl"] = {"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a `CachedThreadLocal`.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[11,"new","","Creates a new empty `CachedThreadLocal`.",0,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `ThreadLocal`.",1,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"into_iter","","",0,[[],["cachedintoiter"]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"next","","",3,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",4,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"default","","",0,[[],["cachedthreadlocal"]]],[11,"default","","",1,[[],["threadlocal"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"CachedThreadLocal"],[3,"ThreadLocal"],[3,"CachedIntoIter"],[3,"CachedIterMut"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"] = {"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",null,null],[3,"Timespec","","A record specifying a time value in seconds and…",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its…",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format…",null,[[["str"]],[["result",["tm","parseerror"]],["tm"],["parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",null,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",null,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",null,[[],["f64"]]],[5,"tzset","","",null,[[]]],[5,"empty_tm","","",null,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",null,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",null,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",null,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",null,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",null,[[["str"],["tm"]],[["parseerror"],["string"],["result",["string","parseerror"]]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],[["option",["duration"]],["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],[["outofrangeerror"],["duration"],["result",["duration","outofrangeerror"]]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[["outofrangeerror"],["result",["stdduration","outofrangeerror"]],["stdduration"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["precisetime"],["self"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["str"],["self"]],[["tmfmt"],["result",["tmfmt","parseerror"]],["parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"ne","","",6,[[["outofrangeerror"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",2,[[["parseerror"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"div","","",3,[[["i32"]],["duration"]]],[11,"sub","","",3,[[["duration"]],["duration"]]],[11,"sub","","",0,[[["duration"]],["timespec"]]],[11,"sub","","",0,[[["timespec"]],["duration"]]],[11,"sub","","",5,[[["steadytime"]],["duration"]]],[11,"sub","","",5,[[["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"sub","","",1,[[["tm"]],["duration"]]],[11,"add","","",3,[[["duration"]],["duration"]]],[11,"add","","",0,[[["duration"]],["timespec"]]],[11,"add","","",5,[[["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["duration"]],["tm"]]],[11,"mul","","",3,[[["i32"]],["duration"]]],[11,"neg","","",3,[[],["duration"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tokio"] = {"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[5,"spawn","tokio","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[0,"io","","Traits, helpers, and type definitions for asynchronous I/O…",null,null],[3,"PollEvented","tokio::io","Associates an I/O resource that implements the…",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that…",null,null],[11,"new","","Creates a new `PollEvented` associated with the default…",0,[[["e"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",0,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",0,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",0,[[],["result"]]],[11,"poll_read_ready","","Checks the I/O resource's read readiness state.",0,[[["ready"],["context"],["self"]],[["result",["ready"]],["poll",["result"]]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",0,[[["ready"],["context"],["self"]],["result"]]],[11,"poll_write_ready","","Checks the I/O resource's write readiness state.",0,[[["context"],["self"]],[["result",["ready"]],["poll",["result"]]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",0,[[["context"],["self"]],["result"]]],[11,"new","","Registers the I/O resource with the default reactor.",1,[[["t"]],[["registration"],["result",["registration"]]]]],[11,"deregister","","Deregisters the I/O resource from the reactor it is…",1,[[["self"],["t"]],["result"]]],[11,"poll_read_ready","","Polls for events on the I/O resource's read readiness…",1,[[["context"],["self"]],[["result",["ready"]],["poll",["result"]]]]],[11,"take_read_ready","","Consume any pending read readiness event.",1,[[["self"]],[["result",["option"]],["option",["ready"]]]]],[11,"poll_write_ready","","Polls for events on the I/O resource's write readiness…",1,[[["context"],["self"]],[["result",["ready"]],["poll",["result"]]]]],[11,"take_write_ready","","Consumes any pending write readiness event.",1,[[["self"]],[["result",["option"]],["option",["ready"]]]]],[8,"AsyncBufRead","","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",2,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",2,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",3,[[["self"]],["bool"]]],[10,"poll_read","","Attempts to read from the `AsyncRead` into `buf`.",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",3,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",4,[[["seekfrom"],["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"poll_complete","","Waits for a seek operation to complete.",4,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",5,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",null,null],[3,"TcpListener","tokio::net","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket",null,null],[0,"tcp","","TCP utility types",null,null],[3,"Incoming","tokio::net::tcp","Stream returned by the `TcpListener::incoming` function…",null,null],[3,"ReadHalf","","Read half of a `TcpStream`.",null,null],[3,"WriteHalf","","Write half of a `TcpStream`.",null,null],[11,"bind","tokio::net","Creates a new TcpListener which will be bound to the…",6,[[["tosocketaddrs"]]]],[11,"accept","","Accepts a new incoming connection from this listener.",6,[[["self"]]]],[11,"poll_accept","","Attempts to poll `SocketAddr` and `TcpStream` bound to…",6,[[["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"from_std","","Creates a new TCP listener from the standard library's TCP…",6,[[["tcplistener"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",6,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"incoming","","Returns a stream over the connections being received on…",6,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["u32"],["self"]],["result"]]],[11,"poll_accept","tokio::net::tcp","Attempts to poll `TcpStream` by polling inner…",7,[[["pin"],["self"],["context"]],[["result",["tcpstream"]],["poll",["result"]]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",8,[[["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",8,[[["self"]]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",9,[[["tosocketaddrs"]]]],[11,"from_std","","Creates new `TcpStream` from a `std::net::TcpStream`.",9,[[["tcpstream"]],[["result",["tcpstream"]],["tcpstream"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",9,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",9,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing…",9,[[["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",9,[[["self"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",9,[[["self"],["shutdown"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",9,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",9,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",9,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",9,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",9,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",9,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["u32"],["self"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",9,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",9,[[["option",["duration"]],["self"],["duration"]],["result"]]],[11,"split","","Splits a `TcpStream` into a read half and a write half,…",9,[[["self"]]]],[0,"udp","","UDP utility types.",null,null],[3,"RecvHalf","tokio::net::udp","The recv half after `split`.",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same socket,…",null,null],[12,"0","","",10,null],[12,"1","","",10,null],[3,"SendHalf","","The send half after `split`.",null,null],[11,"bind","tokio::net","This function will create a new UDP socket and attempt to…",11,[[["tosocketaddrs"]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",11,[[["udpsocket"]],[["udpsocket"],["result",["udpsocket"]]]]],[11,"split","","Splits the `UdpSocket` into a receive half and a send…",11,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",11,[[["self"]],[["result",["socketaddr"]],["socketaddr"]]]],[11,"connect","","Connects the UDP socket setting the default destination…",11,[[["self"],["tosocketaddrs"]]]],[11,"send","","Returns a future that sends data on the socket to the…",11,[[["self"]]]],[11,"recv","","Returns a future that receives a single datagram message…",11,[[["self"]]]],[11,"send_to","","Returns a future that sends data on the socket to the…",11,[[["tosocketaddrs"],["self"]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",11,[[["self"]]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",11,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",11,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",11,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",11,[[["self"],["bool"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",11,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",11,[[["u32"],["self"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",11,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",11,[[["self"],["bool"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",11,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",11,[[["u32"],["self"]],["result"]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",11,[[["ipv4addr"],["self"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",11,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",11,[[["ipv4addr"],["self"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",11,[[["u32"],["self"],["ipv6addr"]],["result"]]],[11,"reunite","tokio::net::udp","Attempts to put the two \"halves\" of a `UdpSocket` back…",12,[[["sendhalf"]],[["udpsocket"],["reuniteerror"],["result",["udpsocket","reuniteerror"]]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",12,[[["self"]]]],[11,"recv","","Returns a future that receives a single datagram message…",12,[[["self"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a `UdpSocket` back…",13,[[["recvhalf"]],[["udpsocket"],["reuniteerror"],["result",["udpsocket","reuniteerror"]]]]],[11,"send_to","","Returns a future that sends data on the socket to the…",13,[[["socketaddr"],["self"]]]],[11,"send","","Returns a future that sends data on the socket to the…",13,[[["self"]]]],[8,"ToSocketAddrs","tokio::net","Converts or resolves without blocking to one or more…",null,null],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",null,null],[8,"AsyncBufRead","tokio::prelude","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",2,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",2,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…",3,[[["self"]],["bool"]]],[10,"poll_read","tokio::prelude","Attempts to read from the `AsyncRead` into `buf`.",3,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_read_buf","tokio::io","Pulls some bytes from this source into the specified…",3,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[8,"AsyncWrite","tokio::prelude","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",5,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","tokio::io","Writes a `Buf` into this value, returning how many bytes…",5,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"TryCurrentError","","Error returned by `try_current` when no Runtime has been…",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"new","","Returns a new runtime builder initialized with default…",14,[[],["builder"]]],[11,"enable_all","","Enables both I/O and time drivers.",14,[[["self"]],["self"]]],[11,"num_threads","","Sets the maximum number of worker threads for the…",14,[[["self"],["usize"]],["self"]]],[11,"core_threads","","Sets the core number of worker threads for the `Runtime`'s…",14,[[["self"],["usize"]],["self"]]],[11,"max_threads","","Specifies limit for threads, spawned by the Runtime.",14,[[["self"],["usize"]],["self"]]],[11,"thread_name","","Sets name of threads spawned by the `Runtime`'s thread pool.",14,[[["self"]],["self"]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",14,[[["self"],["usize"]],["self"]]],[11,"on_thread_start","","Executes function `f` after each thread is started but…",14,[[["self"],["f"]],["self"]]],[11,"on_thread_stop","","Executes function `f` before each thread stops.",14,[[["self"],["f"]],["self"]]],[11,"build","","Creates the configured `Runtime`.",14,[[["self"]],[["runtime"],["result",["runtime"]]]]],[11,"enable_io","","Enables the I/O driver.",14,[[["self"]],["self"]]],[11,"enable_time","","Enables the time driver.",14,[[["self"]],["self"]]],[11,"basic_scheduler","","Sets runtime to use a simpler scheduler that runs all…",14,[[["self"]],["self"]]],[11,"enter","","Enter the runtime context.",15,[[["self"],["f"]],["r"]]],[11,"current","","Returns a Handle view over the currently running Runtime",15,[[],["self"]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",15,[[],[["result",["trycurrenterror"]],["trycurrenterror"]]]],[11,"spawn","","Spawns a future onto the Tokio runtime.",15,[[["self"],["f"]],["joinhandle"]]],[11,"new","","Create a new runtime instance with default configuration…",16,[[],[["runtime"],["result",["runtime"]]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",16,[[["self"],["f"]],["joinhandle"]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is…",16,[[["self"],["future"]]]],[11,"enter","","Enter the runtime context.",16,[[["self"],["f"]],["r"]]],[11,"handle","","Return a handle to the runtime's spawner.",16,[[["self"]],["handle"]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most `duration` for…",16,[[["duration"]]]],[0,"task","tokio","Asynchronous green-threads.",null,null],[3,"JoinError","tokio::task","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its…",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[0,"time","tokio","Utilities for tracking time.",null,null],[3,"Duration","tokio::time","A `Duration` type to represent a span of time, typically…",null,null],[3,"DelayQueue","","A queue of delayed elements.",null,null],[3,"Delay","","Future returned by `delay_until` and `delay_for`.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Instant","","A measurement of the system clock, useful for talking to…",null,null],[3,"Interval","","Stream returned by `interval` and `interval_at`.",null,null],[3,"Elapsed","","Error returned by `Timeout`.",null,null],[3,"Timeout","","Future returned by `timeout` and `timeout_at`.",null,null],[5,"delay_for","","Waits until `duration` has elapsed.",null,[[["duration"]],["delay"]]],[5,"delay_until","","Waits until `deadline` is reached.",null,[[["instant"]],["delay"]]],[5,"interval","","Creates new `Interval` that yields with interval of…",null,[[["duration"]],["interval"]]],[5,"interval_at","","Creates new `Interval` that yields with interval of…",null,[[["instant"],["duration"]],["interval"]]],[5,"timeout","","Require a `Future` to complete before the specified…",null,[[["t"],["duration"]],["timeout"]]],[5,"timeout_at","","Require a `Future` to complete before the specified…",null,[[["instant"],["t"]],["timeout"]]],[0,"delay_queue","","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio::time::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a `DelayQueue`.",null,null],[11,"new","","Creates a new, empty, `DelayQueue`",17,[[],["delayqueue"]]],[11,"with_capacity","","Creates a new, empty, `DelayQueue` with the specified…",17,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Inserts `value` into the queue set to expire at a specific…",17,[[["self"],["t"],["instant"]],["key"]]],[11,"poll_expired","","Attempts to pull out the next value of the delay queue,…",17,[[["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"insert","","Inserts `value` into the queue set to expire after the…",17,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Removes the item associated with `key` from the queue.",17,[[["key"],["self"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",17,[[["key"],["self"],["instant"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",17,[[["key"],["self"],["duration"]]]],[11,"clear","","Clears the queue, removing all items.",17,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",17,[[["self"]],["usize"]]],[11,"len","","Returns the number of elements currently in the queue.",17,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more items to…",17,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",17,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",18,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",18,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",18,[[],["t"]]],[11,"deadline","","Returns the deadline that the expiration was set to.",18,[[["self"]],["instant"]]],[11,"deadline","tokio::time","Returns the instant at which the future will complete.",19,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns `true` if the `Delay` has elapsed",19,[[["self"]],["bool"]]],[11,"reset","","Resets the `Delay` instance to a new deadline.",19,[[["self"],["instant"]]]],[11,"shutdown","","Creates an error representing a shutdown timer.",20,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",20,[[["self"]],["bool"]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",20,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",20,[[["self"]],["bool"]]],[11,"now","","Returns an instant corresponding to \"now\".",21,[[],["instant"]]],[11,"from_std","","Create a `tokio::time::Instant` from a `std::time::Instant`.",21,[[["instant"]],["instant"]]],[11,"into_std","","Convert the value into a `std::time::Instant`.",21,[[],["instant"]]],[11,"duration_since","","Returns the amount of time elapsed from another instant to…",21,[[["instant"],["self"]],["duration"]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant to…",21,[[["instant"],["self"]],[["option",["duration"]],["duration"]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant to…",21,[[["instant"],["self"]],["duration"]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was…",21,[[["self"]],["duration"]]],[11,"checked_add","","Returns `Some(t)` where `t` is the time `self + duration`…",21,[[["self"],["duration"]],[["option",["instant"]],["instant"]]]],[11,"checked_sub","","Returns `Some(t)` where `t` is the time `self - duration`…",21,[[["self"],["duration"]],[["option",["instant"]],["instant"]]]],[11,"tick","","Completes when the next instant in the interval has been…",22,[[["self"]]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",23,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",23,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",23,[[],["t"]]],[14,"pin","tokio","Pins a value on the stack.",null,null],[14,"scoped_thread_local","","Set a reference as a thread-local",null,null],[11,"from","tokio::io","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio::net","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","tokio::net::tcp","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","tokio::net::udp","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","tokio::runtime","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","tokio::task","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","tokio::time","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","tokio::time::delay_queue","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","tokio::time","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","tokio::time::delay_queue","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"sub_assign","tokio::time","",28,[[["self"],["duration"]]]],[11,"clone","","",28,[[["self"]],["duration"]]],[11,"eq","","",28,[[["self"],["duration"]],["bool"]]],[11,"ne","","",28,[[["self"],["duration"]],["bool"]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"div","","",28,[[["u32"]],["duration"]]],[11,"cmp","","",28,[[["self"],["duration"]],["ordering"]]],[11,"mul","","",28,[[["u32"]],["duration"]]],[11,"mul_assign","","",28,[[["self"],["u32"]]]],[11,"sum","","",28,[[["i"]],["duration"]]],[11,"sum","","",28,[[["i"]],["duration"]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"sub","","",28,[[["duration"]],["duration"]]],[11,"add","","",28,[[["duration"]],["duration"]]],[11,"default","","",28,[[],["duration"]]],[11,"div_assign","","",28,[[["self"],["u32"]]]],[11,"add_assign","","",28,[[["self"],["duration"]]]],[11,"partial_cmp","","",28,[[["self"],["duration"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",28,[[["self"],["duration"]],["bool"]]],[11,"le","","",28,[[["self"],["duration"]],["bool"]]],[11,"gt","","",28,[[["self"],["duration"]],["bool"]]],[11,"ge","","",28,[[["self"],["duration"]],["bool"]]],[11,"poll_read","tokio::io","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","tokio::net::tcp","",8,[[["self"]],["bool"]]],[11,"poll_read","","",8,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"prepare_uninitialized_buffer","tokio::net","",9,[[["self"]],["bool"]]],[11,"poll_read","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write","tokio::io","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",0,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","tokio::net::tcp","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",24,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",24,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_write","tokio::net","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","",9,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_shutdown","","",9,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"drop","tokio::io","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","tokio::task","",27,[[["self"]]]],[11,"as_ref","tokio::net::tcp","",8,[[["self"]],["tcpstream"]]],[11,"as_ref","","",24,[[["self"]],["tcpstream"]]],[11,"as_ref","tokio::net::udp","",13,[[["self"]],["udpsocket"]]],[11,"as_ref","","",12,[[["self"]],["udpsocket"]]],[11,"from","tokio::time","",21,[[["instant"]],["instant"]]],[11,"clone","tokio::runtime","",15,[[["self"]],["handle"]]],[11,"clone","tokio::time::delay_queue","",30,[[["self"]],["key"]]],[11,"clone","tokio::time","",21,[[["self"]],["instant"]]],[11,"default","tokio::runtime","",14,[[],["self"]]],[11,"default","tokio::time::delay_queue","",17,[[],["delayqueue"]]],[11,"cmp","tokio::time","",21,[[["instant"],["self"]],["ordering"]]],[11,"eq","","",21,[[["instant"],["self"]],["bool"]]],[11,"ne","","",21,[[["instant"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["elapsed"]],["bool"]]],[11,"ne","","",29,[[["self"],["elapsed"]],["bool"]]],[11,"partial_cmp","","",21,[[["instant"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",21,[[["instant"],["self"]],["bool"]]],[11,"le","","",21,[[["instant"],["self"]],["bool"]]],[11,"gt","","",21,[[["instant"],["self"]],["bool"]]],[11,"ge","","",21,[[["instant"],["self"]],["bool"]]],[11,"fmt","tokio::io","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::tcp","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::udp","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time::delay_queue","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::udp","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"sub","","",21,[[["instant"]],["duration"]]],[11,"sub","","",21,[[["duration"]],["instant"]]],[11,"add","","",21,[[["duration"]],["instant"]]],[11,"add_assign","","",21,[[["self"],["duration"]]]],[11,"sub_assign","","",21,[[["self"],["duration"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",6,[[["tcplistener"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",9,[[["tcpstream"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",11,[[["udpsocket"]],["result"]]],[11,"as_raw_fd","","",6,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",11,[[["self"]],["rawfd"]]],[11,"poll","tokio::task","",27,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::time","",19,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",23,[[["pin"],["self"],["context"]],["poll"]]],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…",3,[[["self"]],["bool"]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",3,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",5,[[["pin"],["b"],["self"],["context"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being…",26,[[["self"]],["bool"]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",26,[[["self"]],["bool"]]],[11,"into_panic","","Consumes the join error, returning the object with which…",26,[[],[["any"],["box",["any"]]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which…",26,[[],[["joinerror"],["result",["box","joinerror"]],["box",["any"]]]]],[18,"SECOND","tokio::time","The duration of one second.",28,null],[18,"MILLISECOND","","The duration of one millisecond.",28,null],[18,"MICROSECOND","","The duration of one microsecond.",28,null],[18,"NANOSECOND","","The duration of one nanosecond.",28,null],[11,"new","","Creates a new `Duration` from the specified number of…",28,[[["u32"],["u64"]],["duration"]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",28,[[["u64"]],["duration"]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",28,[[["u64"]],["duration"]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",28,[[["u64"]],["duration"]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",28,[[["u64"]],["duration"]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",28,[[["self"]],["u64"]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",28,[[["self"]],["u32"]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",28,[[["self"]],["u32"]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",28,[[["self"]],["u32"]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",28,[[["self"]],["u128"]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",28,[[["self"]],["u128"]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",28,[[["self"]],["u128"]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",28,[[["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",28,[[["duration"]],[["option",["duration"]],["duration"]]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",28,[[["u32"]],[["option",["duration"]],["duration"]]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",28,[[["u32"]],[["option",["duration"]],["duration"]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",28,[[["self"]],["f64"]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",28,[[["self"]],["f32"]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",28,[[["f64"]],["duration"]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",28,[[["f32"]],["duration"]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",28,[[["f64"]],["duration"]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",28,[[["f32"]],["duration"]]],[11,"div_f64","","Divide `Duration` by `f64`.",28,[[["f64"]],["duration"]]],[11,"div_f32","","Divide `Duration` by `f32`.",28,[[["f32"]],["duration"]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",28,[[["duration"]],["f64"]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",28,[[["duration"]],["f32"]]]],"p":[[3,"PollEvented"],[3,"Registration"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[3,"TcpListener"],[3,"Incoming"],[3,"ReadHalf"],[3,"TcpStream"],[3,"ReuniteError"],[3,"UdpSocket"],[3,"RecvHalf"],[3,"SendHalf"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"DelayQueue"],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"WriteHalf"],[3,"TryCurrentError"],[3,"JoinError"],[3,"JoinHandle"],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
searchIndex["trust_dns_proto"] = {"doc":"Trust-DNS Protocol library","i":[[3,"ExtBacktrace","trust_dns_proto","Representation of an owned and self-contained backtrace.",null,null],[3,"TokioTime","","New type which is implemented using tokio::time::{Delay,…",null,null],[5,"spawn_bg","","Spawn a background task, if it was present",null,[[["send"],["runtime"],["future"]],[["send"],["joinhandle"]]]],[0,"error","","Error types for the crate",null,null],[3,"ExtBacktrace","trust_dns_proto::error","Representation of an owned and self-contained backtrace.",null,null],[3,"ENABLE_BACKTRACE","","Boolean for checking if backtrace is enabled at runtime",null,null],[3,"ProtoError","","The error type for errors that get returned in the crate",null,null],[4,"ProtoErrorKind","","The error kind for errors that get returned in the crate",null,null],[13,"Canceled","","An error caused by a canceled future",0,null],[13,"CharacterDataTooLong","","Character data length exceeded the limit",0,null],[12,"max","trust_dns_proto::error::ProtoErrorKind","Specified maximum",0,null],[12,"len","","Actual length",0,null],[13,"LabelOverlapsWithOther","trust_dns_proto::error","Overlapping labels",0,null],[12,"label","trust_dns_proto::error::ProtoErrorKind","Start of the label that is overlaps",0,null],[12,"other","","Start of the other label",0,null],[13,"DnsKeyProtocolNot3","trust_dns_proto::error","DNS protocol version doesn't have the expected version 3",0,null],[13,"DomainNameTooLong","","A domain name was too long",0,null],[13,"EdnsNameNotRoot","","EDNS resource record label is not the root label, although…",0,null],[13,"IncorrectRDataLengthRead","","The length of rdata read was not as expected",0,null],[12,"read","trust_dns_proto::error::ProtoErrorKind","The amount of read data",0,null],[12,"len","","The expected length of the data",0,null],[13,"LabelBytesTooLong","trust_dns_proto::error","Label bytes exceeded the limit of 63",0,null],[13,"PointerNotPriorToLabel","","Label bytes exceeded the limit of 63",0,null],[12,"idx","trust_dns_proto::error::ProtoErrorKind","index of the label containing this pointer",0,null],[12,"ptr","","location to which the pointer is directing",0,null],[13,"MaxBufferSizeExceeded","trust_dns_proto::error","The maximum buffer size was exceeded",0,null],[13,"Message","","An error with an arbitrary message, referenced as &'static…",0,null],[13,"Msg","","An error with an arbitrary message, stored as String",0,null],[13,"NoError","","No error was specified",0,null],[13,"NotAllRecordsWritten","","Not all records were able to be written",0,null],[12,"count","trust_dns_proto::error::ProtoErrorKind","Number of records that were written before the error",0,null],[13,"RrsigsNotPresent","trust_dns_proto::error","Missing rrsigs",0,null],[12,"name","trust_dns_proto::error::ProtoErrorKind","The record set name",0,null],[12,"record_type","","The record type",0,null],[13,"UnknownAlgorithmTypeValue","trust_dns_proto::error","An unknown algorithm type was found",0,null],[13,"UnknownDnsClassStr","","An unknown dns class was found",0,null],[13,"UnknownDnsClassValue","","An unknown dns class value was found",0,null],[13,"UnknownRecordTypeStr","","An unknown record type string was found",0,null],[13,"UnknownRecordTypeValue","","An unknown record type value was found",0,null],[13,"UnrecognizedLabelCode","","An unrecognized label code was found",0,null],[13,"UnrecognizedNsec3Flags","","Unrecognized nsec3 flags were found",0,null],[13,"Io","","An error got returned from IO",0,null],[13,"Poisoned","","Any sync poised error",0,null],[13,"Ring","","A ring error",0,null],[13,"SSL","","An ssl error",0,null],[13,"Timer","","A tokio timer error",0,null],[13,"Timeout","","A request timed out",0,null],[13,"UrlParsing","","An url parsing error",0,null],[13,"Utf8","","A utf8 parsing error",0,null],[0,"not_openssl","","Stubs for running without OpenSSL",null,null],[3,"SslErrorStack","trust_dns_proto::error::not_openssl","SslErrorStac stub",null,null],[0,"not_ring","trust_dns_proto::error","Types used without ring",null,null],[3,"Unspecified","trust_dns_proto::error::not_ring","The Unspecified error replacement",null,null],[6,"ProtoResult","trust_dns_proto::error","An alias for results returned by functions of this crate",null,null],[8,"FromProtoError","","A trait marking a type which implements From and…",null,null],[11,"kind","","Get the kind of the error",1,[[["self"]],["protoerrorkind"]]],[0,"op","trust_dns_proto","Operations to send with a `Client` or server, e.g.…",null,null],[3,"Edns","trust_dns_proto::op","Edns implements the higher level concepts for working with…",null,null],[11,"new","","Creates a new extended DNS object.",2,[[],["self"]]],[11,"rcode_high","","The high order bytes for the response code in the DNS…",2,[[["self"]],["u8"]]],[11,"version","","Returns the EDNS version",2,[[["self"]],["u8"]]],[11,"dnssec_ok","","Specifies that DNSSec is supported for this Client or Server",2,[[["self"]],["bool"]]],[11,"max_payload","","Maximum supported size of the DNS payload",2,[[["self"]],["u16"]]],[11,"option","","Returns the Option associated with the code",2,[[["ednscode"],["self"]],[["ednsoption"],["option",["ednsoption"]]]]],[11,"options","","Returns the options portion of EDNS",2,[[["self"]],["opt"]]],[11,"set_rcode_high","","Set the high order bits for the result code.",2,[[["self"],["u8"]]]],[11,"set_version","","Set the EDNS version",2,[[["self"],["u8"]]]],[11,"set_dnssec_ok","","Set to true if DNSSec is supported",2,[[["self"],["bool"]]]],[11,"set_max_payload","","Set the maximum payload which can be supported From RFC…",2,[[["u16"],["self"]]]],[11,"set_option","","Set the specified EDNS option",2,[[["self"],["ednsoption"]]]],[0,"header","","Message metadata",null,null],[3,"Header","trust_dns_proto::op::header","Metadata for the `Message` struct.",null,null],[4,"MessageType","","Message types are either Query (also Update) or Response",null,null],[13,"Query","","Queries are Client requests, these are either Queries or…",3,null],[13,"Response","","Response message from the Server or upstream Resolver",3,null],[11,"new","","A default Header, not very useful.",4,[[],["self"]]],[11,"len","","Length of the header, always 12 bytes",4,[[],["usize"]]],[11,"set_id","","Sets the id of the message, for queries this should be…",4,[[["u16"],["self"]],["self"]]],[11,"set_message_type","","Sets the message type, Queries and Updates both use Query.",4,[[["self"],["messagetype"]],["self"]]],[11,"set_op_code","","Set the operation code for the message",4,[[["self"],["opcode"]],["self"]]],[11,"set_authoritative","","From the server is specifies that it is an authoritative…",4,[[["self"],["bool"]],["self"]]],[11,"set_truncated","","Specifies that the records were too large for the payload.",4,[[["self"],["bool"]],["self"]]],[11,"set_recursion_desired","","Specify that the resolver should recursively request data…",4,[[["self"],["bool"]],["self"]]],[11,"set_recursion_available","","Specifies that recursion is available from this or the…",4,[[["self"],["bool"]],["self"]]],[11,"set_authentic_data","","Specifies that the data is authentic, i.e. the resolver…",4,[[["self"],["bool"]],["self"]]],[11,"set_checking_disabled","","Used during recursive resolution to specified if a…",4,[[["self"],["bool"]],["self"]]],[11,"set_response_code","","The low response code (original response codes before EDNS…",4,[[["self"],["responsecode"]],["self"]]],[11,"set_query_count","","Number or query records in the message",4,[[["u16"],["self"]],["self"]]],[11,"set_answer_count","","Number of answer records in the message",4,[[["u16"],["self"]],["self"]]],[11,"set_name_server_count","","Number of name server records in the message",4,[[["u16"],["self"]],["self"]]],[11,"set_additional_count","","Number of additional records in the message",4,[[["u16"],["self"]],["self"]]],[11,"id","","`text ID A 16 bit identifier assigned by the program that…",4,[[["self"]],["u16"]]],[11,"message_type","","`text QR A one bit field that specifies whether this…",4,[[["self"]],["messagetype"]]],[11,"op_code","","`text OPCODE A four bit field that specifies kind of query…",4,[[["self"]],["opcode"]]],[11,"authoritative","","",4,[[["self"]],["bool"]]],[11,"truncated","","`text TC TrunCation - specifies that this message was…",4,[[["self"]],["bool"]]],[11,"recursion_desired","","`text RD Recursion Desired - this bit may be set in a…",4,[[["self"]],["bool"]]],[11,"recursion_available","","`text RA Recursion Available - this be is set or cleared…",4,[[["self"]],["bool"]]],[11,"authentic_data","","RFC 4035, DNSSEC Resource Records, March 2005",4,[[["self"]],["bool"]]],[11,"checking_disabled","","see `is_authentic_data()`",4,[[["self"]],["bool"]]],[11,"response_code","","`text RCODE Response code - this 4 bit field is set as…",4,[[["self"]],["u8"]]],[11,"query_count","","`text QDCOUNT an unsigned 16 bit integer specifying the…",4,[[["self"]],["u16"]]],[11,"answer_count","","`text ANCOUNT an unsigned 16 bit integer specifying the…",4,[[["self"]],["u16"]]],[11,"name_server_count","","for queries this is the nameservers which are authorities…",4,[[["self"]],["u16"]]],[11,"additional_count","","`text ARCOUNT an unsigned 16 bit integer specifying the…",4,[[["self"]],["u16"]]],[0,"message","trust_dns_proto::op","Basic protocol message for DNS",null,null],[3,"Message","trust_dns_proto::op::message","The basic request and response datastructure, used for all…",null,null],[3,"HeaderCounts","","Tracks the counts of the records in the Message.",null,null],[12,"query_count","","The number of queries in the Message",5,null],[12,"answer_count","","The number of answers in the Message",5,null],[12,"nameserver_count","","The number of nameservers or authorities in the Message",5,null],[12,"additional_count","","The number of additional records in the Message",5,null],[3,"NoopMessageFinalizer","","A MessageFinalizer which does nothing",null,null],[5,"update_header_counts","","Returns a new Header with accurate counts for each Message…",null,[[["bool"],["headercounts"],["header"]],["header"]]],[5,"count_was_truncated","","Returns the count written and a boolean if it was truncated",null,[[["protoresult",["usize"]],["usize"]],["protoresult"]]],[5,"emit_message_parts","","Emits the different sections of a message properly",null,[[["a"],["q"],["d"],["binencoder"],["option",["edns"]],["edns"],["header"],["n"]],["protoresult"]]],[8,"MessageFinalizer","","A trait for performing final amendments to a Message…",null,null],[10,"finalize_message","","The message taken in should be processed and then return…",6,[[["message"],["u32"],["self"]],[["vec",["record"]],["protoresult",["vec"]]]]],[8,"EmitAndCount","","A trait that defines types which can be emitted as a set,…",null,null],[10,"emit","","Emit self to the encoder and return the count of items",7,[[["self"],["binencoder"]],[["protoresult",["usize"]],["usize"]]]],[11,"new","","Returns a new \"empty\" Message",8,[[],["self"]]],[11,"error_msg","","Returns a Message constructed with error details to return…",8,[[["u16"],["opcode"],["responsecode"]],["message"]]],[11,"truncate","","Truncates a Message, this blindly removes all response…",8,[[["self"]],["self"]]],[11,"set_id","","see `Header::set_id`",8,[[["u16"],["self"]],["self"]]],[11,"set_message_type","","see `Header::set_message_type`",8,[[["self"],["messagetype"]],["self"]]],[11,"set_op_code","","see `Header::set_op_code`",8,[[["self"],["opcode"]],["self"]]],[11,"set_authoritative","","see `Header::set_authoritative`",8,[[["self"],["bool"]],["self"]]],[11,"set_truncated","","see `Header::set_truncated`",8,[[["self"],["bool"]],["self"]]],[11,"set_recursion_desired","","see `Header::set_recursion_desired`",8,[[["self"],["bool"]],["self"]]],[11,"set_recursion_available","","see `Header::set_recursion_available`",8,[[["self"],["bool"]],["self"]]],[11,"set_authentic_data","","see `Header::set_authentic_data`",8,[[["self"],["bool"]],["self"]]],[11,"set_checking_disabled","","see `Header::set_checking_disabled`",8,[[["self"],["bool"]],["self"]]],[11,"set_response_code","","see `Header::set_response_code`",8,[[["self"],["responsecode"]],["self"]]],[11,"add_query","","Add a query to the Message, either the query response from…",8,[[["query"],["self"]],["self"]]],[11,"add_queries","","Adds an iterator over a set of Queries to be added to the…",8,[[["self"],["q"]],["self"]]],[11,"add_answer","","Add an answer to the Message",8,[[["self"],["record"]],["self"]]],[11,"add_answers","","Add all the records from the iterator to the answers…",8,[[["self"],["r"]],["self"]]],[11,"insert_answers","","Sets the answers to the specified set of Records.",8,[[["vec",["record"]],["self"],["record"]]]],[11,"add_name_server","","Add a name server record to the Message",8,[[["self"],["record"]],["self"]]],[11,"add_name_servers","","Add all the records in the Iterator to the name server…",8,[[["self"],["r"]],["self"]]],[11,"insert_name_servers","","Sets the name_servers to the specified set of Records.",8,[[["vec",["record"]],["self"],["record"]]]],[11,"add_additional","","Add an additional Record to the message",8,[[["self"],["record"]],["self"]]],[11,"insert_additionals","","Sets the additional to the specified set of Records.",8,[[["vec",["record"]],["self"],["record"]]]],[11,"set_edns","","Add the EDNS section to the Message",8,[[["self"],["edns"]],["self"]]],[11,"header","","Gets the header of the Message",8,[[["self"]],["header"]]],[11,"id","","see `Header::id()`",8,[[["self"]],["u16"]]],[11,"message_type","","see `Header::message_type()`",8,[[["self"]],["messagetype"]]],[11,"op_code","","see `Header::op_code()`",8,[[["self"]],["opcode"]]],[11,"authoritative","","see `Header::authoritative()`",8,[[["self"]],["bool"]]],[11,"truncated","","see `Header::truncated()`",8,[[["self"]],["bool"]]],[11,"recursion_desired","","see `Header::recursion_desired()`",8,[[["self"]],["bool"]]],[11,"recursion_available","","see `Header::recursion_available()`",8,[[["self"]],["bool"]]],[11,"authentic_data","","see `Header::authentic_data()`",8,[[["self"]],["bool"]]],[11,"checking_disabled","","see `Header::checking_disabled()`",8,[[["self"]],["bool"]]],[11,"response_code","","Return value",8,[[["self"]],["responsecode"]]],[11,"queries","","`text Question Carries the query name and other query…",8,[[["self"]]]],[11,"answers","","`text Answer Carries RRs which directly answer the query.…",8,[[["self"]]]],[11,"take_answers","","Removes all the answers from the Message",8,[[["self"]],[["vec",["record"]],["record"]]]],[11,"name_servers","","`text Authority Carries RRs which describe other…",8,[[["self"]]]],[11,"take_name_servers","","Remove the name servers from the Message",8,[[["self"]],[["vec",["record"]],["record"]]]],[11,"additionals","","`text Additional Carries RRs which may be helpful in using…",8,[[["self"]]]],[11,"take_additionals","","Remove the additional Records from the Message",8,[[["self"]],[["vec",["record"]],["record"]]]],[11,"edns","","RFC 6891, EDNS(0) Extensions, April 2013",8,[[["self"]],[["edns"],["option",["edns"]]]]],[11,"edns_mut","","If edns is_none, this will create a new default Edns.",8,[[["self"]],["edns"]]],[11,"max_payload","","Return value",8,[[["self"]],["u16"]]],[11,"version","","Return value",8,[[["self"]],["u8"]]],[11,"sig0","","RFC 2535, Domain Name System Security Extensions, March 1999",8,[[["self"]]]],[11,"read_queries","","Attempts to read the specified number of `Query`s",8,[[["bindecoder"],["usize"]],[["protoresult",["vec"]],["vec",["query"]]]]],[11,"read_records","","Attempts to read the specified number of records",8,[[["bindecoder"],["usize"],["bool"]],["protoresult"]]],[11,"from_vec","","Decodes a message from the buffer.",8,[[],[["message"],["protoresult",["message"]]]]],[11,"to_vec","","Encodes the Message into a buffer",8,[[["self"]],[["vec",["u8"]],["result",["vec","protoerror"]],["protoerror"]]]],[11,"finalize","","Finalize the message prior to sending.",8,[[["self"],["mf"],["u32"]],["protoresult"]]],[11,"new","","Always returns None",9,[[],[["option",["arc"]],["arc"]]]],[0,"op_code","trust_dns_proto::op","Operation code for queries, updates, and responses",null,null],[4,"OpCode","trust_dns_proto::op::op_code","Operation code for queries, updates, and responses",null,null],[13,"Query","","Query request RFC 1035",10,null],[13,"Status","","Status message RFC 1035",10,null],[13,"Notify","","Notify of change RFC 1996",10,null],[13,"Update","","Update message RFC 2136",10,null],[11,"from_u8","","Decodes the binary value of the OpCode",10,[[["u8"]],["protoresult"]]],[0,"query","trust_dns_proto::op","Query struct for looking up resource records",null,null],[3,"Query","trust_dns_proto::op::query","Query struct for looking up resource records, basically a…",null,null],[11,"new","","Return a default query with an empty name and A, IN for…",11,[[],["self"]]],[11,"query","","Create a new query from name and type, class defaults to IN",11,[[["name"],["recordtype"]],["self"]]],[11,"set_name","","replaces name with the new name",11,[[["self"],["name"]],["self"]]],[11,"set_query_type","","Specify the RecordType being queried",11,[[["self"],["recordtype"]],["self"]]],[11,"set_query_class","","Specify÷ the DNS class of the Query, almost always IN",11,[[["dnsclass"],["self"]],["self"]]],[11,"name","","`text QNAME a domain name represented as a sequence of…",11,[[["self"]],["name"]]],[11,"query_type","","`text QTYPE a two octet code which specifies the type of…",11,[[["self"]],["recordtype"]]],[11,"query_class","","`text QCLASS a two octet code that specifies the class of…",11,[[["self"]],["dnsclass"]]],[0,"response_code","trust_dns_proto::op","All defined response codes in DNS",null,null],[4,"ResponseCode","trust_dns_proto::op::response_code","The status code of the response to a query.",null,null],[13,"NoError","","No Error RFC 1035",12,null],[13,"FormErr","","Format Error RFC 1035",12,null],[13,"ServFail","","Server Failure RFC 1035",12,null],[13,"NXDomain","","Non-Existent Domain RFC 1035",12,null],[13,"NotImp","","Not Implemented RFC 1035",12,null],[13,"Refused","","Query Refused RFC 1035",12,null],[13,"YXDomain","","Name Exists when it should not RFC 2136",12,null],[13,"YXRRSet","","RR Set Exists when it should not RFC 2136",12,null],[13,"NXRRSet","","RR Set that should exist does not RFC 2136",12,null],[13,"NotAuth","","Server Not Authoritative for zone RFC 2136 or Not…",12,null],[13,"NotZone","","Name not contained in zone RFC 2136",12,null],[13,"BADVERS","","Bad OPT Version RFC 6891",12,null],[13,"BADSIG","","TSIG Signature Failure RFC 2845",12,null],[13,"BADKEY","","Key not recognized RFC 2845",12,null],[13,"BADTIME","","Signature out of time window RFC 2845",12,null],[13,"BADMODE","","Bad TKEY Mode RFC 2930",12,null],[13,"BADNAME","","Duplicate key name RFC 2930",12,null],[13,"BADALG","","Algorithm not supported RFC 2930",12,null],[13,"BADTRUNC","","Bad Truncation RFC 4635",12,null],[13,"BADCOOKIE","","Bad/missing server cookie draft-ietf-dnsop-cookies",12,null],[13,"Unknown","","An unknown or unregisterd response code was received.",12,null],[11,"low","","returns the lower 4 bits of the response code (for the…",12,[[],["u8"]]],[11,"high","","returns the high 12 bits for the edns portion of the…",12,[[],["u16"]]],[11,"from","","Combines the EDNS high and low from the Header to produce…",12,[[["u8"]],["responsecode"]]],[11,"to_str","","Transforms the response code into the human message",12,[[],["str"]]],[0,"rr","trust_dns_proto","Resource record related components, e.g. `Name` aka label,…",null,null],[3,"Name","trust_dns_proto::rr","Them should be through references. As a workaround the…",null,null],[3,"RecordSet","","Set of resource records associated to a name and type",null,null],[4,"RrsetRecords","","An iterator over the RecordSet data",null,null],[13,"Empty","","There are no records in the record set",13,null],[13,"RecordsOnly","","The records associated with the record set",13,null],[0,"dns_class","","class of DNS operations, in general always IN for internet",null,null],[4,"DNSClass","trust_dns_proto::rr::dns_class","The DNS Record class",null,null],[13,"IN","","Internet",14,null],[13,"CH","","Chaos",14,null],[13,"HS","","Hesiod",14,null],[13,"NONE","","QCLASS NONE",14,null],[13,"ANY","","QCLASS * (ANY)",14,null],[13,"OPT","","Special class for OPT Version, it was overloaded for EDNS…",14,null],[11,"from_u16","","Convert from `u16` to `DNSClass`",14,[[["u16"]],["protoresult"]]],[11,"for_opt","","Return the OPT version from value",14,[[["u16"]],["self"]]],[0,"domain","trust_dns_proto::rr","Domain name associated types, such as Name and Label.",null,null],[3,"Label","trust_dns_proto::rr::domain","Labels are always stored as ASCII, unicode characters must…",null,null],[3,"Name","","Them should be through references. As a workaround the…",null,null],[11,"from_raw_bytes","","These must only be ASCII, with unicode encoded to…",15,[[],["protoresult"]]],[11,"from_utf8","","Translates this string into IDNA safe name, encoding to…",15,[[["str"]],["protoresult"]]],[11,"from_ascii","","Takes the ascii string and returns a new label.",15,[[["str"]],["protoresult"]]],[11,"wildcard","","Returns a new Label of the Wildcard, i.e. \"*\"",15,[[],["self"]]],[11,"to_lowercase","","Converts this label to lowercase",15,[[["self"]],["self"]]],[11,"is_wildcard","","Returns true if this label is the wildcard, '*', label",15,[[["self"]],["bool"]]],[11,"len","","Returns the lenght in bytes of this label",15,[[["self"]],["usize"]]],[11,"is_empty","","True if the label contains no characters",15,[[["self"]],["bool"]]],[11,"as_bytes","","Returns the raw bytes of the label, this is good for…",15,[[["self"]]]],[11,"eq_ignore_ascii_case","","Performs the equivalence operation disregarding case",15,[[["self"]],["bool"]]],[11,"cmp_with_f","","compares with the other label, ignoring case",15,[[["self"]],["ordering"]]],[11,"to_utf8","","Performs the conversion to utf8 from IDNA as necessary,…",15,[[["self"]],["string"]]],[11,"to_ascii","","Converts this label to safe ascii, escaping characters as…",15,[[["self"]],["string"]]],[11,"write_ascii","","Writes this label to safe ascii, escaping characters as…",15,[[["w"],["self"]],[["result",["error"]],["error"]]]],[11,"new","trust_dns_proto::rr","Create a new domain::Name, i.e. label",16,[[],["self"]]],[11,"root","","Returns the root label, i.e. no labels, can probably make…",16,[[],["self"]]],[11,"is_root","","Returns true if there are no labels, i.e. it's empty.",16,[[["self"]],["bool"]]],[11,"is_fqdn","","Returns true if the name is a fully qualified domain name.",16,[[["self"]],["bool"]]],[11,"set_fqdn","","Specifies this name is a fully qualified domain name",16,[[["self"],["bool"]]]],[11,"iter","","Returns an iterator over the labels",16,[[["self"]],["labeliter"]]],[11,"append_label","","Appends the label to the end of this name",16,[[["intolabel"]],["protoresult"]]],[11,"from_labels","","Creates a new Name from the specified labels",16,[[["i"]],["protoresult"]]],[11,"append_name","","Appends `other` to `self`, returning a new `Name`",16,[[["self"]],["self"]]],[11,"append_domain","","Appends the `domain` to `self`, making the new `Name` an…",16,[[["self"]],["self"]]],[11,"to_lowercase","","Creates a new Name with all labels lowercased",16,[[["self"]],["self"]]],[11,"base_name","","Trims off the first part of the name, to help with…",16,[[["self"]],["name"]]],[11,"trim_to","","Trims to the number of labels specified",16,[[["self"],["usize"]],["name"]]],[11,"zone_of_case","","same as `zone_of` allows for case sensitive call",16,[[["self"]],["bool"]]],[11,"zone_of","","returns true if the name components of self are all…",16,[[["self"]],["bool"]]],[11,"num_labels","","Returns the number of labels in the name, discounting `*`.",16,[[["self"]],["u8"]]],[11,"len","","returns the length in bytes of the labels. '.' counts as 1",16,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the length of the labels, in bytes is 0.…",16,[[["self"]],["bool"]]],[11,"parse","","attempts to parse a name such as `\"example.com.\"` or…",16,[[["str"],["option"],["self"]],["protoresult"]]],[11,"from_ascii","","Will convert the string to a name only allowing ascii as…",16,[[["str"],["asref",["str"]]],["protoresult"]]],[11,"from_utf8","","Will convert the string to a name using IDNA, punycode, to…",16,[[["str"],["asref",["str"]]],["protoresult"]]],[11,"from_str_relaxed","","First attempts to decode via `from_utf8`, if that fails…",16,[[["str"],["asref",["str"]]],["protoresult"]]],[11,"emit_as_canonical","","Emits the canonical version of the name to the encoder.",16,[[["binencoder"],["self"],["bool"]],["protoresult"]]],[11,"emit_with_lowercase","","Writes the labels, as lower case, to the encoder",16,[[["binencoder"],["self"],["bool"]],["protoresult"]]],[11,"cmp_case","","Case sensitive comparison",16,[[["self"]],["ordering"]]],[11,"eq_case","","Compares the Names, in a case sensitive manner",16,[[["self"]],["bool"]]],[11,"to_ascii","","Converts this name into an ascii safe string.",16,[[["self"]],["string"]]],[11,"to_utf8","","Converts the Name labels to the utf8 String form.",16,[[["self"]],["string"]]],[11,"is_localhost","","Returns true if the `Name` is either localhost or in the…",16,[[["self"]],["bool"]]],[11,"is_wildcard","","True if the first label of this name is the wildcard, i.e.…",16,[[["self"]],["bool"]]],[11,"into_wildcard","","Converts a name to a wildcard, by replacing the first…",16,[[],["self"]]],[0,"usage","trust_dns_proto::rr::domain","Reserved zone names.",null,null],[3,"DEFAULT","trust_dns_proto::rr::domain::usage","Default Name usage, everything is normal...",null,null],[3,"IN_ADDR_ARPA","","zone for ipv4 reverse addresses",null,null],[3,"IP6_ARPA","","zone for ipv6 reverse addresses",null,null],[3,"LOCALHOST","","localhost.",null,null],[3,"IN_ADDR_ARPA_127","","127.in-addr.arpa. usage; 127/8 is reserved for loopback",null,null],[3,"IP6_ARPA_1","","…",null,null],[3,"LOCAL","",".local.",null,null],[3,"IN_ADDR_ARPA_169_254","","254.169.in-addr.arpa. usage link-local, i.e. mDNS",null,null],[3,"IP6_ARPA_FE_8","","254.169.in-addr.arpa. usage link-local, i.e. mDNS",null,null],[3,"IP6_ARPA_FE_9","","254.169.in-addr.arpa. usage link-local, i.e. mDNS",null,null],[3,"IP6_ARPA_FE_B","","254.169.in-addr.arpa. usage link-local, i.e. mDNS",null,null],[3,"INVALID","","invalid.",null,null],[3,"ZoneUsage","","ZoneUsage represents information about how a name falling…",null,null],[4,"UserUsage","","Users:",null,null],[13,"Normal","","Users are free to use these names as they would any other…",17,null],[13,"Loopback","","Users are free to use localhost names as they would any…",17,null],[13,"LinkLocal","","Multi-cast link-local usage",17,null],[13,"NxDomain","","Users are free to use \"invalid\" names as they would any…",17,null],[4,"AppUsage","","Application Software:",null,null],[13,"Normal","","Application software SHOULD NOT recognize these names as…",18,null],[13,"Loopback","","Application software MAY recognize localhost names as…",18,null],[13,"LinkLocal","","Link local, generally for mDNS",18,null],[13,"NxDomain","","Application software MAY recognize \"invalid\" names as…",18,null],[4,"ResolverUsage","","Name Resolution APIs and Libraries:",null,null],[13,"Normal","","Name resolution APIs and libraries SHOULD NOT recognize…",19,null],[13,"Loopback","","Name resolution APIs and libraries SHOULD recognize…",19,null],[13,"LinkLocal","","Link local, generally for mDNS",19,null],[13,"NxDomain","","Name resolution APIs and libraries SHOULD recognize…",19,null],[4,"CacheUsage","","Caching DNS Servers:",null,null],[13,"NonRecursive","","Caching DNS servers SHOULD recognize these names as…",20,null],[13,"NxDomain","","Caching DNS servers SHOULD recognize \"invalid\" names as…",20,null],[13,"Loopback","","Caching DNS servers SHOULD recognize localhost names as…",20,null],[13,"Normal","","Caching DNS servers SHOULD NOT recognize example names as…",20,null],[4,"AuthUsage","","Authoritative DNS Servers:",null,null],[13,"Local","","Authoritative DNS servers SHOULD recognize these names as…",21,null],[13,"NxDomain","","Authoritative DNS servers SHOULD recognize these names as…",21,null],[13,"Loopback","","Authoritative DNS servers SHOULD recognize localhost names…",21,null],[13,"Normal","","Authoritative DNS servers SHOULD NOT recognize example…",21,null],[4,"OpUsage","","DNS Server Operators:",null,null],[13,"Normal","","DNS server operators SHOULD, if they are using private…",22,null],[13,"Loopback","","DNS server operators SHOULD be aware that the effective…",22,null],[13,"NxDomain","","DNS server operators SHOULD be aware that the effective…",22,null],[4,"RegistryUsage","","DNS Registries/Registrars:",null,null],[13,"Normal","","Stanard checks apply",23,null],[13,"Reserved","","DNS Registries/Registrars MUST NOT grant requests to…",23,null],[11,"new","","Constructs a new ZoneUsage with the associated values",24,[[["registryusage"],["opusage"],["resolverusage"],["authusage"],["appusage"],["cacheusage"],["name"],["userusage"]],["self"]]],[11,"default","","Constructs a new Default, with all no restrictions",24,[[],["self"]]],[11,"reverse","","Restrictions for reverse zones",24,[[["name"]],["self"]]],[11,"test","","Restrictions for the .test. zone",24,[[["name"]],["self"]]],[11,"localhost","","Restrictions for the .localhost. zone",24,[[["name"]],["self"]]],[11,"local","","Restrictions for the .local. zone",24,[[["name"]],["self"]]],[11,"invalid","","Restrictions for the .invalid. zone",24,[[["name"]],["self"]]],[11,"example","","Restrictions for the .example. zone",24,[[["name"]],["self"]]],[11,"name","","A reference to this zone name",24,[[["self"]],["name"]]],[11,"user","","Returns the UserUsage of this zone",24,[[["self"]],["userusage"]]],[11,"app","","Returns the AppUsage of this zone",24,[[["self"]],["appusage"]]],[11,"resolver","","Returns the ResolverUsage of this zone",24,[[["self"]],["resolverusage"]]],[11,"cache","","Returns the CacheUsage of this zone",24,[[["self"]],["cacheusage"]]],[11,"auth","","Returns the AuthUsage of this zone",24,[[["self"]],["authusage"]]],[11,"op","","Returns the OpUsage of this zone",24,[[["self"]],["opusage"]]],[11,"registry","","Returns the RegistryUsage of this zone",24,[[["self"]],["registryusage"]]],[8,"IntoLabel","trust_dns_proto::rr::domain","Conversion into a Label",null,null],[10,"into_label","","Convert this into Label",25,[[],[["protoresult",["label"]],["label"]]]],[8,"IntoName","","Conversion into a Name",null,null],[10,"into_name","","Convert this into Name",26,[[],[["name"],["protoresult",["name"]]]]],[8,"TryParseIp","","Types of this trait will can be attempted for conversion…",null,null],[10,"try_parse_ip","","Attempts to parse self into an RData::A or RData::AAAA,…",27,[[["self"]],[["rdata"],["option",["rdata"]]]]],[0,"rdata","trust_dns_proto::rr","All record data structures and related serialization methods",null,null],[0,"a","trust_dns_proto::rr::rdata","IPv4 address record data",null,null],[5,"read","trust_dns_proto::rr::rdata::a","Read the RData from the given Decoder",null,[[["bindecoder"]],[["ipv4addr"],["protoresult",["ipv4addr"]]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["ipv4addr"],["binencoder"]],["protoresult"]]],[0,"aaaa","trust_dns_proto::rr::rdata","IPv6 address record data",null,null],[5,"read","trust_dns_proto::rr::rdata::aaaa","Read the RData from the given Decoder",null,[[["bindecoder"]],[["protoresult",["ipv6addr"]],["ipv6addr"]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["binencoder"],["ipv6addr"]],["protoresult"]]],[0,"caa","trust_dns_proto::rr::rdata","allows a DNS domain name holder to specify one or more…",null,null],[3,"CAA","trust_dns_proto::rr::rdata::caa","The CAA RR Type",null,null],[3,"KeyValue","","Issuer key and value pairs.",null,null],[4,"Property","","Specifies in what contexts this key may be trusted for use",null,null],[13,"Issue","","The issue property entry authorizes the holder of the…",28,null],[13,"IssueWild","","The issuewild property entry authorizes the holder of the…",28,null],[13,"Iodef","","Specifies a URL to which an issuer MAY report certificate…",28,null],[13,"Unknown","","Unknown format to Trust-DNS",28,null],[4,"Value","","Potential values.",null,null],[13,"Issuer","","Issuer authorized to issue certs for this zone, and any…",29,null],[13,"Url","","Url to which to send CA errors",29,null],[13,"Unknown","","Unrecognized tag and value by Trust-DNS",29,null],[5,"read_issuer","","Reads the issuer field according to the spec",null,[[],["protoresult"]]],[5,"read_iodef","","Incident Object Description Exchange Format",null,[[],[["url"],["protoresult",["url"]]]]],[5,"read","","Read the binary CAA format",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["protoresult",["caa"]],["caa"]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["binencoder"],["caa"]],["protoresult"]]],[11,"new_issue","","Creates a new CAA issue record data, the tag is `issue`",30,[[["vec",["keyvalue"]],["option",["name"]],["keyvalue"],["name"],["bool"]],["self"]]],[11,"new_issuewild","","Creates a new CAA issue record data, the tag is `issuewild`",30,[[["vec",["keyvalue"]],["option",["name"]],["keyvalue"],["name"],["bool"]],["self"]]],[11,"new_iodef","","Creates a new CAA issue record data, the tag is `iodef`",30,[[["url"],["bool"]],["self"]]],[11,"issuer_critical","","Indicates that the corresponding property tag MUST be…",30,[[["self"]],["bool"]]],[11,"tag","","The property tag, see struct documentation",30,[[["self"]],["property"]]],[11,"value","","a potentially associated value with the property tag, see…",30,[[["self"]],["value"]]],[11,"is_issue","","true if the property is `issue`",28,[[["self"]],["bool"]]],[11,"is_issuewild","","true if the property is `issueworld`",28,[[["self"]],["bool"]]],[11,"is_iodef","","true if the property is `iodef`",28,[[["self"]],["bool"]]],[11,"is_unknown","","true if the property is not known to Trust-DNS",28,[[["self"]],["bool"]]],[11,"is_issuer","","true if this is an `Issuer`",29,[[["self"]],["bool"]]],[11,"is_url","","true if this is a `Url`",29,[[["self"]],["bool"]]],[11,"is_unknown","","true if this is an `Unknown`",29,[[["self"]],["bool"]]],[11,"new","","Construct a new KeyValue pair",31,[[["into",["string"]],["string"]],["self"]]],[11,"key","","Gets a reference to the key of the pair.",31,[[["self"]],["str"]]],[11,"value","","Gets a reference to the value of the pair.",31,[[["self"]],["str"]]],[0,"mx","trust_dns_proto::rr::rdata","mail exchange, email, record",null,null],[3,"MX","trust_dns_proto::rr::rdata::mx","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",null,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"]],[["mx"],["protoresult",["mx"]]]]],[5,"emit","","RFC 4034, DNSSEC Resource Records, March 2005",null,[[["binencoder"],["mx"]],["protoresult"]]],[11,"new","","Constructs a new MX RData",32,[[["u16"],["name"]],["mx"]]],[11,"preference","","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",32,[[["self"]],["u16"]]],[11,"exchange","","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",32,[[["self"]],["name"]]],[0,"name","trust_dns_proto::rr::rdata","Record type for all cname like records.",null,null],[5,"read","trust_dns_proto::rr::rdata::name","Read the RData from the given Decoder",null,[[["bindecoder"]],[["name"],["protoresult",["name"]]]]],[5,"emit","","RFC 4034, DNSSEC Resource Records, March 2005",null,[[["binencoder"],["name"]],["protoresult"]]],[0,"naptr","trust_dns_proto::rr::rdata","Dynamic Delegation Discovery System",null,null],[3,"NAPTR","trust_dns_proto::rr::rdata::naptr","RFC 3403 DDDS DNS Database, October 2002",null,null],[5,"verify_flags","","verifies that the flags are valid",null,[[],["bool"]]],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"]],[["naptr"],["protoresult",["naptr"]]]]],[5,"emit","","Declares the method for emitting this type",null,[[["binencoder"],["naptr"]],["protoresult"]]],[11,"new","","Constructs a new NAPTR record",33,[[["box"],["u16"],["name"]],["self"]]],[11,"order","","`text ORDER A 16-bit unsigned integer specifying the order…",33,[[["self"]],["u16"]]],[11,"preference","","",33,[[["self"]],["u16"]]],[11,"flags","","",33,[[["self"]]]],[11,"services","","`text SERVICES A <character-string> that specifies the…",33,[[["self"]]]],[11,"regexp","","",33,[[["self"]]]],[11,"replacement","","",33,[[["self"]],["name"]]],[0,"null","trust_dns_proto::rr::rdata","null record type, generally not used except as an internal…",null,null],[3,"NULL","trust_dns_proto::rr::rdata::null","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",null,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["protoresult",["null"]],["null"]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["null"],["binencoder"]],["protoresult"]]],[11,"new","","Construct a new NULL RData",34,[[],["null"]]],[11,"with","","Constructs a new NULL RData with the associated data",34,[[["vec",["u8"]],["u8"]],["null"]]],[11,"anything","","Returns the buffer stored in the NULL",34,[[["self"]],["option"]]],[0,"openpgpkey","trust_dns_proto::rr::rdata","OPENPGPKEY records for OpenPGP public keys",null,null],[3,"OPENPGPKEY","trust_dns_proto::rr::rdata::openpgpkey","RFC 7929",null,null],[5,"read","","Read the RData from the given decoder.",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["openpgpkey"],["protoresult",["openpgpkey"]]]]],[5,"emit","","Write the RData using the given encoder",null,[[["binencoder"],["openpgpkey"]],["protoresult"]]],[11,"new","","Creates a new OPENPGPKEY record data.",35,[[["vec",["u8"]],["u8"]],["self"]]],[11,"public_key","","The public key. This should be an OpenPGP Transferable…",35,[[["self"]]]],[0,"opt","trust_dns_proto::rr::rdata","option record for passing protocol options between the…",null,null],[3,"OPT","trust_dns_proto::rr::rdata::opt","The OPT record type is used for ExtendedDNS records.",null,null],[4,"EdnsCode","","The code of the EDNS data option",null,null],[13,"Zero","","RFC 6891, Reserved",36,null],[13,"LLQ","","LLQ On-hold",36,null],[13,"UL","","UL On-hold",36,null],[13,"NSID","","RFC 5001, NSID",36,null],[13,"DAU","","RFC 6975, DNSSEC Algorithm Understood",36,null],[13,"DHU","","RFC 6975, DS Hash Understood",36,null],[13,"N3U","","RFC 6975, NSEC3 Hash Understood",36,null],[13,"Subnet","","edns-client-subnet, Optional",36,null],[13,"Expire","","RFC 7314, EDNS EXPIRE, Optional",36,null],[13,"Cookie","","draft-ietf-dnsop-cookies",36,null],[13,"Keepalive","","draft-ietf-dnsop-edns-tcp-keepalive, Optional",36,null],[13,"Padding","","draft-mayrhofer-edns0-padding, Optional",36,null],[13,"Chain","","draft-ietf-dnsop-edns-chain-query",36,null],[13,"Unknown","","Unknown, used to deal with unknown or unsupported codes",36,null],[4,"EdnsOption","","options used to pass information about capabilities…",null,null],[13,"Unknown","","Unknown, used to deal with unknown or unsupported codes",37,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["opt"],["protoresult",["opt"]]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["opt"],["binencoder"]],["protoresult"]]],[11,"new","","Creates a new OPT record data.",38,[[["ednscode"],["hashmap",["ednscode","ednsoption"]],["ednsoption"]],["opt"]]],[11,"options","","The entire map of options",38,[[["self"]],["hashmap"]]],[11,"get","","Get a single option based on the code",38,[[["ednscode"],["self"]],[["ednsoption"],["option",["ednsoption"]]]]],[11,"insert","","Insert a new option, the key is derived from the…",38,[[["self"],["ednsoption"]]]],[11,"len","","Returns the length in bytes of the EdnsOption",37,[[["self"]],["u16"]]],[11,"is_empty","","Returns `true` if the length in bytes of the EdnsOption is 0",37,[[["self"]],["bool"]]],[0,"soa","trust_dns_proto::rr::rdata","start of authority record defining ownership and defaults…",null,null],[3,"SOA","trust_dns_proto::rr::rdata::soa","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",null,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"]],[["soa"],["protoresult",["soa"]]]]],[5,"emit","","RFC 4034, DNSSEC Resource Records, March 2005",null,[[["binencoder"],["soa"]],["protoresult"]]],[11,"new","","Creates a new SOA record data.",39,[[["u32"],["i32"],["name"]],["self"]]],[11,"increment_serial","","Increments the serial number by one",39,[[["self"]]]],[11,"mname","","`text MNAME The <domain-name> of the name server that was…",39,[[["self"]],["name"]]],[11,"rname","","`text RNAME A <domain-name> which specifies the mailbox of…",39,[[["self"]],["name"]]],[11,"serial","","`text SERIAL The unsigned 32 bit version number of the…",39,[[["self"]],["u32"]]],[11,"refresh","","`text REFRESH A 32 bit time interval before the zone…",39,[[["self"]],["i32"]]],[11,"retry","","`text RETRY A 32 bit time interval that should elapse…",39,[[["self"]],["i32"]]],[11,"expire","","`text EXPIRE A 32 bit time value that specifies the upper…",39,[[["self"]],["i32"]]],[11,"minimum","","`text MINIMUM The unsigned 32 bit minimum TTL field that…",39,[[["self"]],["u32"]]],[0,"srv","trust_dns_proto::rr::rdata","service records for identify port mapping for specific…",null,null],[3,"SRV","trust_dns_proto::rr::rdata::srv","RFC 2782, DNS SRV RR, February 2000",null,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"]],[["protoresult",["srv"]],["srv"]]]],[5,"emit","","RFC 4034, DNSSEC Resource Records, March 2005",null,[[["binencoder"],["srv"]],["protoresult"]]],[11,"new","","Creates a new SRV record data.",40,[[["u16"],["name"]],["srv"]]],[11,"priority","","`text Priority The priority of this target host. A client…",40,[[["self"]],["u16"]]],[11,"weight","","",40,[[["self"]],["u16"]]],[11,"port","","",40,[[["self"]],["u16"]]],[11,"target","","",40,[[["self"]],["name"]]],[0,"sshfp","trust_dns_proto::rr::rdata","SSHFP records for SSH public key fingerprints",null,null],[3,"SSHFP","trust_dns_proto::rr::rdata::sshfp","RFC 4255",null,null],[4,"Algorithm","","",null,null],[13,"Reserved","","Reserved value",41,null],[13,"RSA","","RSA",41,null],[13,"DSA","","DSS/DSA",41,null],[13,"ECDSA","","ECDSA",41,null],[13,"Ed25519","","Ed25519",41,null],[13,"Unassigned","","Unassigned value",41,null],[4,"FingerprintType","","",null,null],[13,"Reserved","","Reserved value",42,null],[13,"SHA1","","SHA-1",42,null],[13,"SHA256","","SHA-256",42,null],[13,"Unassigned","","Unassigned value",42,null],[5,"read","","Read the RData from the given decoder.",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["sshfp"],["protoresult",["sshfp"]]]]],[5,"emit","","Write the RData using the given encoder.",null,[[["binencoder"],["sshfp"]],["protoresult"]]],[11,"new","","Creates a new SSHFP record data.",43,[[["u8"],["fingerprinttype"],["vec",["u8"]],["algorithm"]],["self"]]],[11,"algorithm","","The SSH public key algorithm.",43,[[["self"]],["algorithm"]]],[11,"fingerprint_type","","The fingerprint type to use.",43,[[["self"]],["fingerprinttype"]]],[11,"fingerprint","","The fingerprint of the public key.",43,[[["self"]]]],[0,"tlsa","trust_dns_proto::rr::rdata","TLSA records for storing TLS certificate validation…",null,null],[3,"TLSA","trust_dns_proto::rr::rdata::tlsa","RFC 6698, DNS-Based Authentication for TLS",null,null],[4,"CertUsage","","RFC 6698, DNS-Based Authentication for TLS",null,null],[13,"CA","","`text 0 -- Certificate usage 0 is used to specify a CA…",44,null],[13,"Service","","`text 1 -- Certificate usage 1 is used to specify an end…",44,null],[13,"TrustAnchor","","`text 2 -- Certificate usage 2 is used to specify a…",44,null],[13,"DomainIssued","","`text 3 -- Certificate usage 3 is used to specify a…",44,null],[13,"Unassigned","","Unassigned at the time of this implementation",44,null],[13,"Private","","Private usage",44,null],[4,"Selector","","RFC 6698, DNS-Based Authentication for TLS",null,null],[13,"Full","","Full certificate: the Certificate binary structure as…",45,null],[13,"Spki","","SubjectPublicKeyInfo: DER-encoded binary structure as…",45,null],[13,"Unassigned","","Unassigned at the time of this writing",45,null],[13,"Private","","Private usage",45,null],[4,"Matching","","RFC 6698, DNS-Based Authentication for TLS",null,null],[13,"Raw","","Exact match on selected content",46,null],[13,"Sha256","","SHA-256 hash of selected content [RFC6234]",46,null],[13,"Sha512","","SHA-512 hash of selected content [RFC6234]",46,null],[13,"Unassigned","","Unassigned at the time of this writing",46,null],[13,"Private","","Private usage",46,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["tlsa"],["protoresult",["tlsa"]]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["binencoder"],["tlsa"]],["protoresult"]]],[11,"new","","Constructs a new TLSA",47,[[["selector"],["certusage"],["matching"],["vec",["u8"]],["u8"]],["self"]]],[11,"cert_usage","","Specifies the provided association that will be used to…",47,[[["self"]],["certusage"]]],[11,"selector","","Specifies which part of the TLS certificate presented by…",47,[[["self"]],["selector"]]],[11,"matching","","Specifies how the certificate association is presented",47,[[["self"]],["matching"]]],[11,"cert_data","","Binary data for validating the cert, see other members to…",47,[[["self"]]]],[0,"txt","trust_dns_proto::rr::rdata","text records for storing arbitrary data",null,null],[3,"TXT","trust_dns_proto::rr::rdata::txt","RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION,…",null,null],[5,"read","","Read the RData from the given Decoder",null,[[["bindecoder"],["u16"],["restrict",["u16"]]],[["protoresult",["txt"]],["txt"]]]],[5,"emit","","Write the RData from the given Decoder",null,[[["binencoder"],["txt"]],["protoresult"]]],[11,"new","","Creates a new TXT record data.",48,[[["string"],["vec",["string"]]],["txt"]]],[11,"txt_data","","`text TXT-DATA        One or more <character-string>s. `",48,[[["self"]]]],[11,"iter","","Returns an iterator over the arrays in the txt data",48,[[["self"]],[["iter",["box"]],["box"]]]],[0,"record_data","trust_dns_proto::rr","record data enum variants",null,null],[4,"RData","trust_dns_proto::rr::record_data","Record data enum variants",null,null],[13,"A","","",49,null],[13,"AAAA","","",49,null],[13,"ANAME","","",49,null],[13,"CAA","","",49,null],[13,"CNAME","","",49,null],[13,"MX","","",49,null],[13,"NAPTR","","RFC 3403 DDDS DNS Database, October 2002",49,null],[13,"NULL","","",49,null],[13,"NS","","",49,null],[13,"OPENPGPKEY","","RFC 7929",49,null],[13,"OPT","","",49,null],[13,"PTR","","",49,null],[13,"SOA","","",49,null],[13,"SRV","","",49,null],[13,"SSHFP","","RFC 4255",49,null],[13,"TLSA","","RFC 6698, DNS-Based Authentication for TLS",49,null],[13,"TXT","","",49,null],[13,"Unknown","","Unknown RecordData is for record types not supported by…",49,null],[12,"code","trust_dns_proto::rr::record_data::RData","RecordType code",49,null],[12,"rdata","","RData associated to the record",49,null],[13,"ZERO","trust_dns_proto::rr::record_data","This corresponds to a record type of 0, unspecified",49,null],[11,"as_a_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["ipv4addr"],["option",["ipv4addr"]]]]],[11,"as_a","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["ipv4addr"]],["ipv4addr"]]]],[11,"into_a","","Returns the inner fields if this is a `RData::A`,…",49,[[],[["result",["ipv4addr"]],["ipv4addr"]]]],[11,"as_aaaa_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["ipv6addr"],["option",["ipv6addr"]]]]],[11,"as_aaaa","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["ipv6addr"]],["ipv6addr"]]]],[11,"into_aaaa","","Returns the inner fields if this is a `RData::AAAA`,…",49,[[],[["result",["ipv6addr"]],["ipv6addr"]]]],[11,"as_aname_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["name"]],["name"]]]],[11,"as_aname","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["name"],["option",["name"]]]]],[11,"into_aname","","Returns the inner fields if this is a `RData::ANAME`,…",49,[[],[["name"],["result",["name"]]]]],[11,"as_caa_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["caa"]],["caa"]]]],[11,"as_caa","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["caa"]],["caa"]]]],[11,"into_caa","","Returns the inner fields if this is a `RData::CAA`,…",49,[[],[["caa"],["result",["caa"]]]]],[11,"as_cname_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["name"]],["name"]]]],[11,"as_cname","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["name"],["option",["name"]]]]],[11,"into_cname","","Returns the inner fields if this is a `RData::CNAME`,…",49,[[],[["name"],["result",["name"]]]]],[11,"as_mx_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["mx"]],["mx"]]]],[11,"as_mx","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["mx"],["option",["mx"]]]]],[11,"into_mx","","Returns the inner fields if this is a `RData::MX`,…",49,[[],[["result",["mx"]],["mx"]]]],[11,"as_naptr_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["naptr"],["option",["naptr"]]]]],[11,"as_naptr","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["naptr"]],["naptr"]]]],[11,"into_naptr","","Returns the inner fields if this is a `RData::NAPTR`,…",49,[[],[["naptr"],["result",["naptr"]]]]],[11,"as_null_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["null"],["option",["null"]]]]],[11,"as_null","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["null"]],["null"]]]],[11,"into_null","","Returns the inner fields if this is a `RData::NULL`,…",49,[[],[["result",["null"]],["null"]]]],[11,"as_ns_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["name"]],["name"]]]],[11,"as_ns","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["name"],["option",["name"]]]]],[11,"into_ns","","Returns the inner fields if this is a `RData::NS`,…",49,[[],[["name"],["result",["name"]]]]],[11,"as_openpgpkey_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["openpgpkey"],["option",["openpgpkey"]]]]],[11,"as_openpgpkey","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["openpgpkey"]],["openpgpkey"]]]],[11,"into_openpgpkey","","Returns the inner fields if this is a `RData::OPENPGPKEY`,…",49,[[],[["openpgpkey"],["result",["openpgpkey"]]]]],[11,"as_opt_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["opt"]],["opt"]]]],[11,"as_opt","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["opt"],["option",["opt"]]]]],[11,"into_opt","","Returns the inner fields if this is a `RData::OPT`,…",49,[[],[["result",["opt"]],["opt"]]]],[11,"as_ptr_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["name"]],["name"]]]],[11,"as_ptr","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["name"],["option",["name"]]]]],[11,"into_ptr","","Returns the inner fields if this is a `RData::PTR`,…",49,[[],[["name"],["result",["name"]]]]],[11,"as_soa_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["soa"]],["soa"]]]],[11,"as_soa","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["soa"],["option",["soa"]]]]],[11,"into_soa","","Returns the inner fields if this is a `RData::SOA`,…",49,[[],[["result",["soa"]],["soa"]]]],[11,"as_srv_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["srv"]],["srv"]]]],[11,"as_srv","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["srv"]],["srv"]]]],[11,"into_srv","","Returns the inner fields if this is a `RData::SRV`,…",49,[[],[["result",["srv"]],["srv"]]]],[11,"as_sshfp_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["option",["sshfp"]],["sshfp"]]]],[11,"as_sshfp","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["sshfp"]],["sshfp"]]]],[11,"into_sshfp","","Returns the inner fields if this is a `RData::SSHFP`,…",49,[[],[["sshfp"],["result",["sshfp"]]]]],[11,"as_tlsa_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["tlsa"],["option",["tlsa"]]]]],[11,"as_tlsa","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["tlsa"]],["tlsa"]]]],[11,"into_tlsa","","Returns the inner fields if this is a `RData::TLSA`,…",49,[[],[["tlsa"],["result",["tlsa"]]]]],[11,"as_txt_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],[["txt"],["option",["txt"]]]]],[11,"as_txt","","Optionally returns references to the inner fields if this…",49,[[["self"]],[["option",["txt"]],["txt"]]]],[11,"into_txt","","Returns the inner fields if this is a `RData::TXT`,…",49,[[],[["txt"],["result",["txt"]]]]],[11,"as_unknown_mut","","Optionally returns mutable references to the inner fields…",49,[[["self"]],["option"]]],[11,"as_unknown","","Optionally returns references to the inner fields if this…",49,[[["self"]],["option"]]],[11,"into_unknown","","Returns the inner fields if this is a `RData::Unknown`,…",49,[[],["result"]]],[11,"as_zero_mut","","Optionally returns references to the inner fields if this…",49,[[["self"]],["option"]]],[11,"as_zero","","Optionally returns references to the inner fields if this…",49,[[["self"]],["option"]]],[11,"read","","Read the RData from the given Decoder",49,[[["bindecoder"],["u16"],["recordtype"],["restrict",["u16"]]],["protoresult"]]],[11,"emit","","RFC 4034, DNSSEC Resource Records, March 2005",49,[[["binencoder"],["self"]],["protoresult"]]],[11,"to_record_type","","Converts this to a Recordtype",49,[[["self"]],["recordtype"]]],[11,"to_ip_addr","","If this is an A or AAAA record type, then an IpAddr will…",49,[[["self"]],[["ipaddr"],["option",["ipaddr"]]]]],[0,"record_type","trust_dns_proto::rr","record type definitions",null,null],[4,"RecordType","trust_dns_proto::rr::record_type","The type of the resource record.",null,null],[13,"A","","RFC 1035[1] IPv4 Address record",50,null],[13,"AAAA","","RFC 3596[2] IPv6 address record",50,null],[13,"ANAME","","ANAME draft-ietf-dnsop-aname",50,null],[13,"ANY","","RFC 1035[1] All cached records, aka ANY",50,null],[13,"AXFR","","RFC 1035[1] Authoritative Zone Transfer",50,null],[13,"CAA","","RFC 6844 Certification Authority Authorization",50,null],[13,"CNAME","","RFC 1035[1] Canonical name record",50,null],[13,"IXFR","","RFC 1996 Incremental Zone Transfer",50,null],[13,"MX","","RFC 1035[1] Mail exchange record",50,null],[13,"NAPTR","","RFC 3403 Naming Authority Pointer",50,null],[13,"NS","","RFC 1035[1] Name server record",50,null],[13,"NULL","","RFC 1035[1] Null server record, for testing",50,null],[13,"OPENPGPKEY","","RFC 7929 OpenPGP public key",50,null],[13,"OPT","","RFC 6891 Option",50,null],[13,"PTR","","RFC 1035[1] Pointer record",50,null],[13,"SOA","","RFC 1035[1] and RFC 2308[9] Start of [a zone of] authority…",50,null],[13,"SRV","","RFC 2782 Service locator",50,null],[13,"SSHFP","","RFC 4255 SSH Public Key Fingerprint",50,null],[13,"TLSA","","RFC 6698 TLSA certificate association",50,null],[13,"TXT","","RFC 1035[1] Text record",50,null],[13,"Unknown","","Unknown Record type, or unsupported",50,null],[13,"ZERO","","This corresponds to a record type of 0, unspecified",50,null],[11,"is_any","","Returns true if this is an ANY",50,[[],["bool"]]],[11,"is_cname","","Returns true if this is a CNAME",50,[[],["bool"]]],[11,"is_srv","","Returns true if this is an SRV",50,[[],["bool"]]],[11,"is_ip_addr","","Returns true if this is an A or an AAAA record",50,[[],["bool"]]],[0,"resource","trust_dns_proto::rr","resource record implementation",null,null],[3,"Record","trust_dns_proto::rr::resource","Resource records are storage value in DNS, into which all…",null,null],[11,"new","","Creates a default record, use the setters to build a more…",51,[[],["record"]]],[11,"with","","Create a record with the specified initial values.",51,[[["name"],["recordtype"],["u32"]],["record"]]],[11,"from_rdata","","Create a record with the specified initial values.",51,[[["name"],["u32"],["rdata"]],["record"]]],[11,"set_name","","`text NAME a domain name to which this resource record…",51,[[["self"],["name"]],["self"]]],[11,"set_rr_type","","`text TYPE two octets containing one of the RR type codes.…",51,[[["self"],["recordtype"]],["self"]]],[11,"set_record_type","","`text TYPE two octets containing one of the RR type codes.…",51,[[["self"],["recordtype"]],["self"]]],[11,"set_dns_class","","`text CLASS two octets which specify the class of the data…",51,[[["dnsclass"],["self"]],["self"]]],[11,"set_ttl","","`text TTL a 32 bit unsigned integer that specifies the…",51,[[["self"],["u32"]],["self"]]],[11,"set_rdata","","`text RDATA a variable length string of octets that…",51,[[["self"],["rdata"]],["self"]]],[11,"name","","Returns the name of the record",51,[[["self"]],["name"]]],[11,"rr_type","","Returns the type of the RData in the record",51,[[["self"]],["recordtype"]]],[11,"record_type","","Returns the type of the RecordData in the record",51,[[["self"]],["recordtype"]]],[11,"dns_class","","Returns the DNSClass of the Record, generally IN fro…",51,[[["self"]],["dnsclass"]]],[11,"ttl","","Returns the time-to-live of the record, for caching purposes",51,[[["self"]],["u32"]]],[11,"rdata","","Returns the Record Data, i.e. the record information",51,[[["self"]],["rdata"]]],[11,"rdata_mut","","Returns a mutable reference to the Record Data",51,[[["self"]],["rdata"]]],[11,"unwrap_rdata","","Returns the RData consuming the Record",51,[[],["rdata"]]],[11,"new","trust_dns_proto::rr","Creates a new Resource Record Set.",52,[[["recordtype"],["u32"],["name"]],["self"]]],[11,"with_ttl","","Creates a new Resource Record Set.",52,[[["name"],["recordtype"],["u32"]],["self"]]],[11,"name","","Return value",52,[[["self"]],["name"]]],[11,"record_type","","Return value",52,[[["self"]],["recordtype"]]],[11,"set_dns_class","","Sets the DNSClass to the specified value",52,[[["dnsclass"],["self"]]]],[11,"dns_class","","Returns the `DNSClass` of the RecordSet",52,[[["self"]],["dnsclass"]]],[11,"set_ttl","","Sets the TTL, in seconds, to the specified value",52,[[["self"],["u32"]]]],[11,"ttl","","Returns the time-to-live for the record.",52,[[["self"]],["u32"]]],[11,"records_without_rrsigs","","Returns a Vec of all records in the set, without any RRSIGs.",52,[[["self"]],["rrsetrecords"]]],[11,"iter","","Returns an iterator over the records in the set",52,[[["self"]],[["record"],["iter",["record"]]]]],[11,"is_empty","","Returns true if there are no records in this set",52,[[["self"]],["bool"]]],[11,"serial","","Returns the serial number at which the record was updated.",52,[[["self"]],["u32"]]],[11,"rrsigs","","Returns a slice of all the Records signatures in the…",52,[[["self"]]]],[11,"insert_rrsig","","Inserts a Signature for the Record set",52,[[["self"],["record"]]]],[11,"clear_rrsigs","","Useful for clearing all signatures when the RecordSet is…",52,[[["self"]]]],[11,"new_record","","creates a new Record as part of this RecordSet, adding the…",52,[[["self"],["rdata"]],["record"]]],[11,"add_rdata","","creates a new Record as part of this RecordSet, adding the…",52,[[["self"],["rdata"]],["bool"]]],[11,"insert","","Inserts a new Resource Record into the Set.",52,[[["self"],["u32"],["record"]],["bool"]]],[11,"remove","","Removes the Resource Record if it exists.",52,[[["self"],["u32"],["record"]],["bool"]]],[11,"is_empty","","This is a best effort emptyness check",13,[[["self"]],["bool"]]],[8,"IntoName","","Conversion into a Name",null,null],[10,"into_name","","Convert this into Name",26,[[],[["name"],["protoresult",["name"]]]]],[8,"TryParseIp","","Types of this trait will can be attempted for conversion…",null,null],[10,"try_parse_ip","","Attempts to parse self into an RData::A or RData::AAAA,…",27,[[["self"]],[["rdata"],["option",["rdata"]]]]],[8,"IntoRecordSet","","Types which implement this can be converted into a RecordSet",null,null],[10,"into_record_set","","Performs the conversion to a RecordSet",53,[[],["recordset"]]],[0,"serialize","trust_dns_proto","Contains serialization libraries for `binary` and text,…",null,null],[0,"binary","trust_dns_proto::serialize","Binary serialization types",null,null],[3,"BinDecoder","trust_dns_proto::serialize::binary","This is non-destructive to the inner buffer, b/c for…",null,null],[3,"BinEncoder","","Encode DNS messages and resource record types.",null,null],[3,"Restrict","","Untrusted types will be wrapped in this type.",null,null],[3,"Verified","","Verified data that can be operated on",null,null],[4,"EncodeMode","","In the Verify mode there maybe some things which are…",null,null],[13,"Signing","","In signing mode records are written in canonical form",54,null],[13,"Normal","","Write records in standard format",54,null],[11,"new","","Creates a new BinDecoder",55,[[],["self"]]],[11,"pop","","Pop one byte from the buffer",55,[[["self"]],[["protoresult",["restrict"]],["restrict",["u8"]]]]],[11,"len","","Returns the number of bytes in the buffer",55,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the buffer is empty",55,[[["self"]],["bool"]]],[11,"peek","","Peed one byte forward, without moving the current index…",55,[[["self"]],[["restrict",["u8"]],["option",["restrict"]]]]],[11,"index","","Returns the current index in the buffer",55,[[["self"]],["usize"]]],[11,"clone","","This is a pretty efficient clone, as the buffer is never…",55,[[["u16"],["self"]],["bindecoder"]]],[11,"read_character_data","","Reads a String from the buffer",55,[[["self"]],[["restrict"],["protoresult",["restrict"]]]]],[11,"read_character_data_max","","Reads to a maximum length of data, returns an error if…",55,[[["self"],["option",["usize"]],["usize"]],[["restrict"],["protoresult",["restrict"]]]]],[11,"read_vec","","Reads a Vec out of the buffer",55,[[["self"],["usize"]],[["restrict",["vec"]],["protoresult",["restrict"]]]]],[11,"read_slice","","Reads a slice out of the buffer, without allocating",55,[[["self"],["usize"]],[["restrict"],["protoresult",["restrict"]]]]],[11,"slice_from","","Reads a slice from a previous index to the current",55,[[["self"],["usize"]],["protoresult"]]],[11,"read_u8","","Reads a byte from the buffer, equivalent to `Self::pop()`",55,[[["self"]],[["protoresult",["restrict"]],["restrict",["u8"]]]]],[11,"read_u16","","Reads the next 2 bytes into u16",55,[[["self"]],[["protoresult",["restrict"]],["restrict",["u16"]]]]],[11,"read_i32","","Reads the next four bytes into i32.",55,[[["self"]],[["restrict",["i32"]],["protoresult",["restrict"]]]]],[11,"read_u32","","Reads the next four bytes into u32.",55,[[["self"]],[["restrict",["u32"]],["protoresult",["restrict"]]]]],[11,"new","","Create a new encoder with the Vec to fill",56,[[["vec"]],["self"]]],[11,"with_mode","","Specify the mode for encoding",56,[[["encodemode"],["vec"]],["self"]]],[11,"with_offset","","Begins the encoder at the given offset",56,[[["encodemode"],["u32"],["vec"]],["self"]]],[11,"set_max_size","","Sets the maximum size of the buffer",56,[[["u16"],["self"]]]],[11,"into_bytes","","Returns a reference to the internal buffer",56,[[],["vec"]]],[11,"len","","Returns the length of the buffer",56,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the buffer is empty",56,[[["self"]],["bool"]]],[11,"offset","","Returns the current offset into the buffer",56,[[["self"]],["usize"]]],[11,"set_offset","","sets the current offset to the new offset",56,[[["self"],["usize"]]]],[11,"mode","","Returns the current Encoding mode",56,[[["self"]],["encodemode"]]],[11,"set_canonical_names","","If set to true, then names will be written into the buffer…",56,[[["self"],["bool"]]]],[11,"is_canonical_names","","Returns true if then encoder is writing in canonical form",56,[[["self"]],["bool"]]],[11,"with_canonical_names","","Emit all names in canonical form, useful for…",56,[[["self"],["fnonce"]],["protoresult"]]],[11,"reserve","","Reserve specified additional length in the internal buffer.",56,[[["self"],["usize"]],["protoresult"]]],[11,"trim","","trims to the current offset",56,[[["self"]]]],[11,"slice_of","","borrow a slice from the encoder",56,[[["self"],["usize"]]]],[11,"store_label_pointer","","Stores a label pointer to an already written label",56,[[["self"],["usize"]]]],[11,"get_label_pointer","","Looks up the index of an already written label",56,[[["self"],["usize"]],[["option",["u16"]],["u16"]]]],[11,"emit","","Emit one byte into the buffer",56,[[["self"],["u8"]],["protoresult"]]],[11,"emit_character_data","","matches description from above.",56,[[["asref"],["self"]],["protoresult"]]],[11,"emit_u8","","Emit one byte into the buffer",56,[[["self"],["u8"]],["protoresult"]]],[11,"emit_u16","","Writes a u16 in network byte order to the buffer",56,[[["u16"],["self"]],["protoresult"]]],[11,"emit_i32","","Writes an i32 in network byte order to the buffer",56,[[["self"],["i32"]],["protoresult"]]],[11,"emit_u32","","Writes an u32 in network byte order to the buffer",56,[[["self"],["u32"]],["protoresult"]]],[11,"emit_vec","","Writes the byte slice to the stream",56,[[["self"]],["protoresult"]]],[11,"emit_all","","Emits all the elements of an Iterator to the encoder",56,[[["iterator"],["self"]],[["protoresult",["usize"]],["usize"]]]],[11,"emit_all_refs","","Emits all the elements of an Iterator to the encoder",56,[[["self"],["i"]],[["protoresult",["usize"]],["usize"]]]],[11,"emit_iter","","emits all items in the iterator, return the number emitted",56,[[["self"],["i"]],[["protoresult",["usize"]],["usize"]]]],[11,"place","","capture a location to write back to",56,[[["self"]],[["protoresult",["place"]],["place"]]]],[11,"len_since_place","","calculates the length of data written since the place was…",56,[[["self"],["place"]],["usize"]]],[11,"emit_at","","write back to a previously captured location",56,[[["place"],["encodedsize"],["self"]],["protoresult"]]],[11,"new","","Create a new restricted type",57,[[["t"]],["self"]]],[11,"verify","","It is the responsibility of this function to verify the…",57,[[["self"],["fn"]],["verified"]]],[11,"verify_unwrap","","It is the responsibility of this function to verify the…",57,[[["fn"]],["result"]]],[11,"unverified","","Unwraps the value without verifying the data, akin to…",57,[[],["t"]]],[11,"map","","Map the internal type of the restriction",57,[[["fn"]],["restrict"]]],[11,"then","","Perform some operation on the data, and return a result.",58,[[["self"],["fn"]],[["result"],["t"]]]],[11,"is_valid","","Is this valid",58,[[["self"]],["bool"]]],[8,"RestrictedMath","","Common checked math operations for the Restrict type",null,null],[16,"Arg","","Argument for the math operations",59,null],[16,"Value","","Return value, generally the same as Arg",59,null],[10,"checked_add","","Checked addition, see `usize::checked_add`",59,[[["self"]],[["result",["restrict"]],["restrict"]]]],[10,"checked_sub","","Checked subtraction, see `usize::checked_sub`",59,[[["self"]],[["result",["restrict"]],["restrict"]]]],[10,"checked_mul","","Checked multiplication, see `usize::checked_mul`",59,[[["self"]],[["result",["restrict"]],["restrict"]]]],[8,"BinEncodable","","A type which can be encoded into a DNS binary format",null,null],[10,"emit","","Write the type to the stream",60,[[["binencoder"],["self"]],["protoresult"]]],[11,"to_bytes","","Returns the object in binary form",60,[[["self"]],[["vec",["u8"]],["protoresult",["vec"]]]]],[8,"BinDecodable","","A trait for types which are serializable to and from DNS…",null,null],[10,"read","","Read the type from the stream",61,[[["bindecoder"]],["protoresult"]]],[11,"from_bytes","","Returns the object in binary form",61,[[],["protoresult"]]],[0,"tcp","trust_dns_proto","TCP protocol related components for DNS",null,null],[3,"TcpClientConnect","trust_dns_proto::tcp","A future that resolves to an TcpClientStream",null,null],[3,"TcpClientStream","","Tcp client stream",null,null],[3,"TcpStream","","A Stream used for sending data to and from a remote DNS…",null,null],[11,"new","","Constructs a new TcpStream for a client to the specified…",62,[[["socketaddr"]]]],[11,"with_timeout","","Constructs a new TcpStream for a client to the specified…",62,[[["socketaddr"],["duration"]]]],[11,"from_stream","","Wraps the TcpStream in TcpClientStream",62,[[["tcpstream"]],["self"]]],[11,"peer_addr","","Returns the address of the peer connection.",63,[[["self"]],["socketaddr"]]],[11,"new","","Creates a new future of the eventually establish a IO…",63,[[["socketaddr"]]]],[11,"with_timeout","","Creates a new future of the eventually establish a IO…",63,[[["socketaddr"],["duration"]]]],[11,"from_stream","","Initializes a TcpStream.",63,[[["s"],["socketaddr"]]]],[11,"from_stream_with_receiver","","Wraps a stream where a sender and receiver have already…",63,[[["unboundedreceiver",["serialmessage"]],["serialmessage"],["socketaddr"],["s"]],["self"]]],[8,"Connect","","Trait for TCP connection",null,null],[16,"Transport","","TcpSteam",64,null],[10,"connect","","connect to tcp",64,[[["socketaddr"]],[["pin",["box"]],["box",["future"]]]]],[0,"udp","trust_dns_proto","UDP protocol related components for DNS",null,null],[3,"UdpClientConnect","trust_dns_proto::udp","A future that resolves to an UdpClientStream",null,null],[3,"UdpClientStream","","A UDP client stream of DNS binary packets",null,null],[3,"UdpResponse","","A future that resolves to",null,null],[3,"UdpStream","","A UDP stream of DNS binary packets",null,null],[11,"new","","it is expected that the resolver wrapper will be…",65,[[["socketaddr"]],[["udpclientconnect",["noopmessagefinalizer"]],["noopmessagefinalizer"]]]],[11,"with_timeout","","Constructs a new UdpStream for a client to the specified…",65,[[["socketaddr"],["duration"]],[["udpclientconnect",["noopmessagefinalizer"]],["noopmessagefinalizer"]]]],[11,"with_timeout_and_signer","","Constructs a new TcpStream for a client to the specified…",65,[[["option",["arc"]],["socketaddr"],["duration"],["arc"]],["udpclientconnect"]]],[11,"new","","This method is intended for client connections, see…",66,[[["socketaddr"]]]],[11,"with_bound","","Initialize the Stream with an already bound socket.…",66,[[["s"]]]],[8,"UdpSocket","","Trait for UdpSocket",null,null],[10,"bind","","UdpSocket",67,[[["socketaddr"]],[["pin",["box"]],["box",["future"]]]]],[10,"recv_from","","Receive data from the socket and returns the number of…",67,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,"send_to","","Send data to the given address.",67,[[["self"],["socketaddr"]],[["box",["future"]],["pin",["box"]]]]],[0,"xfer","trust_dns_proto","DNS high level transit implimentations.",null,null],[3,"DnsExchange","trust_dns_proto::xfer","This is a generic Exchange implemented over multiplexed…",null,null],[3,"DnsExchangeBackground","","This background future is responsible for driving all…",null,null],[3,"DnsExchangeConnect","","A wrapper for a future DnsExchange connection.",null,null],[3,"DnsExchangeSend","","A Future that will resolve to a Response after sending the…",null,null],[3,"SerialMessage","","A DNS message in serialized form, with either the target…",null,null],[3,"BufStreamHandle","","A sender to which serialized DNS Messages can be sent",null,null],[3,"BufDnsStreamHandle","","A buffering stream bound to a `SocketAddr`",null,null],[3,"DnsRequestStreamHandle","","A sender to which serialized DNS Messages can be sent",null,null],[3,"BufDnsRequestStreamHandle","","Used for associating a name_server to a…",null,null],[3,"OneshotDnsRequest","","A OneshotDnsRequest creates a channel for a response to…",null,null],[4,"OneshotDnsResponseReceiver","","A Future that wraps a oneshot::Receiver and resolves to…",null,null],[13,"Receiver","","The receiver",68,null],[13,"Received","","The future once received",68,null],[13,"Err","","Error during the send operation",68,null],[11,"from_stream","","Initializes a TcpStream with an existing tcp::TcpStream.",69,[[["s"]]]],[11,"from_stream_with_receiver","","Wraps a stream where a sender and receiver have already…",69,[[["oneshotdnsrequest"],["unboundedreceiver",["oneshotdnsrequest"]],["s"],["dnsrequeststreamhandle"]]]],[11,"connect","","Returns a future, which itself wraps a future which is…",69,[[["f"]],["dnsexchangeconnect"]]],[0,"dns_handle","","`DnsHandle` types perform conversions of the raw DNS…",null,null],[3,"StreamHandle","trust_dns_proto::xfer::dns_handle","The StreamHandle is the general interface for…",null,null],[8,"DnsStreamHandle","","Implementations of Sinks for sending DNS messages",null,null],[10,"send","","Sends a message to the Handle for delivery to the server.",70,[[["self"],["serialmessage"]],[["result",["protoerror"]],["protoerror"]]]],[8,"DnsHandle","","A trait for implementing high level functions of DNS.",null,null],[16,"Response","","The associated response from the response future, this…",71,null],[11,"is_verifying_dnssec","","Only returns true if and only if this DNS handle is…",71,[[["self"]],["bool"]]],[10,"send","","Send a message via the channel in the client",71,[[["unpin"],["send"],["self"],["dnsrequest"],["into",["dnsrequest"]]]]],[11,"lookup","","A classic DNS query",71,[[["query"],["self"],["dnsrequestoptions"]]]],[11,"new","","Constructs a new StreamHandle for wrapping the sender",72,[[["vec",["u8"]],["unboundedsender",["vec"]]],["self"]]],[0,"dns_multiplexer","trust_dns_proto::xfer","`DnsMultiplexer` and associated types implement the state…",null,null],[3,"DnsMultiplexer","trust_dns_proto::xfer::dns_multiplexer","A DNS Client implemented over futures-rs.",null,null],[3,"DnsMultiplexerConnect","","A wrapper for a future DnsExchange connection",null,null],[3,"DnsMultiplexerSerialResponse","","A future that resolves into a DnsResponse",null,null],[11,"new","","Spawns a new DnsMultiplexer Stream. This uses a default…",73,[[["box",["dnsstreamhandle"]],["option",["arc"]],["dnsstreamhandle"],["f"],["arc"]],["dnsmultiplexerconnect"]]],[11,"with_timeout","","Spawns a new DnsMultiplexer Stream.",73,[[["box",["dnsstreamhandle"]],["option",["arc"]],["duration"],["dnsstreamhandle"],["f"],["arc"]],["dnsmultiplexerconnect"]]],[11,"completion","","Returns a new future with the oneshot completion",74,[[["receiver",["protoresult"]],["protoresult",["dnsresponse"]]],["self"]]],[0,"dns_request","trust_dns_proto::xfer","`DnsRequest` wraps a `Message` and associates a set of…",null,null],[3,"DnsRequestOptions","trust_dns_proto::xfer::dns_request","A set of options for expressing options to how requests…",null,null],[12,"expects_multiple_responses","","When true, the underlying DNS protocols will not return on…",75,null],[3,"DnsRequest","","A DNS request object",null,null],[11,"new","","Returns a new DnsRequest object",76,[[["message"],["dnsrequestoptions"]],["self"]]],[11,"options","","Get the set of request options associated with this request",76,[[["self"]],["dnsrequestoptions"]]],[11,"unwrap","","Unwraps the raw message",76,[[]]],[0,"dns_response","trust_dns_proto::xfer","`DnsResponse` wraps a `Message` and any associated…",null,null],[3,"DnsResponse","trust_dns_proto::xfer::dns_response","A DNS response object",null,null],[11,"messages","","Get all the messages in the Response",77,[[["self"]],[["message"],["iter",["message"]]]]],[11,"messages_mut","","Get all the messages in the Response",77,[[["self"]],[["message"],["itermut",["message"]]]]],[11,"len","","returns the number of messages in the response",77,[[["self"]],["usize"]]],[11,"is_empty","","returns the number of messages in the response",77,[[["self"]],["bool"]]],[0,"retry_dns_handle","trust_dns_proto::xfer","`RetryDnsHandle` allows for DnsQueries to be reattempted…",null,null],[3,"RetryDnsHandle","trust_dns_proto::xfer::retry_dns_handle","Can be used to reattempt a queries if they fail",null,null],[11,"new","","Creates a new Client handler for reattempting requests on…",78,[[["usize"],["h"]],["self"]]],[11,"new","trust_dns_proto::xfer","Construct a new SerialMessage and the source or…",79,[[["vec",["u8"]],["socketaddr"],["u8"]],["self"]]],[11,"bytes","","Get a reference to the bytes",79,[[["self"]]]],[11,"addr","","Get the source or destination address (context dependent)",79,[[["self"]],["socketaddr"]]],[11,"unwrap","","Unwrap the Bytes and address",79,[[]]],[11,"to_message","","Deserializes the inner data into a Message",79,[[["self"]],[["message"],["protoresult",["message"]]]]],[8,"DnsClientStream","","A non-multiplexed stream of Serialized DNS messages",null,null],[10,"name_server_addr","","The remote name server address",80,[[["self"]],["socketaddr"]]],[8,"DnsRequestSender","","Types that implement this are capable of sending a…",null,null],[16,"DnsResponseFuture","","A future that resolves to a response serial message",81,null],[10,"send_message","","Send a message, and return a future of the response",81,[[["self"],["dnsrequest"],["context"]]]],[10,"error_response","","Constructs an error response",81,[[["protoerror"]]]],[10,"shutdown","","Allows the upstream user to inform the underling stream…",81,[[["self"]]]],[10,"is_shutdown","","Returns true if the stream has been shutdown with `shutdown`",81,[[["self"]],["bool"]]],[11,"new","","Constructs a new BufStreamHandle with the associated…",82,[[["unboundedsender",["serialmessage"]],["serialmessage"]],["self"]]],[11,"unbounded_send","","see [`futures::sync::mpsc::UnboundedSender`]",82,[[["serialmessage"],["self"]],[["result",["trysenderror"]],["trysenderror",["serialmessage"]]]]],[11,"new","","Constructs a new Buffered Stream Handle, used for sending…",83,[[["socketaddr"],["bufstreamhandle"]],["self"]]],[11,"new","","Constructs a new BufStreamHandle with the associated…",84,[[["unboundedsender",["oneshotdnsrequest"]],["oneshotdnsrequest"]],["self"]]],[11,"unbounded_send","","see [`futures::sync::mpsc::UnboundedSender`]",84,[[["self"],["oneshotdnsrequest"]],[["trysenderror",["oneshotdnsrequest"]],["result",["trysenderror"]]]]],[11,"new","","Construct a new BufDnsRequestStreamHandle",85,[[["dnsrequeststreamhandle"]],["self"]]],[8,"Executor","trust_dns_proto","Generic executor.",null,null],[10,"new","","Create the implementor itself.",86,[[],["self"]]],[10,"block_on","","Spawns a future object to run synchronously or…",86,[[["self"],["future"]]]],[8,"Time","","Generic Time for Delay and Timeout.",null,null],[10,"delay_for","","Return a type that implements `Future` that will wait…",87,[[["duration"]],[["box",["future"]],["pin",["box"]]]]],[10,"timeout","","Return a type that implement `Future` to complete before…",87,[[["send"],["future"],["duration"]],[["pin",["box"]],["box",["future"]]]]],[14,"trace","","Generate a backtrace",null,null],[11,"from","trust_dns_proto::error","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"vzip","","",88,[[],["v"]]],[11,"from","trust_dns_proto","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"vzip","","",89,[[],["v"]]],[11,"from","trust_dns_proto::error","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"vzip","","",90,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","trust_dns_proto::error::not_openssl","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_string","","",91,[[["self"]],["string"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"vzip","","",91,[[],["v"]]],[11,"from","trust_dns_proto::error::not_ring","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"vzip","","",92,[[],["v"]]],[11,"from","trust_dns_proto::op","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","trust_dns_proto::op::header","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","trust_dns_proto::op::message","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","trust_dns_proto::op::op_code","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","trust_dns_proto::op::query","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","trust_dns_proto::op::response_code","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","trust_dns_proto::rr","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"emit","","",13,[[["self"],["binencoder"]],[["protoerror"],["result",["usize","protoerror"]],["usize"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","trust_dns_proto::rr::dns_class","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","trust_dns_proto::rr::domain","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","trust_dns_proto::rr::domain::usage","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"vzip","","",93,[[],["v"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"vzip","","",94,[[],["v"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"vzip","","",95,[[],["v"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"vzip","","",96,[[],["v"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"vzip","","",97,[[],["v"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"vzip","","",98,[[],["v"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"vzip","","",99,[[],["v"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"vzip","","",100,[[],["v"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"vzip","","",101,[[],["v"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"vzip","","",102,[[],["v"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"vzip","","",103,[[],["v"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"vzip","","",104,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::caa","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::mx","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::naptr","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::null","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::openpgpkey","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::opt","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::soa","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::srv","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::sshfp","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::tlsa","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","trust_dns_proto::rr::rdata::txt","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","trust_dns_proto::rr::record_data","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","trust_dns_proto::rr::record_type","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","trust_dns_proto::rr::resource","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","trust_dns_proto::serialize::binary","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","trust_dns_proto::tcp","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"try_poll","","",105,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",105,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"try_poll_next","","",62,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"try_poll_next","","",63,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","trust_dns_proto::udp","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",106,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"try_poll_next","","",65,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll","","",107,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",107,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"try_poll_next","","",66,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","trust_dns_proto::xfer","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"try_poll","","",108,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",108,[[],["v"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"try_poll","","",109,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",109,[[],["v"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll","","",110,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",110,[[],["v"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"vzip","","",84,[[],["v"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"vzip","","",85,[[],["v"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"vzip","","",111,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"try_poll","","",68,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","trust_dns_proto::xfer::dns_handle","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","trust_dns_proto::xfer::dns_multiplexer","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"try_poll_next","","",73,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"try_poll","","",112,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",112,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"try_poll","","",74,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","trust_dns_proto::xfer::dns_request","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","trust_dns_proto::xfer::dns_response","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","trust_dns_proto::xfer::retry_dns_handle","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"clone","trust_dns_proto::error","",88,[[["self"]],["backtrace"]]],[11,"from","","",88,[[["backtraceframe"],["vec",["backtraceframe"]]],["backtrace"]]],[11,"into","","",88,[[],[["backtraceframe"],["vec",["backtraceframe"]]]]],[11,"default","","",88,[[],["backtrace"]]],[11,"fmt","","",88,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"finalize_message","trust_dns_proto::op::message","",9,[[["message"],["u32"],["self"]],[["vec",["record"]],["protoresult",["vec"]]]]],[11,"into_label","trust_dns_proto::rr::domain","",15,[[],[["protoresult",["label"]],["label"]]]],[11,"try_parse_ip","trust_dns_proto::rr","Always returns none for Name, it assumes something that is…",16,[[["self"]],[["rdata"],["option",["rdata"]]]]],[11,"into_record_set","trust_dns_proto::rr::resource","",51,[[],["recordset"]]],[11,"into_record_set","trust_dns_proto::rr","",52,[[],["self"]]],[11,"checked_add","trust_dns_proto::serialize::binary","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_sub","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_mul","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_add","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_sub","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_mul","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_add","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_sub","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"checked_mul","","",57,[[["self"]],[["result",["restrict"]],["restrict"]]]],[11,"emit","trust_dns_proto::op","",2,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::op::header","",4,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::op::message","",8,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::op::query","",11,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::rr::dns_class","",14,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::rr","",16,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::rr::rdata::opt","",37,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::rr::record_type","",50,[[["binencoder"],["self"]],["protoresult"]]],[11,"emit","trust_dns_proto::rr::resource","",51,[[["binencoder"],["self"]],["protoresult"]]],[11,"read","trust_dns_proto::op::header","",4,[[["bindecoder"]],["protoresult"]]],[11,"read","trust_dns_proto::op::message","",8,[[["bindecoder"]],["protoresult"]]],[11,"read","trust_dns_proto::op::query","",11,[[["bindecoder"]],["protoresult"]]],[11,"read","trust_dns_proto::rr::dns_class","",14,[[["bindecoder"]],["protoresult"]]],[11,"read","trust_dns_proto::rr","parses the chain of labels this has a max of 255 octets,…",16,[[["bindecoder"]],[["name"],["protoresult",["name"]]]]],[11,"read","trust_dns_proto::rr::record_type","",50,[[["bindecoder"]],["protoresult"]]],[11,"read","trust_dns_proto::rr::resource","parse a resource record line example: WARNING: the…",51,[[["bindecoder"]],[["protoresult",["record"]],["record"]]]],[11,"send","trust_dns_proto::xfer::dns_handle","",72,[[["self"],["serialmessage"]],[["result",["protoerror"]],["protoerror"]]]],[11,"send","trust_dns_proto::xfer","",83,[[["self"],["serialmessage"]],[["result",["protoerror"]],["protoerror"]]]],[11,"send","","",69,[[["unpin"],["send"],["self"],["dnsrequest"],["into",["dnsrequest"]]]]],[11,"send","trust_dns_proto::xfer::retry_dns_handle","",78,[[["self"],["dnsrequest"],["into",["dnsrequest"]]]]],[11,"send","trust_dns_proto::xfer","",85,[[["self"],["dnsrequest"],["into",["dnsrequest"]]]]],[11,"name_server_addr","trust_dns_proto::tcp","",62,[[["self"]],["socketaddr"]]],[11,"send_message","trust_dns_proto::udp","",65,[[["self"],["dnsrequest"],["context"]]]],[11,"error_response","","",65,[[["protoerror"]]]],[11,"shutdown","","",65,[[["self"]]]],[11,"is_shutdown","","",65,[[["self"]],["bool"]]],[11,"send_message","trust_dns_proto::xfer::dns_multiplexer","",73,[[["self"],["dnsrequest"],["context"]]]],[11,"error_response","","",73,[[["protoerror"]]]],[11,"shutdown","","",73,[[["self"]]]],[11,"is_shutdown","","",73,[[["self"]],["bool"]]],[11,"delay_for","trust_dns_proto","",89,[[["duration"]],[["box",["future"]],["pin",["box"]]]]],[11,"timeout","","",89,[[["send"],["future"],["duration"]],[["pin",["box"]],["box",["future"]]]]],[11,"as_ref","trust_dns_proto::rr::domain","",15,[[["self"]]]],[11,"from","trust_dns_proto::error","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["unspecified"]],["self"]]],[11,"from","","",0,[[["sslerrorstack"]],["self"]]],[11,"from","","",0,[[["parseerror"]],["self"]]],[11,"from","","",0,[[["utf8error"]],["self"]]],[11,"from","","",1,[[["protoerrorkind"]],["protoerror"]]],[11,"from","","",1,[[["str"]],["protoerror"]]],[11,"from","","",1,[[["string"]],["protoerror"]]],[11,"from","","",1,[[["error"]],["protoerror"]]],[11,"from","","",1,[[["poisonerror"]],["protoerror"]]],[11,"from","","",1,[[["unspecified"]],["protoerror"]]],[11,"from","","",1,[[["sslerrorstack"]],["protoerror"]]],[11,"from","","",1,[[["parseerror"]],["protoerror"]]],[11,"from","","",1,[[["utf8error"]],["protoerror"]]],[11,"from","trust_dns_proto::op","",2,[[["record"]],["self"]]],[11,"from","trust_dns_proto::rr::resource","This returns a Resource Record that is formatted for…",51,[[["edns"]],["record"]]],[11,"from","trust_dns_proto::op::response_code","",12,[[["u16"]],["self"]]],[11,"from","trust_dns_proto::rr","",16,[[["ipaddr"]],["name"]]],[11,"from","","",16,[[["ipv4addr"]],["name"]]],[11,"from","","",16,[[["ipv6addr"]],["name"]]],[11,"from","trust_dns_proto::rr::rdata::caa","",28,[[["string"]],["property"]]],[11,"from","trust_dns_proto::rr::rdata::opt","",36,[[["u16"]],["ednscode"]]],[11,"from","","",37,[[],["ednsoption"]]],[11,"from","","",36,[[["ednsoption"]],["ednscode"]]],[11,"from","trust_dns_proto::rr::rdata::sshfp","",41,[[["u8"]],["self"]]],[11,"from","","",42,[[["u8"]],["self"]]],[11,"from","trust_dns_proto::rr::rdata::tlsa","",44,[[["u8"]],["self"]]],[11,"from","","",45,[[["u8"]],["self"]]],[11,"from","","",46,[[["u8"]],["self"]]],[11,"from","trust_dns_proto::rr::record_type","Convert from `u16` to `RecordType`",50,[[["u16"]],["self"]]],[11,"from","trust_dns_proto::rr","",52,[[["record"]],["self"]]],[11,"from","trust_dns_proto::op::message","",8,[[["dnsresponse"]],["message"]]],[11,"from","trust_dns_proto::xfer::dns_response","",77,[[["message"]],["dnsresponse"]]],[11,"from","","",77,[[["smallvec"]],["dnsresponse"]]],[11,"into","trust_dns_proto::op::message","",8,[[],["dnsrequest"]]],[11,"into_iter","trust_dns_proto::rr","",52,[[]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"clone","trust_dns_proto::error","",1,[[["self"]],["protoerror"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","trust_dns_proto::op","",2,[[["self"]],["edns"]]],[11,"clone","trust_dns_proto::op::header","",4,[[["self"]],["header"]]],[11,"clone","","",3,[[["self"]],["messagetype"]]],[11,"clone","trust_dns_proto::op::message","",8,[[["self"]],["message"]]],[11,"clone","trust_dns_proto::op::op_code","",10,[[["self"]],["opcode"]]],[11,"clone","trust_dns_proto::op::query","",11,[[["self"]],["query"]]],[11,"clone","trust_dns_proto::op::response_code","",12,[[["self"]],["responsecode"]]],[11,"clone","trust_dns_proto::rr::dns_class","",14,[[["self"]],["dnsclass"]]],[11,"clone","trust_dns_proto::rr::domain","",15,[[["self"]],["label"]]],[11,"clone","trust_dns_proto::rr","",16,[[["self"]],["name"]]],[11,"clone","trust_dns_proto::rr::domain::usage","",17,[[["self"]],["userusage"]]],[11,"clone","","",18,[[["self"]],["appusage"]]],[11,"clone","","",19,[[["self"]],["resolverusage"]]],[11,"clone","","",20,[[["self"]],["cacheusage"]]],[11,"clone","","",21,[[["self"]],["authusage"]]],[11,"clone","","",22,[[["self"]],["opusage"]]],[11,"clone","","",23,[[["self"]],["registryusage"]]],[11,"clone","trust_dns_proto::rr::rdata::caa","",30,[[["self"]],["caa"]]],[11,"clone","","",28,[[["self"]],["property"]]],[11,"clone","","",29,[[["self"]],["value"]]],[11,"clone","","",31,[[["self"]],["keyvalue"]]],[11,"clone","trust_dns_proto::rr::rdata::mx","",32,[[["self"]],["mx"]]],[11,"clone","trust_dns_proto::rr::rdata::naptr","",33,[[["self"]],["naptr"]]],[11,"clone","trust_dns_proto::rr::rdata::null","",34,[[["self"]],["null"]]],[11,"clone","trust_dns_proto::rr::rdata::openpgpkey","",35,[[["self"]],["openpgpkey"]]],[11,"clone","trust_dns_proto::rr::rdata::opt","",38,[[["self"]],["opt"]]],[11,"clone","","",36,[[["self"]],["ednscode"]]],[11,"clone","","",37,[[["self"]],["ednsoption"]]],[11,"clone","trust_dns_proto::rr::rdata::soa","",39,[[["self"]],["soa"]]],[11,"clone","trust_dns_proto::rr::rdata::srv","",40,[[["self"]],["srv"]]],[11,"clone","trust_dns_proto::rr::rdata::sshfp","",43,[[["self"]],["sshfp"]]],[11,"clone","","",41,[[["self"]],["algorithm"]]],[11,"clone","","",42,[[["self"]],["fingerprinttype"]]],[11,"clone","trust_dns_proto::rr::rdata::tlsa","",47,[[["self"]],["tlsa"]]],[11,"clone","","",44,[[["self"]],["certusage"]]],[11,"clone","","",45,[[["self"]],["selector"]]],[11,"clone","","",46,[[["self"]],["matching"]]],[11,"clone","trust_dns_proto::rr::rdata::txt","",48,[[["self"]],["txt"]]],[11,"clone","trust_dns_proto::rr::record_data","",49,[[["self"]],["rdata"]]],[11,"clone","trust_dns_proto::rr::record_type","",50,[[["self"]],["recordtype"]]],[11,"clone","trust_dns_proto::rr::resource","",51,[[["self"]],["record"]]],[11,"clone","trust_dns_proto::rr","",52,[[["self"]],["recordset"]]],[11,"clone","trust_dns_proto::serialize::binary","",54,[[["self"]],["encodemode"]]],[11,"clone","","",57,[[["self"]],["restrict"]]],[11,"clone","trust_dns_proto::xfer","",69,[[["self"]],["self"]]],[11,"clone","trust_dns_proto::xfer::dns_request","",75,[[["self"]],["dnsrequestoptions"]]],[11,"clone","","",76,[[["self"]],["dnsrequest"]]],[11,"clone","trust_dns_proto::xfer::dns_response","",77,[[["self"]],["dnsresponse"]]],[11,"clone","trust_dns_proto::xfer::retry_dns_handle","",78,[[["self"]],["retrydnshandle"]]],[11,"clone","trust_dns_proto::xfer","",82,[[["self"]],["bufstreamhandle"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"default","trust_dns_proto::op","",2,[[],["self"]]],[11,"default","trust_dns_proto::op::header","",4,[[],["self"]]],[11,"default","trust_dns_proto::op::message","",8,[[],["message"]]],[11,"default","trust_dns_proto::op::query","Return a default query with an empty name and A, IN for…",11,[[],["self"]]],[11,"default","trust_dns_proto::rr","",16,[[],["name"]]],[11,"default","trust_dns_proto::rr::rdata::null","",34,[[],["null"]]],[11,"default","trust_dns_proto::rr::rdata::opt","",38,[[],["opt"]]],[11,"default","trust_dns_proto::rr::resource","",51,[[],["self"]]],[11,"default","trust_dns_proto::xfer::dns_request","",75,[[],["dnsrequestoptions"]]],[11,"cmp","trust_dns_proto::rr::dns_class","",14,[[["self"]],["ordering"]]],[11,"cmp","trust_dns_proto::rr::domain","",15,[[["self"]],["ordering"]]],[11,"cmp","trust_dns_proto::rr","Case insensitive comparison, see [`Name::cmp_case`] for…",16,[[["self"]],["ordering"]]],[11,"cmp","trust_dns_proto::rr::record_data","",49,[[["self"]],["ordering"]]],[11,"cmp","trust_dns_proto::rr::record_type","",50,[[["self"]],["ordering"]]],[11,"cmp","trust_dns_proto::rr::resource","",51,[[["self"],["record"]],["ordering"]]],[11,"eq","trust_dns_proto::op","",2,[[["edns"],["self"]],["bool"]]],[11,"ne","","",2,[[["edns"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::op::header","",4,[[["self"],["header"]],["bool"]]],[11,"ne","","",4,[[["self"],["header"]],["bool"]]],[11,"eq","","",3,[[["messagetype"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::op::message","",8,[[["message"],["self"]],["bool"]]],[11,"ne","","",8,[[["message"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::op::op_code","",10,[[["opcode"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::op::query","",11,[[["self"],["query"]],["bool"]]],[11,"ne","","",11,[[["self"],["query"]],["bool"]]],[11,"eq","trust_dns_proto::op::response_code","",12,[[["responsecode"],["self"]],["bool"]]],[11,"ne","","",12,[[["responsecode"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::dns_class","",14,[[["self"],["dnsclass"]],["bool"]]],[11,"ne","","",14,[[["self"],["dnsclass"]],["bool"]]],[11,"eq","trust_dns_proto::rr::domain","",15,[[["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr","",16,[[["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::domain::usage","",17,[[["userusage"],["self"]],["bool"]]],[11,"eq","","",18,[[["appusage"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["resolverusage"]],["bool"]]],[11,"eq","","",20,[[["self"],["cacheusage"]],["bool"]]],[11,"eq","","",21,[[["self"],["authusage"]],["bool"]]],[11,"eq","","",22,[[["opusage"],["self"]],["bool"]]],[11,"eq","","",23,[[["registryusage"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::caa","",30,[[["self"],["caa"]],["bool"]]],[11,"ne","","",30,[[["self"],["caa"]],["bool"]]],[11,"eq","","",28,[[["property"],["self"]],["bool"]]],[11,"ne","","",28,[[["property"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["value"]],["bool"]]],[11,"ne","","",29,[[["self"],["value"]],["bool"]]],[11,"eq","","",31,[[["self"],["keyvalue"]],["bool"]]],[11,"ne","","",31,[[["self"],["keyvalue"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::mx","",32,[[["self"],["mx"]],["bool"]]],[11,"ne","","",32,[[["self"],["mx"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::naptr","",33,[[["self"],["naptr"]],["bool"]]],[11,"ne","","",33,[[["self"],["naptr"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::null","",34,[[["null"],["self"]],["bool"]]],[11,"ne","","",34,[[["null"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::openpgpkey","",35,[[["self"],["openpgpkey"]],["bool"]]],[11,"ne","","",35,[[["self"],["openpgpkey"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::opt","",38,[[["opt"],["self"]],["bool"]]],[11,"ne","","",38,[[["opt"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["ednscode"]],["bool"]]],[11,"ne","","",36,[[["self"],["ednscode"]],["bool"]]],[11,"eq","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"ne","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::soa","",39,[[["soa"],["self"]],["bool"]]],[11,"ne","","",39,[[["soa"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::srv","",40,[[["self"],["srv"]],["bool"]]],[11,"ne","","",40,[[["self"],["srv"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::sshfp","",43,[[["self"],["sshfp"]],["bool"]]],[11,"ne","","",43,[[["self"],["sshfp"]],["bool"]]],[11,"eq","","",41,[[["self"],["algorithm"]],["bool"]]],[11,"ne","","",41,[[["self"],["algorithm"]],["bool"]]],[11,"eq","","",42,[[["fingerprinttype"],["self"]],["bool"]]],[11,"ne","","",42,[[["fingerprinttype"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::tlsa","",47,[[["tlsa"],["self"]],["bool"]]],[11,"ne","","",47,[[["tlsa"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["certusage"]],["bool"]]],[11,"ne","","",44,[[["self"],["certusage"]],["bool"]]],[11,"eq","","",45,[[["selector"],["self"]],["bool"]]],[11,"ne","","",45,[[["selector"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["matching"]],["bool"]]],[11,"ne","","",46,[[["self"],["matching"]],["bool"]]],[11,"eq","trust_dns_proto::rr::rdata::txt","",48,[[["self"],["txt"]],["bool"]]],[11,"ne","","",48,[[["self"],["txt"]],["bool"]]],[11,"eq","trust_dns_proto::rr::record_data","",49,[[["self"],["rdata"]],["bool"]]],[11,"ne","","",49,[[["self"],["rdata"]],["bool"]]],[11,"eq","trust_dns_proto::rr::record_type","",50,[[["recordtype"],["self"]],["bool"]]],[11,"ne","","",50,[[["recordtype"],["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr::resource","Equality or records, as defined by RFC 2136, DNS Update,…",51,[[["self"]],["bool"]]],[11,"eq","trust_dns_proto::rr","",52,[[["self"],["recordset"]],["bool"]]],[11,"ne","","",52,[[["self"],["recordset"]],["bool"]]],[11,"eq","trust_dns_proto::serialize::binary","",54,[[["encodemode"],["self"]],["bool"]]],[11,"partial_cmp","trust_dns_proto::op::header","",4,[[["self"],["header"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",4,[[["self"],["header"]],["bool"]]],[11,"le","","",4,[[["self"],["header"]],["bool"]]],[11,"gt","","",4,[[["self"],["header"]],["bool"]]],[11,"ge","","",4,[[["self"],["header"]],["bool"]]],[11,"partial_cmp","","",3,[[["messagetype"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::op::op_code","",10,[[["opcode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::op::response_code","",12,[[["responsecode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",12,[[["responsecode"],["self"]],["bool"]]],[11,"le","","",12,[[["responsecode"],["self"]],["bool"]]],[11,"gt","","",12,[[["responsecode"],["self"]],["bool"]]],[11,"ge","","",12,[[["responsecode"],["self"]],["bool"]]],[11,"partial_cmp","trust_dns_proto::rr::dns_class","",14,[[["self"],["dnsclass"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::rr::domain","",15,[[["label"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::rr","",16,[[["self"],["name"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::rr::rdata::opt","",37,[[["ednsoption"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"le","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"gt","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"ge","","",37,[[["ednsoption"],["self"]],["bool"]]],[11,"partial_cmp","trust_dns_proto::rr::record_data","",49,[[["self"],["rdata"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::rr::record_type","",50,[[["recordtype"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","trust_dns_proto::rr::resource","Canonical ordering as defined by RFC 4034, DNSSEC Resource…",51,[[["self"],["record"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","trust_dns_proto::error","",90,[[["self"]],["bool"]]],[11,"deref","trust_dns_proto::op::message","",8,[[["self"]]]],[11,"deref","trust_dns_proto::rr::domain::usage","",93,[[["self"]],["zoneusage"]]],[11,"deref","","",94,[[["self"]],["name"]]],[11,"deref","","",95,[[["self"]],["name"]]],[11,"deref","","",96,[[["self"]],["zoneusage"]]],[11,"deref","","",97,[[["self"]],["zoneusage"]]],[11,"deref","","",98,[[["self"]],["zoneusage"]]],[11,"deref","","",99,[[["self"]],["zoneusage"]]],[11,"deref","","",100,[[["self"]],["zoneusage"]]],[11,"deref","","",101,[[["self"]],["zoneusage"]]],[11,"deref","","",102,[[["self"]],["zoneusage"]]],[11,"deref","","",103,[[["self"]],["zoneusage"]]],[11,"deref","","",104,[[["self"]],["zoneusage"]]],[11,"deref","","",24,[[["self"]]]],[11,"deref","trust_dns_proto::xfer::dns_request","",76,[[["self"]]]],[11,"deref","trust_dns_proto::xfer::dns_response","",77,[[["self"]]]],[11,"deref_mut","trust_dns_proto::xfer::dns_request","",76,[[["self"]]]],[11,"deref_mut","trust_dns_proto::xfer::dns_response","",77,[[["self"]]]],[11,"fmt","trust_dns_proto::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::error::not_openssl","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::error::not_ring","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op::header","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op::message","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op::op_code","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op::query","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::op::response_code","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::dns_class","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::domain","",15,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::rr","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::caa","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::mx","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::naptr","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::null","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::openpgpkey","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::opt","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::soa","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::srv","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::sshfp","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::tlsa","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::rdata::txt","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::record_data","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::record_type","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::resource","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::xfer::dns_response","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::error","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::error::not_openssl","",91,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::error::not_ring","",92,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::op::query","",11,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::op::response_code","",12,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::rr::dns_class","",14,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::rr::domain","outputs characters in a safe string manner.",15,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::rr","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_proto::rr::record_type","",50,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::tcp","",62,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::udp","",65,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","trust_dns_proto::xfer::dns_multiplexer","",73,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"index","trust_dns_proto::rr","",16,[[["self"],["usize"]],["label"]]],[11,"hash","trust_dns_proto::op::query","",11,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::dns_class","",14,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::domain","",15,[[["self"],["h"]]]],[11,"hash","trust_dns_proto::rr","",16,[[["self"],["h"]]]],[11,"hash","trust_dns_proto::rr::rdata::caa","",30,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::mx","",32,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::naptr","",33,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::null","",34,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::openpgpkey","",35,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::opt","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::soa","",39,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::srv","",40,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::sshfp","",43,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::tlsa","",47,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::rdata::txt","",48,[[["self"],["__h"]]]],[11,"hash","trust_dns_proto::rr::record_type","",50,[[["self"],["__h"]]]],[11,"from_str","trust_dns_proto::rr::dns_class","Convert from `&str` to `DNSClass`",14,[[["str"]],["protoresult"]]],[11,"from_str","trust_dns_proto::rr","Uses the Name::from_utf8 conversion on this string, see…",16,[[["str"]],["result"]]],[11,"from_str","trust_dns_proto::rr::record_type","Convert `&str` to `RecordType`",50,[[["str"]],["protoresult"]]],[11,"borrow","trust_dns_proto::rr::domain","",15,[[["self"]]]],[11,"source","trust_dns_proto::error","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"description","trust_dns_proto::error::not_openssl","",91,[[["self"]],["str"]]],[11,"description","trust_dns_proto::error::not_ring","",92,[[["self"]],["str"]]],[11,"poll","trust_dns_proto::tcp","",105,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","trust_dns_proto::udp","",107,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",106,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","trust_dns_proto::xfer","",110,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",108,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",109,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","trust_dns_proto::xfer::dns_multiplexer","",112,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",74,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","trust_dns_proto::xfer","",68,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_next","trust_dns_proto::tcp","",62,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",63,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","trust_dns_proto::udp","",65,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",66,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","trust_dns_proto::xfer::dns_multiplexer","",73,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"initialize","trust_dns_proto::error","",90,[[["self"]]]],[11,"initialize","trust_dns_proto::rr::domain::usage","",93,[[["self"]]]],[11,"initialize","","",94,[[["self"]]]],[11,"initialize","","",95,[[["self"]]]],[11,"initialize","","",96,[[["self"]]]],[11,"initialize","","",97,[[["self"]]]],[11,"initialize","","",98,[[["self"]]]],[11,"initialize","","",99,[[["self"]]]],[11,"initialize","","",100,[[["self"]]]],[11,"initialize","","",101,[[["self"]]]],[11,"initialize","","",102,[[["self"]]]],[11,"initialize","","",103,[[["self"]]]],[11,"initialize","","",104,[[["self"]]]],[11,"new","trust_dns_proto::error","Captures a backtrace at the callsite of this function,…",88,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",88,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",88,[[["self"]]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",88,[[["self"]]]]],"p":[[4,"ProtoErrorKind"],[3,"ProtoError"],[3,"Edns"],[4,"MessageType"],[3,"Header"],[3,"HeaderCounts"],[8,"MessageFinalizer"],[8,"EmitAndCount"],[3,"Message"],[3,"NoopMessageFinalizer"],[4,"OpCode"],[3,"Query"],[4,"ResponseCode"],[4,"RrsetRecords"],[4,"DNSClass"],[3,"Label"],[3,"Name"],[4,"UserUsage"],[4,"AppUsage"],[4,"ResolverUsage"],[4,"CacheUsage"],[4,"AuthUsage"],[4,"OpUsage"],[4,"RegistryUsage"],[3,"ZoneUsage"],[8,"IntoLabel"],[8,"IntoName"],[8,"TryParseIp"],[4,"Property"],[4,"Value"],[3,"CAA"],[3,"KeyValue"],[3,"MX"],[3,"NAPTR"],[3,"NULL"],[3,"OPENPGPKEY"],[4,"EdnsCode"],[4,"EdnsOption"],[3,"OPT"],[3,"SOA"],[3,"SRV"],[4,"Algorithm"],[4,"FingerprintType"],[3,"SSHFP"],[4,"CertUsage"],[4,"Selector"],[4,"Matching"],[3,"TLSA"],[3,"TXT"],[4,"RData"],[4,"RecordType"],[3,"Record"],[3,"RecordSet"],[8,"IntoRecordSet"],[4,"EncodeMode"],[3,"BinDecoder"],[3,"BinEncoder"],[3,"Restrict"],[3,"Verified"],[8,"RestrictedMath"],[8,"BinEncodable"],[8,"BinDecodable"],[3,"TcpClientStream"],[3,"TcpStream"],[8,"Connect"],[3,"UdpClientStream"],[3,"UdpStream"],[8,"UdpSocket"],[4,"OneshotDnsResponseReceiver"],[3,"DnsExchange"],[8,"DnsStreamHandle"],[8,"DnsHandle"],[3,"StreamHandle"],[3,"DnsMultiplexer"],[3,"DnsMultiplexerSerialResponse"],[3,"DnsRequestOptions"],[3,"DnsRequest"],[3,"DnsResponse"],[3,"RetryDnsHandle"],[3,"SerialMessage"],[8,"DnsClientStream"],[8,"DnsRequestSender"],[3,"BufStreamHandle"],[3,"BufDnsStreamHandle"],[3,"DnsRequestStreamHandle"],[3,"BufDnsRequestStreamHandle"],[8,"Executor"],[8,"Time"],[3,"ExtBacktrace"],[3,"TokioTime"],[3,"ENABLE_BACKTRACE"],[3,"SslErrorStack"],[3,"Unspecified"],[3,"DEFAULT"],[3,"IN_ADDR_ARPA"],[3,"IP6_ARPA"],[3,"LOCALHOST"],[3,"IN_ADDR_ARPA_127"],[3,"IP6_ARPA_1"],[3,"LOCAL"],[3,"IN_ADDR_ARPA_169_254"],[3,"IP6_ARPA_FE_8"],[3,"IP6_ARPA_FE_9"],[3,"IP6_ARPA_FE_B"],[3,"INVALID"],[3,"TcpClientConnect"],[3,"UdpClientConnect"],[3,"UdpResponse"],[3,"DnsExchangeBackground"],[3,"DnsExchangeConnect"],[3,"DnsExchangeSend"],[3,"OneshotDnsRequest"],[3,"DnsMultiplexerConnect"]]};
searchIndex["trust_dns_resolver"] = {"doc":"The Resolver is responsible for performing recursive…","i":[[8,"IntoName","trust_dns_resolver","Conversion into a Name",null,null],[10,"into_name","","Convert this into Name",0,[[],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[3,"Name","","Them should be through references. As a workaround the…",null,null],[8,"TryParseIp","","Types of this trait will can be attempted for conversion…",null,null],[10,"try_parse_ip","","Attempts to parse self into an RData::A or RData::AAAA,…",1,[[["self"]],[["rdata"],["option",["rdata"]]]]],[3,"AsyncResolver","","An asynchronous resolver for DNS generic over async…",null,null],[3,"Hosts","","Configuration for the local hosts file",null,null],[3,"Resolver","","The Resolver is used for performing DNS queries.",null,null],[5,"version","","returns a version as specified in Cargo.toml",null,[[],["str"]]],[11,"tokio","","Construct a new Tokio based `AsyncResolver` with the…",2,[[["resolverconfig"],["resolveropts"]]]],[11,"tokio_from_system_conf","","Constructs a new Tokio based Resolver with the system…",2,[[]]],[11,"new","","Construct a new `AsyncResolver` with the provided…",2,[[["resolverconfig"],["resolveropts"]]]],[11,"from_system_conf","","Constructs a new Resolver with the system configuration.",2,[[]]],[11,"new_with_conn","","Construct a new `AsyncResolver` with the provided…",2,[[["resolverconfig"],["resolveropts"],["p"]]]],[11,"from_system_conf_with_provider","","Constructs a new Resolver with the system configuration.",2,[[["p"]]]],[11,"lookup","","Generic lookup for any RecordType",2,[[["intoname"],["dnsrequestoptions"],["self"],["recordtype"]]]],[11,"lookup_ip","","Performs a dual-stack DNS lookup for the IP for the given…",2,[[["self"],["tryparseip"],["intoname"]]]],[11,"reverse_lookup","","Performs a lookup for the associated type.",2,[[["ipaddr"],["self"]]]],[11,"ipv4_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"ipv6_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"mx_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"ns_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"soa_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"srv_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[11,"txt_lookup","","Performs a lookup for the associated type.",2,[[["self"],["intoname"]]]],[0,"config","","Configuration for a resolver",null,null],[3,"ResolverConfig","trust_dns_resolver::config","Configuration for the upstream nameservers to use for…",null,null],[3,"NameServerConfig","","Configuration for the NameServer",null,null],[12,"socket_addr","","The address which the DNS NameServer is registered at.",3,null],[12,"protocol","","The protocol to use when communicating with the NameServer.",3,null],[12,"tls_dns_name","","SPKI name, only relevant for TLS connections",3,null],[3,"NameServerConfigGroup","","A set of name_servers to associate with a…",null,null],[3,"ResolverOpts","","Configuration for the Resolver",null,null],[12,"ndots","","Sets the number of dots that must appear (unless it's a…",4,null],[12,"timeout","","Specify the timeout for a request. Defaults to 5 seconds",4,null],[12,"attempts","","Number of attempts before giving up. Defaults to 2",4,null],[12,"rotate","","Rotate through the resource records in the response (if…",4,null],[12,"check_names","","Validate the names in the response, not implemented don't…",4,null],[12,"edns0","","Enable edns, for larger records",4,null],[12,"validate","","Use DNSSec to validate the request",4,null],[12,"ip_strategy","","The ip_strategy for the Resolver to use when lookup Ipv4…",4,null],[12,"cache_size","","Cache size is in number of records (some records can be…",4,null],[12,"use_hosts_file","","Check /ect/hosts file before dns requery (only works for…",4,null],[12,"positive_min_ttl","","Optional minimum TTL for positive responses.",4,null],[12,"negative_min_ttl","","Optional minimum TTL for negative (`NXDOMAIN`) responses.",4,null],[12,"positive_max_ttl","","Optional maximum TTL for positive responses.",4,null],[12,"negative_max_ttl","","Optional maximum TTL for negative (`NXDOMAIN`) responses.",4,null],[12,"distrust_nx_responses","","Default is to distrust negative responses from upstream…",4,null],[12,"num_concurrent_reqs","","Concurrent requests where more than one Nameserver is…",4,null],[4,"Protocol","","The protocol on which a NameServer should be communicated…",null,null],[13,"Udp","","UDP is the traditional DNS port, this is generally the…",5,null],[13,"Tcp","","TCP can be used for large queries, but not all NameServers…",5,null],[4,"LookupIpStrategy","","The lookup ip strategy",null,null],[13,"Ipv4Only","","Only query for A (Ipv4) records",6,null],[13,"Ipv6Only","","Only query for AAAA (Ipv6) records",6,null],[13,"Ipv4AndIpv6","","Query for A and AAAA in parallel",6,null],[13,"Ipv6thenIpv4","","Query for Ipv6 if that fails, query for Ipv4",6,null],[13,"Ipv4thenIpv6","","Query for Ipv4 if that fails, query for Ipv6 (default)",6,null],[11,"new","","Creates a new empty configuration",7,[[],["self"]]],[11,"google","","Creates a default configuration, using `8.8.8.8`,…",7,[[],["self"]]],[11,"cloudflare","","Creates a default configuration, using `1.1.1.1`,…",7,[[],["self"]]],[11,"quad9","","Creates a configuration, using `9.9.9.9` and…",7,[[],["self"]]],[11,"from_parts","","Create a ResolverConfig with all parts specified",7,[[["name"],["into",["nameserverconfiggroup"]],["vec",["name"]],["nameserverconfiggroup"],["option",["name"]]],["self"]]],[11,"domain","","Returns the local domain",7,[[["self"]],[["option",["name"]],["name"]]]],[11,"set_domain","","Set the domain of the entity querying results.",7,[[["name"],["self"]]]],[11,"search","","Returns the search domains",7,[[["self"]]]],[11,"add_search","","Add a search domain",7,[[["name"],["self"]]]],[11,"add_name_server","","Add the configuration for a name server",7,[[["self"],["nameserverconfig"]]]],[11,"name_servers","","Returns a reference to the name servers",7,[[["self"]]]],[11,"is_datagram","","Returns true if this is a datagram oriented protocol, e.g.…",5,[[],["bool"]]],[11,"is_stream","","Returns true if this is a stream oriented protocol, e.g. TCP",5,[[],["bool"]]],[11,"is_encrypted","","Is this an encrypted protocol, i.e. TLS or HTTPS",5,[[],["bool"]]],[11,"new","","Creates a new `NameServerConfigGroup` with a default size…",8,[[],["self"]]],[11,"with_capacity","","Creates a new `NameServiceConfigGroup` with the specified…",8,[[["usize"]],["self"]]],[11,"from_ips_clear","","Configure a NameServer address and port",8,[[["u16"]],["self"]]],[11,"google","","Creates a default configuration, using `8.8.8.8`,…",8,[[],["self"]]],[11,"cloudflare","","Creates a default configuration, using `1.1.1.1`,…",8,[[],["self"]]],[11,"quad9","","Creates a configuration, using `9.9.9.9` and…",8,[[],["self"]]],[11,"merge","","Merges this set of [`NameServerConfig`]s with the other",8,[[["self"]]]],[0,"error","trust_dns_resolver","Error types for the crate",null,null],[3,"ResolveError","trust_dns_resolver::error","The error type for errors that get returned in the crate",null,null],[4,"ResolveErrorKind","","The error kind for errors that get returned in the crate",null,null],[13,"Message","","An error with an arbitrary message, referenced as &'static…",9,null],[13,"Msg","","An error with an arbitrary message, stored as String",9,null],[13,"NoRecordsFound","","No records were found for a query",9,null],[12,"query","trust_dns_resolver::error::ResolveErrorKind","The query for which no records were found.",9,null],[12,"valid_until","","A deadline after which the `NXDOMAIN` response is no…",9,null],[13,"Io","trust_dns_resolver::error","An error got returned from IO",9,null],[13,"Proto","","An error got returned by the trust-dns-proto crate",9,null],[13,"Timeout","","A request timed out",9,null],[6,"ResolveResult","","An alias for results returned by functions of this crate",null,null],[11,"kind","","Get the kind of the error",10,[[["self"]],["resolveerrorkind"]]],[11,"new","trust_dns_resolver","Creates a new configuration from the system hosts file,…",11,[[],["hosts"]]],[11,"lookup_static_host","","Look up the addresses for the given host from the system…",11,[[["query"],["self"]],[["option",["lookup"]],["lookup"]]]],[11,"insert","","Insert a new Lookup for the associated `Name` and…",11,[[["name"],["lookup"],["self"],["recordtype"]]]],[0,"lookup","","Lookup result from a resolution of ipv4 and ipv6 records…",null,null],[3,"Lookup","trust_dns_resolver::lookup","Result of a DNS query when querying for any record type…",null,null],[3,"LookupIter","","Borrowed view of set of [`RData`]s returned from a Lookup",null,null],[3,"LookupRecordIter","","Borrowed view of set of [`RData`]s returned from a Lookup",null,null],[3,"LookupIntoIter","","Borrowed view of set of [`RData`]s returned from a…",null,null],[3,"SrvLookup","","The result of an SRV lookup",null,null],[3,"SrvLookupIter","","An iterator over the Lookup type",null,null],[3,"SrvLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"ReverseLookup","","Contains the results of a lookup for the associated…",null,null],[3,"ReverseLookupIter","","An iterator over the Lookup type",null,null],[3,"ReverseLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"Ipv4Lookup","","Contains the results of a lookup for the associated…",null,null],[3,"Ipv4LookupIter","","An iterator over the Lookup type",null,null],[3,"Ipv4LookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"Ipv6Lookup","","Contains the results of a lookup for the associated…",null,null],[3,"Ipv6LookupIter","","An iterator over the Lookup type",null,null],[3,"Ipv6LookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"MxLookup","","Contains the results of a lookup for the associated…",null,null],[3,"MxLookupIter","","An iterator over the Lookup type",null,null],[3,"MxLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"TxtLookup","","Contains the results of a lookup for the associated…",null,null],[3,"TxtLookupIter","","An iterator over the Lookup type",null,null],[3,"TxtLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"SoaLookup","","Contains the results of a lookup for the associated…",null,null],[3,"SoaLookupIter","","An iterator over the Lookup type",null,null],[3,"SoaLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"NsLookup","","Contains the results of a lookup for the associated…",null,null],[3,"NsLookupIter","","An iterator over the Lookup type",null,null],[3,"NsLookupIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[11,"from_rdata","","Return new instance with given rdata and the maximum TTL.",12,[[["rdata"],["query"]],["self"]]],[11,"new_with_max_ttl","","Return new instance with given records and the maximum TTL.",12,[[["arc",["vec"]],["vec",["record"]],["query"]],["self"]]],[11,"new_with_deadline","","Return a new instance with the given records and deadline.",12,[[["vec",["record"]],["query"],["instant"],["arc",["vec"]]],["self"]]],[11,"query","","Returns a reference to the `Query` that was used to…",12,[[["self"]],["query"]]],[11,"iter","","Returns a borrowed iterator of the returned IPs",12,[[["self"]],["lookupiter"]]],[11,"record_iter","","Returns a borrowed iterator of the returned IPs",12,[[["self"]],["lookuprecorditer"]]],[11,"valid_until","","Returns the `Instant` at which this `Lookup` is no longer…",12,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the SRV RData",13,[[["self"]],["srvlookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",13,[[["self"]],["query"]]],[11,"ip_iter","","Returns the list of IPs associated with the SRV record.",13,[[["self"]],["lookupipiter"]]],[11,"iter","","Returns an iterator over the RData",14,[[["self"]],["reverselookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",14,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",14,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",15,[[["self"]],["ipv4lookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",15,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",15,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",16,[[["self"]],["ipv6lookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",16,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",16,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",17,[[["self"]],["mxlookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",17,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",17,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",18,[[["self"]],["txtlookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",18,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",18,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",19,[[["self"]],["soalookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",19,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",19,[[["self"]],["instant"]]],[11,"iter","","Returns an iterator over the RData",20,[[["self"]],["nslookupiter"]]],[11,"query","","Returns a reference to the Query that was used to produce…",20,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this result is no longer…",20,[[["self"]],["instant"]]],[0,"lookup_ip","trust_dns_resolver","LookupIp result from a resolution of ipv4 and ipv6 records…",null,null],[3,"LookupIp","trust_dns_resolver::lookup_ip","Result of a DNS query when querying for A or AAAA records.",null,null],[3,"LookupIpIter","","Borrowed view of set of IPs returned from a LookupIp",null,null],[3,"LookupIpIntoIter","","Borrowed view of set of RDatas returned from a Lookup",null,null],[3,"LookupIpFuture","","The Future returned from [`AsyncResolver`] when performing…",null,null],[11,"iter","","Returns a borrowed iterator of the returned IPs",21,[[["self"]],["lookupipiter"]]],[11,"query","","Returns a reference to the `Query` that was used to…",21,[[["self"]],["query"]]],[11,"valid_until","","Returns the `Instant` at which this lookup is no longer…",21,[[["self"]],["instant"]]],[11,"lookup","","Perform a lookup from a hostname to a set of IPs",22,[[["lookupipstrategy"],["vec",["name"]],["cachingclient"],["option",["arc"]],["arc",["hosts"]],["name"],["option",["rdata"]],["dnsrequestoptions"],["rdata"]],["self"]]],[0,"lookup_state","trust_dns_resolver","Caching related functionality for the Resolver.",null,null],[11,"new","","Constructs a new Resolver with the specified configuration.",23,[[["resolverconfig"],["resolveropts"]],["result"]]],[11,"default","","Constructs a new Resolver with default config and default…",23,[[],["result"]]],[11,"from_system_conf","","Constructs a new Resolver with the system configuration.",23,[[],["result"]]],[11,"lookup","","Generic lookup for any RecordType",23,[[["str"],["self"],["recordtype"]],[["resolveresult",["lookup"]],["lookup"]]]],[11,"lookup_ip","","Performs a dual-stack DNS lookup for the IP for the given…",23,[[["str"],["self"]],[["resolveresult",["lookupip"]],["lookupip"]]]],[11,"reverse_lookup","","Performs a lookup for the associated type.",23,[[["ipaddr"],["self"]],[["resolveresult",["reverselookup"]],["reverselookup"]]]],[11,"ipv4_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["ipv4lookup"],["resolveresult",["ipv4lookup"]]]]],[11,"ipv6_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["resolveresult",["ipv6lookup"]],["ipv6lookup"]]]],[11,"mx_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["mxlookup"],["resolveresult",["mxlookup"]]]]],[11,"ns_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["resolveresult",["nslookup"]],["nslookup"]]]],[11,"soa_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["resolveresult",["soalookup"]],["soalookup"]]]],[11,"srv_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["resolveresult",["srvlookup"]],["srvlookup"]]]],[11,"txt_lookup","","Performs a lookup for the associated type.",23,[[["str"],["self"]],[["resolveresult",["txtlookup"]],["txtlookup"]]]],[0,"system_conf","","System configuration loading",null,null],[5,"read_system_conf","trust_dns_resolver::system_conf","",null,[[],["result"]]],[6,"TokioAsyncResolver","trust_dns_resolver","An AsyncResolver used with Tokio",null,null],[6,"TokioConnection","","",null,null],[6,"TokioConnectionProvider","","",null,null],[6,"ResolverFuture","","This is an alias for [`AsyncResolver`], which replaced the…",null,null],[8,"ConnectionProvider","","A type to allow for custom ConnectionProviders. Needed…",null,null],[16,"Conn","","The handle to the connect for sending DNS requests.",24,null],[16,"FutureConn","","Ths future is responsible for spawning any background…",24,null],[10,"new_connection","","The returned handle should",24,[[["resolveropts"],["self"],["nameserverconfig"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_name","","",25,[[],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","trust_dns_resolver::config","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","trust_dns_resolver::error","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","trust_dns_resolver::lookup","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"emit","","",27,[[["binencoder"],["self"]],[["protoerror"],["result",["usize","protoerror"]],["usize"]]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"emit","","",31,[[["binencoder"],["self"]],[["protoerror"],["result",["usize","protoerror"]],["usize"]]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"emit","","",43,[[["binencoder"],["self"]],[["protoerror"],["result",["usize","protoerror"]],["usize"]]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","trust_dns_resolver::lookup_ip","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_poll","","",22,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",22,[[],["v"]]],[11,"read","trust_dns_resolver","parses the chain of labels this has a max of 255 octets,…",25,[[["bindecoder"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"emit","","",25,[[["binencoder"],["self"]],[["result",["protoerror"]],["protoerror"]]]],[11,"from_str","","Uses the Name::from_utf8 conversion on this string, see…",25,[[["str"]],[["result",["name"]],["name"]]]],[11,"partial_cmp","","",25,[[["name"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"try_parse_ip","","Always returns none for Name, it assumes something that is…",25,[[["self"]],[["rdata"],["option",["rdata"]]]]],[11,"eq","","",25,[[["name"],["self"]],["bool"]]],[11,"cmp","","Case insensitive comparison, see [`Name::cmp_case`] for…",25,[[["name"],["self"]],["ordering"]]],[11,"clone","","",25,[[["self"]],["name"]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","","",25,[[],["name"]]],[11,"from","","",25,[[["ipaddr"]],["name"]]],[11,"from","","",25,[[["ipv6addr"]],["name"]]],[11,"from","","",25,[[["ipv4addr"]],["name"]]],[11,"index","","",25,[[["self"],["usize"]],["label"]]],[11,"hash","","",25,[[["self"],["h"]]]],[11,"from","trust_dns_resolver::config","",8,[[["vec",["nameserverconfig"]],["nameserverconfig"]],["self"]]],[11,"from","trust_dns_resolver::error","",9,[[["error"]],["self"]]],[11,"from","","",9,[[["protoerror"]],["self"]]],[11,"from","","",10,[[["resolveerrorkind"]],["resolveerror"]]],[11,"from","","",10,[[["str"]],["resolveerror"]]],[11,"from","","",10,[[["string"]],["resolveerror"]]],[11,"from","","",10,[[["error"]],["resolveerror"]]],[11,"from","","",10,[[["protoerror"]],["resolveerror"]]],[11,"from","","",10,[[["poisonerror"]],["self"]]],[11,"from","trust_dns_resolver::lookup","",13,[[["lookup"]],["self"]]],[11,"from","","",14,[[["lookup"]],["self"]]],[11,"from","","",15,[[["lookup"]],["self"]]],[11,"from","","",16,[[["lookup"]],["self"]]],[11,"from","","",17,[[["lookup"]],["self"]]],[11,"from","","",18,[[["lookup"]],["self"]]],[11,"from","","",19,[[["lookup"]],["self"]]],[11,"from","","",20,[[["lookup"]],["self"]]],[11,"from","trust_dns_resolver::lookup_ip","",21,[[["lookup"]],["self"]]],[11,"into_iter","trust_dns_resolver::lookup","This is most likely not a free conversion, the `RData`s…",12,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",13,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",14,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",15,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",16,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",17,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",18,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",19,[[]]],[11,"into_iter","","This is most likely not a free conversion, the RDatas will…",20,[[]]],[11,"into_iter","trust_dns_resolver::lookup_ip","This is most likely not a free conversion, the RDatas will…",21,[[]]],[11,"next","trust_dns_resolver::lookup","",26,[[["self"]],["option"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"next","trust_dns_resolver::lookup_ip","",45,[[["self"]],["option"]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"clone","trust_dns_resolver","",2,[[["self"]],["asyncresolver"]]],[11,"clone","trust_dns_resolver::config","",7,[[["self"]],["resolverconfig"]]],[11,"clone","","",5,[[["self"]],["protocol"]]],[11,"clone","","",3,[[["self"]],["nameserverconfig"]]],[11,"clone","","",8,[[["self"]],["nameserverconfiggroup"]]],[11,"clone","","",6,[[["self"]],["lookupipstrategy"]]],[11,"clone","","",4,[[["self"]],["resolveropts"]]],[11,"clone","trust_dns_resolver::error","",9,[[["self"]],["self"]]],[11,"clone","","",10,[[["self"]],["resolveerror"]]],[11,"clone","trust_dns_resolver::lookup","",12,[[["self"]],["lookup"]]],[11,"clone","","",13,[[["self"]],["srvlookup"]]],[11,"clone","","",14,[[["self"]],["reverselookup"]]],[11,"clone","","",15,[[["self"]],["ipv4lookup"]]],[11,"clone","","",16,[[["self"]],["ipv6lookup"]]],[11,"clone","","",17,[[["self"]],["mxlookup"]]],[11,"clone","","",18,[[["self"]],["txtlookup"]]],[11,"clone","","",19,[[["self"]],["soalookup"]]],[11,"clone","","",20,[[["self"]],["nslookup"]]],[11,"clone","trust_dns_resolver::lookup_ip","",21,[[["self"]],["lookupip"]]],[11,"default","trust_dns_resolver::config","Creates a default configuration, using `8.8.8.8`,…",7,[[],["self"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","Returns [`LookupIpStrategy::Ipv4AndIpv6`] as the default.",6,[[],["self"]]],[11,"default","","Default values for the Resolver configuration.",4,[[],["self"]]],[11,"default","trust_dns_resolver","",11,[[],["hosts"]]],[11,"eq","trust_dns_resolver::config","",7,[[["self"],["resolverconfig"]],["bool"]]],[11,"ne","","",7,[[["self"],["resolverconfig"]],["bool"]]],[11,"eq","","",5,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",3,[[["self"],["nameserverconfig"]],["bool"]]],[11,"ne","","",3,[[["self"],["nameserverconfig"]],["bool"]]],[11,"eq","","",8,[[["self"],["nameserverconfiggroup"]],["bool"]]],[11,"ne","","",8,[[["self"],["nameserverconfiggroup"]],["bool"]]],[11,"eq","","",6,[[["lookupipstrategy"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["resolveropts"]],["bool"]]],[11,"ne","","",4,[[["self"],["resolveropts"]],["bool"]]],[11,"eq","trust_dns_resolver::lookup","",12,[[["lookup"],["self"]],["bool"]]],[11,"ne","","",12,[[["lookup"],["self"]],["bool"]]],[11,"deref","trust_dns_resolver::config","",8,[[["self"]]]],[11,"deref_mut","","",8,[[["self"]]]],[11,"fmt","trust_dns_resolver","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver::config","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver::error","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver::lookup","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver::lookup_ip","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","trust_dns_resolver::error","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"source","","",9,[[["self"]],[["option",["error"]],["error"]]]],[11,"poll","trust_dns_resolver::lookup_ip","",22,[[["pin"],["self"],["context"]],["poll"]]],[11,"new","trust_dns_resolver","Create a new domain::Name, i.e. label",25,[[],["name"]]],[11,"root","","Returns the root label, i.e. no labels, can probably make…",25,[[],["name"]]],[11,"is_root","","Returns true if there are no labels, i.e. it's empty.",25,[[["self"]],["bool"]]],[11,"is_fqdn","","Returns true if the name is a fully qualified domain name.",25,[[["self"]],["bool"]]],[11,"set_fqdn","","Specifies this name is a fully qualified domain name",25,[[["self"],["bool"]]]],[11,"iter","","Returns an iterator over the labels",25,[[["self"]],["labeliter"]]],[11,"append_label","","Appends the label to the end of this name",25,[[["l"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"from_labels","","Creates a new Name from the specified labels",25,[[["i"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"append_name","","Appends `other` to `self`, returning a new `Name`",25,[[["name"]],["name"]]],[11,"append_domain","","Appends the `domain` to `self`, making the new `Name` an…",25,[[["name"]],["name"]]],[11,"to_lowercase","","Creates a new Name with all labels lowercased",25,[[["self"]],["name"]]],[11,"base_name","","Trims off the first part of the name, to help with…",25,[[["self"]],["name"]]],[11,"trim_to","","Trims to the number of labels specified",25,[[["self"],["usize"]],["name"]]],[11,"zone_of_case","","same as `zone_of` allows for case sensitive call",25,[[["name"],["self"]],["bool"]]],[11,"zone_of","","returns true if the name components of self are all…",25,[[["name"],["self"]],["bool"]]],[11,"num_labels","","Returns the number of labels in the name, discounting `*`.",25,[[["self"]],["u8"]]],[11,"len","","returns the length in bytes of the labels. '.' counts as 1",25,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether the length of the labels, in bytes is 0.…",25,[[["self"]],["bool"]]],[11,"parse","","attempts to parse a name such as `\"example.com.\"` or…",25,[[["str"],["name"],["option",["name"]]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"from_ascii","","Will convert the string to a name only allowing ascii as…",25,[[["s"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"from_utf8","","Will convert the string to a name using IDNA, punycode, to…",25,[[["s"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"from_str_relaxed","","First attempts to decode via `from_utf8`, if that fails…",25,[[["s"]],[["name"],["result",["name","protoerror"]],["protoerror"]]]],[11,"emit_as_canonical","","Emits the canonical version of the name to the encoder.",25,[[["binencoder"],["self"],["bool"]],[["result",["protoerror"]],["protoerror"]]]],[11,"emit_with_lowercase","","Writes the labels, as lower case, to the encoder",25,[[["binencoder"],["self"],["bool"]],[["result",["protoerror"]],["protoerror"]]]],[11,"cmp_case","","Case sensitive comparison",25,[[["name"],["self"]],["ordering"]]],[11,"eq_case","","Compares the Names, in a case sensitive manner",25,[[["name"],["self"]],["bool"]]],[11,"to_ascii","","Converts this name into an ascii safe string.",25,[[["self"]],["string"]]],[11,"to_utf8","","Converts the Name labels to the utf8 String form.",25,[[["self"]],["string"]]],[11,"is_localhost","","Returns true if the `Name` is either localhost or in the…",25,[[["self"]],["bool"]]],[11,"is_wildcard","","True if the first label of this name is the wildcard, i.e.…",25,[[["self"]],["bool"]]],[11,"into_wildcard","","Converts a name to a wildcard, by replacing the first…",25,[[],["name"]]],[11,"tokio","","Construct a new Tokio based `AsyncResolver` with the…",47,[[["resolverconfig"],["resolveropts"]]]],[11,"tokio_from_system_conf","","Constructs a new Tokio based Resolver with the system…",47,[[]]]],"p":[[8,"IntoName"],[8,"TryParseIp"],[3,"AsyncResolver"],[3,"NameServerConfig"],[3,"ResolverOpts"],[4,"Protocol"],[4,"LookupIpStrategy"],[3,"ResolverConfig"],[3,"NameServerConfigGroup"],[4,"ResolveErrorKind"],[3,"ResolveError"],[3,"Hosts"],[3,"Lookup"],[3,"SrvLookup"],[3,"ReverseLookup"],[3,"Ipv4Lookup"],[3,"Ipv6Lookup"],[3,"MxLookup"],[3,"TxtLookup"],[3,"SoaLookup"],[3,"NsLookup"],[3,"LookupIp"],[3,"LookupIpFuture"],[3,"Resolver"],[8,"ConnectionProvider"],[3,"Name"],[3,"LookupIter"],[3,"LookupRecordIter"],[3,"LookupIntoIter"],[3,"SrvLookupIter"],[3,"SrvLookupIntoIter"],[3,"ReverseLookupIter"],[3,"ReverseLookupIntoIter"],[3,"Ipv4LookupIter"],[3,"Ipv4LookupIntoIter"],[3,"Ipv6LookupIter"],[3,"Ipv6LookupIntoIter"],[3,"MxLookupIter"],[3,"MxLookupIntoIter"],[3,"TxtLookupIter"],[3,"TxtLookupIntoIter"],[3,"SoaLookupIter"],[3,"SoaLookupIntoIter"],[3,"NsLookupIter"],[3,"NsLookupIntoIter"],[3,"LookupIpIter"],[3,"LookupIpIntoIter"],[6,"TokioAsyncResolver"]]};
searchIndex["typed_builder"] = {"doc":"","i":[[24,"TypedBuilder","typed_builder","`TypedBuilder` is not a real type - deriving it will…",null,null]],"p":[]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"consts","","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[0,"bit","typenum","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"to_u8","","",6,[[],["u8"]]],[10,"to_bool","","",6,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[],["u8"]]],[10,"to_u16","","",7,[[],["u16"]]],[10,"to_u32","","",7,[[],["u32"]]],[10,"to_u64","","",7,[[],["u64"]]],[10,"to_usize","","",7,[[],["usize"]]],[10,"to_i8","","",7,[[],["i8"]]],[10,"to_i16","","",7,[[],["i16"]]],[10,"to_i32","","",7,[[],["i32"]]],[10,"to_i64","","",7,[[],["i64"]]],[10,"to_isize","","",7,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[],["i8"]]],[10,"to_i16","","",8,[[],["i16"]]],[10,"to_i32","","",8,[[],["i32"]]],[10,"to_i64","","",8,[[],["i64"]]],[10,"to_isize","","",8,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn't used in this crate, but may be useful…",11,[[["exp"]]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn't used in this crate, but may be useful…",13,[[["self"]]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[["rhs"]]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[["rhs"]]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[["rhs"]]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[["rhs"]]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[["rhs"]]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[["rhs"]]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[["rhs"]]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[["rhs"]]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",25,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",26,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",27,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",28,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[14,"op","typenum","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,[[["b"]]]],[11,"is_equal","","",0,[[["b"]]]],[11,"is_greater","","",0,[[["b"]]]],[11,"is_less_or_equal","","",0,[[["b"]]]],[11,"is_not_equal","","",0,[[["b"]]]],[11,"is_greater_or_equal","","",0,[[["b"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,[[["b"]]]],[11,"is_equal","","",1,[[["b"]]]],[11,"is_greater","","",1,[[["b"]]]],[11,"is_less_or_equal","","",1,[[["b"]]]],[11,"is_not_equal","","",1,[[["b"]]]],[11,"is_greater_or_equal","","",1,[[["b"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",2,[[["n"]]]],[11,"partial_div","","",2,[[["n"]]]],[11,"is_less","","",2,[[["b"]]]],[11,"is_equal","","",2,[[["b"]]]],[11,"is_greater","","",2,[[["b"]]]],[11,"is_less_or_equal","","",2,[[["b"]]]],[11,"is_not_equal","","",2,[[["b"]]]],[11,"is_greater_or_equal","","",2,[[["b"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"powi","","",3,[[["n"]]]],[11,"partial_div","","",3,[[["n"]]]],[11,"is_less","","",3,[[["b"]]]],[11,"is_equal","","",3,[[["b"]]]],[11,"is_greater","","",3,[[["b"]]]],[11,"is_less_or_equal","","",3,[[["b"]]]],[11,"is_not_equal","","",3,[[["b"]]]],[11,"is_greater_or_equal","","",3,[[["b"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"powi","","",4,[[["n"]]]],[11,"partial_div","","",4,[[["n"]]]],[11,"is_less","","",4,[[["b"]]]],[11,"is_equal","","",4,[[["b"]]]],[11,"is_greater","","",4,[[["b"]]]],[11,"is_less_or_equal","","",4,[[["b"]]]],[11,"is_not_equal","","",4,[[["b"]]]],[11,"is_greater_or_equal","","",4,[[["b"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",27,[[["n"]]]],[11,"partial_div","","",27,[[["n"]]]],[11,"is_less","","",27,[[["b"]]]],[11,"is_equal","","",27,[[["b"]]]],[11,"is_greater","","",27,[[["b"]]]],[11,"is_less_or_equal","","",27,[[["b"]]]],[11,"is_not_equal","","",27,[[["b"]]]],[11,"is_greater_or_equal","","",27,[[["b"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"powi","","",28,[[["n"]]]],[11,"partial_div","","",28,[[["n"]]]],[11,"is_less","","",28,[[["b"]]]],[11,"is_equal","","",28,[[["b"]]]],[11,"is_greater","","",28,[[["b"]]]],[11,"is_less_or_equal","","",28,[[["b"]]]],[11,"is_not_equal","","",28,[[["b"]]]],[11,"is_greater_or_equal","","",28,[[["b"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",32,[[["n"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"partial_div","","",33,[[["n"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",29,[[],["ordering"]]],[11,"to_ordering","","",30,[[],["ordering"]]],[11,"to_ordering","","",31,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",27,[[],["u8"]]],[11,"to_u16","","",27,[[],["u16"]]],[11,"to_u32","","",27,[[],["u32"]]],[11,"to_u64","","",27,[[],["u64"]]],[11,"to_usize","","",27,[[],["usize"]]],[11,"to_i8","","",27,[[],["i8"]]],[11,"to_i16","","",27,[[],["i16"]]],[11,"to_i32","","",27,[[],["i32"]]],[11,"to_i64","","",27,[[],["i64"]]],[11,"to_isize","","",27,[[],["isize"]]],[11,"to_u8","","",28,[[],["u8"]]],[11,"to_u16","","",28,[[],["u16"]]],[11,"to_u32","","",28,[[],["u32"]]],[11,"to_u64","","",28,[[],["u64"]]],[11,"to_usize","","",28,[[],["usize"]]],[11,"to_i8","","",28,[[],["i8"]]],[11,"to_i16","","",28,[[],["i16"]]],[11,"to_i32","","",28,[[],["i32"]]],[11,"to_i64","","",28,[[],["i64"]]],[11,"to_isize","","",28,[[],["isize"]]],[11,"to_i8","typenum::int","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_i8","","",2,[[],["i8"]]],[11,"to_i16","","",2,[[],["i16"]]],[11,"to_i32","","",2,[[],["i32"]]],[11,"to_i64","","",2,[[],["i64"]]],[11,"to_isize","","",2,[[],["isize"]]],[11,"to_i8","","",3,[[],["i8"]]],[11,"to_i16","","",3,[[],["i16"]]],[11,"to_i32","","",3,[[],["i32"]]],[11,"to_i64","","",3,[[],["i64"]]],[11,"to_isize","","",3,[[],["isize"]]],[11,"powi","","",4,[[["z0"]]]],[11,"powi","","",4,[[["pint"]]]],[11,"powi","","",4,[[["nint"]]]],[11,"powi","typenum","",34,[[["nint"]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi","typenum::int","",2,[[["z0"]]]],[11,"powi","","",3,[[["z0"]]]],[11,"powi","","",2,[[["pint"]]]],[11,"powi","","",3,[[["uint",["b0"]],["pint",["uint"]]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len","typenum::uint","",27,[[["self"]]]],[11,"len","","",28,[[["self"]]]],[11,"len","typenum::array","",32,[[["self"]]]],[11,"len","","",33,[[["self"]]]],[11,"partial_div","typenum::uint","",27,[[["uint"]]]],[11,"partial_div","","",28,[[["uint"]]]],[11,"partial_div","typenum::array","",32,[[["rhs"]]]],[11,"partial_div","","",33,[[["rhs"]]]],[11,"min","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"min","","",0,[[["b1"]],["b0"]]],[11,"min","","",1,[[["b0"]],["b0"]]],[11,"min","","",1,[[["b1"]],["b1"]]],[11,"min","typenum::int","",4,[[["z0"]]]],[11,"min","","",4,[[["pint"]]]],[11,"min","","",4,[[["nint"]]]],[11,"min","","",2,[[["z0"]]]],[11,"min","","",3,[[["z0"]]]],[11,"min","","",2,[[["pint"]]]],[11,"min","","",3,[[["pint"]]]],[11,"min","","",2,[[["nint"]]]],[11,"min","","",3,[[["nint"]]]],[11,"min","typenum::uint","",27,[[["u"]]]],[11,"min","","",28,[[["ur"]]]],[11,"max","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"max","","",0,[[["b1"]],["b1"]]],[11,"max","","",1,[[["b0"]],["b1"]]],[11,"max","","",1,[[["b1"]],["b1"]]],[11,"max","typenum::int","",4,[[["z0"]]]],[11,"max","","",4,[[["pint"]]]],[11,"max","","",4,[[["nint"]]]],[11,"max","","",2,[[["z0"]]]],[11,"max","","",3,[[["z0"]]]],[11,"max","","",2,[[["pint"]]]],[11,"max","","",3,[[["pint"]]]],[11,"max","","",2,[[["nint"]]]],[11,"max","","",3,[[["nint"]]]],[11,"max","typenum::uint","",27,[[["u"]]]],[11,"max","","",28,[[["ur"]]]],[11,"fmt","typenum::bit","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::int","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::uint","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::array","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"div","typenum::int","",4,[[["i"]]]],[11,"div","","",2,[[["pint"]]]],[11,"div","","",2,[[["nint"]]]],[11,"div","","",3,[[["pint"]]]],[11,"div","","",3,[[["nint"]]]],[11,"div","typenum::uint","",27,[[["uint"]]]],[11,"div","","",28,[[["uint"]]]],[11,"div","typenum::array","",32,[[["rhs"]]]],[11,"div","","",33,[[["rhs"]]]],[11,"rem","typenum::int","",4,[[["i"]]]],[11,"rem","","",2,[[["pint"]]]],[11,"rem","","",2,[[["nint"]]]],[11,"rem","","",3,[[["pint"]]]],[11,"rem","","",3,[[["nint"]]]],[11,"rem","typenum::uint","",27,[[["uint"]]]],[11,"rem","","",28,[[["uint"]]]],[11,"rem","typenum::array","",32,[[["rhs"]]]],[11,"rem","","",33,[[["rhs"]]]],[11,"sub","typenum::int","",4,[[["z0"]]]],[11,"sub","","",4,[[["pint"]]]],[11,"sub","","",4,[[["nint"]]]],[11,"sub","","",2,[[["z0"]]]],[11,"sub","","",3,[[["z0"]]]],[11,"sub","","",2,[[["nint"]]]],[11,"sub","","",3,[[["pint"]]]],[11,"sub","","",2,[[["pint"]]]],[11,"sub","","",3,[[["nint"]]]],[11,"sub","typenum::uint","",27,[[["b0"]]]],[11,"sub","","",28,[[["b0"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",27,[[["uterm"]]]],[11,"sub","","",28,[[["ur"]]]],[11,"sub","typenum::array","",32,[[["aterm"]]]],[11,"sub","","",33,[[["tarr"]]]],[11,"eq","typenum::bit","",0,[[["self"],["b0"]],["bool"]]],[11,"eq","","",1,[[["b1"],["self"]],["bool"]]],[11,"eq","typenum::int","",2,[[["pint"],["self"]],["bool"]]],[11,"ne","","",2,[[["pint"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["nint"]],["bool"]]],[11,"ne","","",3,[[["self"],["nint"]],["bool"]]],[11,"eq","","",4,[[["z0"],["self"]],["bool"]]],[11,"eq","typenum::uint","",27,[[["uterm"],["self"]],["bool"]]],[11,"eq","","",28,[[["uint"],["self"]],["bool"]]],[11,"ne","","",28,[[["uint"],["self"]],["bool"]]],[11,"eq","typenum::array","",32,[[["self"],["aterm"]],["bool"]]],[11,"eq","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ne","","",33,[[["self"],["tarr"]],["bool"]]],[11,"eq","typenum","",29,[[["self"],["greater"]],["bool"]]],[11,"eq","","",30,[[["self"],["less"]],["bool"]]],[11,"eq","","",31,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["self"],["b0"]],["ordering"]]],[11,"cmp","","",1,[[["b1"],["self"]],["ordering"]]],[11,"cmp","typenum::int","",2,[[["pint"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["nint"]],["ordering"]]],[11,"cmp","","",4,[[["z0"],["self"]],["ordering"]]],[11,"cmp","typenum::uint","",27,[[["uterm"],["self"]],["ordering"]]],[11,"cmp","","",28,[[["uint"],["self"]],["ordering"]]],[11,"cmp","typenum::array","",32,[[["self"],["aterm"]],["ordering"]]],[11,"cmp","","",33,[[["self"],["tarr"]],["ordering"]]],[11,"cmp","typenum","",29,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",30,[[["self"],["less"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["self"],["b0"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["b1"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","typenum::int","",2,[[["pint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["pint"],["self"]],["bool"]]],[11,"le","","",2,[[["pint"],["self"]],["bool"]]],[11,"gt","","",2,[[["pint"],["self"]],["bool"]]],[11,"ge","","",2,[[["pint"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["nint"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",3,[[["self"],["nint"]],["bool"]]],[11,"le","","",3,[[["self"],["nint"]],["bool"]]],[11,"gt","","",3,[[["self"],["nint"]],["bool"]]],[11,"ge","","",3,[[["self"],["nint"]],["bool"]]],[11,"partial_cmp","","",4,[[["z0"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","typenum::uint","",27,[[["uterm"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",28,[[["uint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",28,[[["uint"],["self"]],["bool"]]],[11,"le","","",28,[[["uint"],["self"]],["bool"]]],[11,"gt","","",28,[[["uint"],["self"]],["bool"]]],[11,"ge","","",28,[[["uint"],["self"]],["bool"]]],[11,"partial_cmp","typenum::array","",32,[[["self"],["aterm"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",33,[[["self"],["tarr"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"le","","",33,[[["self"],["tarr"]],["bool"]]],[11,"gt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ge","","",33,[[["self"],["tarr"]],["bool"]]],[11,"partial_cmp","typenum","",29,[[["self"],["greater"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",30,[[["self"],["less"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",31,[[["self"],["equal"]],[["ordering"],["option",["ordering"]]]]],[11,"add","typenum::int","",4,[[["i"]]]],[11,"add","","",2,[[["z0"]]]],[11,"add","","",3,[[["z0"]]]],[11,"add","","",2,[[["pint"]]]],[11,"add","","",3,[[["nint"]]]],[11,"add","","",2,[[["nint"]]]],[11,"add","","",3,[[["pint"]]]],[11,"add","typenum::uint","",27,[[["b0"]]]],[11,"add","","",28,[[["b0"]]]],[11,"add","","",27,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",27,[[["u"]]]],[11,"add","","",28,[[["uterm"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","typenum::array","",32,[[["aterm"]]]],[11,"add","","",33,[[["tarr"]]]],[11,"mul","typenum::int","",4,[[["i"]]]],[11,"mul","","",2,[[["z0"]]]],[11,"mul","","",3,[[["z0"]]]],[11,"mul","","",2,[[["pint"]]]],[11,"mul","","",3,[[["nint"]]]],[11,"mul","","",2,[[["nint"]]]],[11,"mul","","",3,[[["pint"]]]],[11,"mul","typenum::uint","",28,[[["b0"]]]],[11,"mul","","",27,[[["b0"]]]],[11,"mul","","",27,[[["b1"]]]],[11,"mul","","",28,[[["b1"]]]],[11,"mul","","",28,[[["uterm"]]]],[11,"mul","","",27,[[["u"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","typenum::array","",32,[[["rhs"]]]],[11,"mul","","",33,[[["rhs"]]]],[11,"mul","typenum::int","",4,[[["aterm"]]]],[11,"mul","","",2,[[["aterm"]]]],[11,"mul","","",3,[[["aterm"]]]],[11,"mul","","",4,[[["tarr"]]]],[11,"mul","","",2,[[["tarr"]]]],[11,"mul","","",3,[[["tarr"]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",32,[[]]],[11,"neg","","",33,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[["rhs"]]]],[11,"bitand","","",1,[[["b0"]]]],[11,"bitand","","",1,[[["b1"]]]],[11,"bitand","typenum::uint","",27,[[["ur"]]]],[11,"bitand","","",28,[[["ur"]]]],[11,"bitor","typenum::bit","",0,[[["b0"]]]],[11,"bitor","","",0,[[["b1"]]]],[11,"bitor","","",1,[[["rhs"]]]],[11,"bitor","typenum::uint","",27,[[["u"]]]],[11,"bitor","","",28,[[["uterm"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitxor","typenum::bit","",0,[[["b0"]]]],[11,"bitxor","","",1,[[["b0"]]]],[11,"bitxor","","",0,[[["b1"]]]],[11,"bitxor","","",1,[[["b1"]]]],[11,"bitxor","typenum::uint","",27,[[["ur"]]]],[11,"bitxor","","",28,[[["ur"]]]],[11,"shl","","",27,[[["b0"]]]],[11,"shl","","",27,[[["b1"]]]],[11,"shl","","",28,[[["b0"]]]],[11,"shl","","",28,[[["b1"]]]],[11,"shl","","",28,[[["uterm"]]]],[11,"shl","","",27,[[["u"]]]],[11,"shl","","",28,[[["uint"]]]],[11,"shr","","",27,[[["u"]]]],[11,"shr","","",28,[[["uterm"]]]],[11,"shr","","",27,[[["b0"]]]],[11,"shr","","",27,[[["b1"]]]],[11,"shr","","",28,[[["b0"]]]],[11,"shr","","",28,[[["b1"]]]],[11,"shr","","",28,[[["uint"]]]],[11,"hash","typenum::bit","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","typenum::int","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","typenum::uint","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","typenum::array","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","typenum","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::int","",2,[[["self"]],["pint"]]],[11,"clone","","",3,[[["self"]],["nint"]]],[11,"clone","","",4,[[["self"]],["z0"]]],[11,"clone","typenum::uint","",27,[[["self"]],["uterm"]]],[11,"clone","","",28,[[["self"]],["uint"]]],[11,"clone","typenum::array","",32,[[["self"]],["aterm"]]],[11,"clone","","",33,[[["self"]],["tarr"]]],[11,"clone","typenum","",29,[[["self"]],["greater"]]],[11,"clone","","",30,[[["self"]],["less"]]],[11,"clone","","",31,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::int","",2,[[],["pint"]]],[11,"default","","",3,[[],["nint"]]],[11,"default","","",4,[[],["z0"]]],[11,"default","typenum::uint","",27,[[],["uterm"]]],[11,"default","","",28,[[],["uint"]]],[11,"default","typenum","",29,[[],["greater"]]],[11,"default","","",30,[[],["less"]]],[11,"default","","",31,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional…","i":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,null],[4,"BidiClass","","Represents values of the Unicode character property…",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",null,[[["range",["usize"]],["usize"]],[["vec",["levelrun"]],["levelrun"]]]],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,[[],["bool"]]],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",null,null],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],[["level"],["error"],["result",["level","error"]]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],[["level"],["error"],["result",["level","error"]]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,[[],[["level"],["vec",["level"]]]]],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["level"],["option",["level"]]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["level"],["option",["level"]]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["level"],["vec",["level"]]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["level"],["vec",["level"]]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]],[["str"],["cow",["str"]]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,[[["range",["usize"]],["usize"],["paragraphinfo"],["self"]]]],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","Create level by number",5,[[["u8"]],["level"]]],[11,"into","","Convert to the level number",5,[[],["u8"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"cmp","unicode_bidi::level","",5,[[["level"],["self"]],["ordering"]]],[11,"eq","","",5,[[["level"],["self"]],["bool"]]],[11,"ne","","",5,[[["level"],["self"]],["bool"]]],[11,"eq","","",4,[[["error"],["self"]],["bool"]]],[11,"eq","","",5,[[["str"],["self"]],["bool"]]],[11,"eq","","",5,[[["string"],["self"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["bidiclass"],["self"]],["bool"]]],[11,"eq","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"ne","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"partial_cmp","unicode_bidi::level","",5,[[["level"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["level"],["self"]],["bool"]]],[11,"le","","",5,[[["level"],["self"]],["bool"]]],[11,"gt","","",5,[[["level"],["self"]],["bool"]]],[11,"ge","","",5,[[["level"],["self"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities…","i":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",null,[[["str"]],["bool"]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",null,[[["str"]],["bool"]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,[[["iterator"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",null,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",null,[[["fnmut"],["char"]]]],[5,"compose","","Compose two characters into a single character, if…",null,[[["char"]],[["option",["char"]],["char"]]]],[5,"canonical_combining_class","","Look up the canonical combining class for a codepoint.",null,[[["char"]],["u8"]]],[5,"is_combining_mark","","Return whether the given character is a combining mark…",null,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",null,null],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[],["streamsafe"]]],[11,"nfd","","",2,[[],["decompositions"]]],[11,"nfkd","","",2,[[],["decompositions"]]],[11,"nfc","","",2,[[],["recompositions"]]],[11,"nfkc","","",2,[[],["recompositions"]]],[11,"stream_safe","","",2,[[],["streamsafe"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[],["decompositions"]]],[11,"nfkd","","",3,[[],["decompositions"]]],[11,"nfc","","",3,[[],["recompositions"]]],[11,"nfkc","","",3,[[],["recompositions"]]],[11,"stream_safe","","",3,[[],["streamsafe"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[],["decompositions"]]],[11,"nfkd","","",4,[[],["decompositions"]]],[11,"nfc","","",4,[[],["recompositions"]]],[11,"nfkc","","",4,[[],["recompositions"]]],[11,"stream_safe","","",4,[[],["streamsafe"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["option",["char"]],["char"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["char"]],["char"]]]],[11,"next","","",4,[[["self"]],[["option",["char"]],["char"]]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"eq","","",0,[[["isnormalized"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",null,null],[3,"USentenceBounds","","External iterator for a string's sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte offsets.",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after…",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",null,null],[13,"PreContext","","More pre-context is needed. The caller should call…",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,null],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["str"],["self"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["bool","graphemeincomplete"]],["bool"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["option","graphemeincomplete"]],["option",["usize"]]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["option","graphemeincomplete"]],["option",["usize"]]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",null,null],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[10,"unicode_sentences","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["unicodesentences"]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["usentencebounds"]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["usentenceboundindices"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"ne","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",8,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]],[11,"clone","","",10,[[["self"]],["unicodesentences"]]],[11,"clone","","",8,[[["self"]],["usentencebounds"]]],[11,"clone","","",9,[[["self"]],["usentenceboundindices"]]]],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[3,"UnicodeSentences"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["untrusted"] = {"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing,…","i":[[3,"Input","untrusted","A wrapper around `&'a [u8]` that helps in writing…",null,null],[3,"Reader","","A read-only, forward-only* cursor into the data in an…",null,null],[3,"Mark","","An index into the already-parsed input of a `Reader`.",null,null],[3,"EndOfInput","","The error type used to indicate the end of the input was…",null,null],[5,"read_all_optional","","Calls `read` with the given input as a `Reader`, ensuring…",null,[[["option",["input"]],["e"],["input"],["f"]],["result"]]],[11,"from","","Construct a new `Input` for the given input `bytes`.",0,[[],["self"]]],[11,"is_empty","","Returns `true` if the input is empty and false otherwise.",0,[[["self"]],["bool"]]],[11,"len","","Returns the length of the `Input`.",0,[[["self"]],["usize"]]],[11,"read_all","","Calls `read` with the given input as a `Reader`, ensuring…",0,[[["f"],["self"],["e"]],["result"]]],[11,"as_slice_less_safe","","Access the input as a slice so it can be processed by…",0,[[["self"]]]],[11,"new","","Construct a new Reader for the given input. Use `read_all`…",1,[[["input"]],["self"]]],[11,"at_end","","Returns `true` if the reader is at the end of the input,…",1,[[["self"]],["bool"]]],[11,"get_input_between_marks","","Returns an `Input` for already-parsed input that has had…",1,[[["mark"],["self"]],[["result",["input","endofinput"]],["input"],["endofinput"]]]],[11,"mark","","Return the current position of the `Reader` for future use…",1,[[["self"]],["mark"]]],[11,"peek","","Returns `true` if there is at least one more byte in the…",1,[[["self"],["u8"]],["bool"]]],[11,"read_byte","","Reads the next input byte.",1,[[["self"]],[["endofinput"],["result",["u8","endofinput"]],["u8"]]]],[11,"read_bytes","","Skips `num_bytes` of the input, returning the skipped…",1,[[["self"],["usize"]],[["result",["input","endofinput"]],["input"],["endofinput"]]]],[11,"read_bytes_to_end","","Skips the reader to the end of the input, returning the…",1,[[["self"]],["input"]]],[11,"read_partial","","Calls `read()` with the given input as a `Reader`. On…",1,[[["self"],["f"]],["result"]]],[11,"skip","","Skips `num_bytes` of the input.",1,[[["self"],["usize"]],[["result",["endofinput"]],["endofinput"]]]],[11,"skip_to_end","","Skips the reader to the end of the input.",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["input"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["endofinput"]],["bool"]]],[11,"clone","","",0,[[["self"]],["input"]]],[11,"clone","","",3,[[["self"]],["endofinput"]]]],"p":[[3,"Input"],[3,"Reader"],[3,"Mark"],[3,"EndOfInput"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the…","i":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",0,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",0,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",0,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",2,null],[13,"IdnaError","","",2,null],[13,"InvalidPort","","",2,null],[13,"InvalidIpv4Address","","",2,null],[13,"InvalidIpv6Address","","",2,null],[13,"InvalidDomainCharacter","","",2,null],[13,"RelativeUrlWithoutBase","","",2,null],[13,"RelativeUrlWithCannotBeABaseBase","","",2,null],[13,"SetHostOnCannotBeABaseUrl","","",2,null],[13,"Overflow","","",2,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",3,null],[13,"C0SpaceIgnored","","",3,null],[13,"EmbeddedCredentials","","",3,null],[13,"ExpectedDoubleSlash","","",3,null],[13,"ExpectedFileDoubleSlash","","",3,null],[13,"FileWithHostAndWindowsDrive","","",3,null],[13,"NonUrlCodePoint","","",3,null],[13,"NullInFragment","","",3,null],[13,"PercentDecode","","",3,null],[13,"TabOrNewlineIgnored","","",3,null],[13,"UnencodedAtSign","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],[["host",["string"]],["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"parse_opaque","","",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",5,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",5,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",5,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",5,[[["str"],["self"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",5,[[["self"],["i"]],["self"]]],[0,"form_urlencoded","","Parser and serializer for the…",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the…",null,[[],["parse"]]],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,[[],["byteserialize"]]],[8,"Target","","",null,null],[10,"as_mut_string","","",6,[[["self"]],["string"]]],[10,"finish","","",6,[[]]],[16,"Finished","","",6,null],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",7,[[],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",8,[[["self"]],["self"]]],[11,"encoding_override","","Set the character encoding to be used for names and values…",8,[[["self"],["encodingoverride"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",8,[[["str"],["self"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",8,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",8,[[["self"]]]],[6,"EncodingOverride","url","",null,null],[11,"base_url","","Change the base URL",9,[[["option",["url"]],["url"]],["self"]]],[11,"encoding_override","","Override the character encoding of query strings. This is…",9,[[["encodingoverride"]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",9,[[["option",["fn"]],["fn"]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",9,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse","","Parse an absolute URL from a string.",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",10,[[["str"],["i"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",10,[[["str"],["self"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",10,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",10,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",10,[[],["string"]]],[11,"origin","","Return the origin of this URL…",10,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",10,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",10,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",10,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",10,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",10,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"host","","Return the parsed representation of the host for this URL.…",10,[[["self"]],[["option",["host"]],["host",["str"]]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Return the port number for this URL, if any.",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to `SocketAddr`.",10,[[["self"]],[["vec",["socketaddr"]],["result",["vec"]]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",10,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",10,[[["self"]],[["split",["char"]],["option",["split"]]]]],[11,"query","","Return this URL’s query string, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",10,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",10,[[["str"],["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",10,[[["str"],["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",10,[[["self"]],[["urlquery"],["serializer",["urlquery"]]]]],[11,"set_path","","Change this URL’s path.",10,[[["str"],["self"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",10,[[["self"]],[["result",["pathsegmentsmut"]],["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",10,[[["option",["u16"]],["self"],["u16"]],["result"]]],[11,"set_host","","Change this URL’s host.",10,[[["str"],["self"],["option",["str"]]],[["parseerror"],["result",["parseerror"]]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",10,[[["ipaddr"],["self"]],["result"]]],[11,"set_password","","Change this URL’s password.",10,[[["str"],["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",10,[[["str"],["self"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",10,[[["str"],["self"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",10,[[["path"],["asref",["path"]]],[["url"],["result",["url"]]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",10,[[["path"],["asref",["path"]]],[["url"],["result",["url"]]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",10,[[["self"]],[["result",["pathbuf"]],["pathbuf"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","url::form_urlencoded","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",12,[[["self"]],["string"]]],[11,"finish","","",12,[[],["url"]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"as_ref","","",10,[[["self"]],["str"]]],[11,"from","","",2,[[["errors"]],["parseerror"]]],[11,"next","url::form_urlencoded","",7,[[["self"]],["option"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",14,[[["self"]]]],[11,"clone","url","",0,[[["self"]],["host"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",11,[[["self"]],["opaqueorigin"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["syntaxviolation"]]],[11,"clone","","",4,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",7,[[["self"]],["parse"]]],[11,"clone","url","",10,[[["self"]],["url"]]],[11,"clone","","",9,[[["self"]],["parseoptions"]]],[11,"cmp","","",0,[[["host"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["self"]],["ordering"]]],[11,"eq","","",0,[[["host"],["self"]],["bool"]]],[11,"ne","","",0,[[["host"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"ne","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",3,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["host"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["host"],["self"]],["bool"]]],[11,"le","","",0,[[["host"],["self"]],["bool"]]],[11,"gt","","",0,[[["host"],["self"]],["bool"]]],[11,"ge","","",0,[[["host"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","url::form_urlencoded","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","url","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"index","","",10,[[["self"],["rangefull"]],["str"]]],[11,"index","","",10,[[["position"],["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",10,[[["rangeto",["position"]],["self"],["position"]],["str"]]],[11,"index","","",10,[[["range",["position"]],["self"],["position"]],["str"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"from_str","","",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["version_check"] = {"doc":"This tiny crate checks that the running or installed…","i":[[3,"Version","version_check","Version number: `major.minor.patch`, ignoring release…",null,null],[3,"Channel","","Release channel: \"dev\", \"nightly\", \"beta\", or \"stable\".",null,null],[3,"Date","","Release date including year, month, and day.",null,null],[5,"triple","","Reads the triple of [`Version`], [`Channel`], and [`Date`]…",null,[[],["option"]]],[5,"is_min_date","","Checks that the running or installed `rustc` was released…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_max_date","","Checks that the running or installed `rustc` was released…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_exact_date","","Checks that the running or installed `rustc` was released…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_min_version","","Checks that the running or installed `rustc` is at least…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_max_version","","Checks that the running or installed `rustc` is at most…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_exact_version","","Checks that the running or installed `rustc` is exactly…",null,[[["str"]],[["bool"],["option",["bool"]]]]],[5,"is_feature_flaggable","","Checks whether the running or installed `rustc` supports…",null,[[],[["bool"],["option",["bool"]]]]],[11,"read","","Reads the version of the running compiler. If it cannot be…",0,[[],[["option",["version"]],["version"]]]],[11,"parse","","Parse a Rust release version (of the form…",0,[[["str"]],[["option",["version"]],["version"]]]],[11,"at_least","","Returns `true` if `self` is greater than or equal to…",0,[[["str"],["self"]],["bool"]]],[11,"at_most","","Returns `true` if `self` is less than or equal to `version`.",0,[[["str"],["self"]],["bool"]]],[11,"exactly","","Returns `true` if `self` is exactly equal to `version`.",0,[[["str"],["self"]],["bool"]]],[11,"read","","Reads the release channel of the running compiler. If it…",1,[[],[["option",["channel"]],["channel"]]]],[11,"parse","","Parse a Rust release channel from a Rust release version…",1,[[["str"]],[["option",["channel"]],["channel"]]]],[11,"supports_features","","Returns `true` if this channel supports feature flags. In…",1,[[["self"]],["bool"]]],[11,"is_dev","","Returns `true` if this channel is `dev` and `false`…",1,[[["self"]],["bool"]]],[11,"is_nightly","","Returns `true` if this channel is `nightly` and `false`…",1,[[["self"]],["bool"]]],[11,"is_beta","","Returns `true` if this channel is `beta` and `false`…",1,[[["self"]],["bool"]]],[11,"is_stable","","Returns `true` if this channel is `stable` and `false`…",1,[[["self"]],["bool"]]],[11,"read","","Reads the release date of the running compiler. If it…",2,[[],[["option",["date"]],["date"]]]],[11,"parse","","Parse a release date of the form `%Y-%m-%d`. Returns…",2,[[["str"]],[["option",["date"]],["date"]]]],[11,"at_least","","Returns `true` if `self` occurs on or after `date`.",2,[[["str"],["self"]],["bool"]]],[11,"at_most","","Returns `true` if `self` occurs on or before `date`.",2,[[["str"],["self"]],["bool"]]],[11,"exactly","","Returns `true` if `self` occurs exactly on `date`.",2,[[["str"],["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["channel"]]],[11,"clone","","",2,[[["self"]],["date"]]],[11,"cmp","","",0,[[["version"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["date"]],["ordering"]]],[11,"eq","","",0,[[["version"],["self"]],["bool"]]],[11,"ne","","",0,[[["version"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["channel"]],["bool"]]],[11,"ne","","",1,[[["self"],["channel"]],["bool"]]],[11,"eq","","",2,[[["self"],["date"]],["bool"]]],[11,"ne","","",2,[[["self"],["date"]],["bool"]]],[11,"partial_cmp","","",0,[[["version"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["version"],["self"]],["bool"]]],[11,"le","","",0,[[["version"],["self"]],["bool"]]],[11,"gt","","",0,[[["version"],["self"]],["bool"]]],[11,"ge","","",0,[[["version"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["date"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["self"],["date"]],["bool"]]],[11,"le","","",2,[[["self"],["date"]],["bool"]]],[11,"gt","","",2,[[["self"],["date"]],["bool"]]],[11,"ge","","",2,[[["self"],["date"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Version"],[3,"Channel"],[3,"Date"]]};
searchIndex["webpki"] = {"doc":"webpki: Web PKI X.509 Certificate Validation.","i":[[3,"DNSNameRef","webpki","A reference to a DNS Name suitable for use in the TLS…",null,null],[3,"InvalidDNSNameError","","An error indicating that a `DNSNameRef` could not built…",null,null],[3,"DNSName","","A DNS Name suitable for use in the TLS Server Name…",null,null],[3,"SignatureAlgorithm","","A signature algorithm.",null,null],[3,"Time","","The time type.",null,null],[3,"EndEntityCert","","An end-entity certificate.",null,null],[3,"TrustAnchor","","A trust anchor (a.k.a. root CA).",null,null],[12,"subject","","The value of the `subject` field of the trust anchor.",0,null],[12,"spki","","The value of the `subjectPublicKeyInfo` field of the trust…",0,null],[12,"name_constraints","","The value of a DER-encoded NameConstraints, containing…",0,null],[3,"TLSServerTrustAnchors","","Trust anchors which may be used for authenticating servers.",null,null],[12,"0","","",1,null],[3,"TLSClientTrustAnchors","","Trust anchors which may be used for authenticating clients.",null,null],[12,"0","","",2,null],[4,"Error","","An error that occurs during certificate validation or name…",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",3,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",3,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity certificate.",3,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being…",3,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being…",3,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is…",3,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA certificate.",3,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",3,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is…",3,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",3,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",3,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length…",3,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \"signature\" field of a…",3,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage…",3,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",3,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",3,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical extension.",3,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature's algorithm does not match the algorithm of…",3,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set…",3,null],[11,"as_ref","","Returns a `DNSNameRef` that refers to this `DNSName`.",4,[[["self"]],["dnsnameref"]]],[11,"try_from_ascii","","Constructs a `DNSNameRef` from the given input if the…",5,[[],[["result",["invaliddnsnameerror"]],["invaliddnsnameerror"]]]],[11,"try_from_ascii_str","","Constructs a `DNSNameRef` from the given input if the…",5,[[["str"]],[["result",["invaliddnsnameerror"]],["invaliddnsnameerror"]]]],[11,"to_owned","","Constructs a `DNSName` from this `DNSNameRef`",5,[[["self"]],["dnsname"]]],[11,"try_from","","Create a `webpki::Time` from a `std::time::SystemTime`.",6,[[["systemtime"]],[["time"],["result",["time","unspecified"]],["unspecified"]]]],[11,"from_seconds_since_unix_epoch","","Create a `webpki::Time` from a unix timestamp.",6,[[["u64"]],["time"]]],[0,"trust_anchor_util","","Utilities for efficiently embedding trust anchors in…",null,null],[5,"cert_der_as_trust_anchor","webpki::trust_anchor_util","Interprets the given DER-encoded certificate as a…",null,[[],[["error"],["trustanchor"],["result",["trustanchor","error"]]]]],[5,"generate_code_for_trust_anchors","","Generates code for hard-coding the given trust anchors…",null,[[["str"]],["string"]]],[7,"ECDSA_P256_SHA256","webpki","ECDSA signatures using the P-256 curve and SHA-256.",null,null],[7,"ECDSA_P256_SHA384","","ECDSA signatures using the P-256 curve and SHA-384.…",null,null],[7,"ECDSA_P384_SHA256","","ECDSA signatures using the P-384 curve and SHA-256.…",null,null],[7,"ECDSA_P384_SHA384","","ECDSA signatures using the P-384 curve and SHA-384.",null,null],[7,"ED25519","","ED25519 signatures according to RFC 8410",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","RSA PKCS#1 1.5 signatures using SHA-256 for keys of…",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","RSA PKCS#1 1.5 signatures using SHA-384 for keys of…",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","RSA PKCS#1 1.5 signatures using SHA-512 for keys of…",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","RSA PKCS#1 1.5 signatures using SHA-384 for keys of…",null,null],[7,"RSA_PSS_2048_8192_SHA256_LEGACY_KEY","","RSA PSS signatures using SHA-256 for keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA384_LEGACY_KEY","","RSA PSS signatures using SHA-384 for keys of 2048-8192…",null,null],[7,"RSA_PSS_2048_8192_SHA512_LEGACY_KEY","","RSA PSS signatures using SHA-512 for keys of 2048-8192…",null,null],[11,"from","","Parse the ASN.1 DER-encoded X.509 encoding of the…",7,[[],[["result",["error"]],["error"]]]],[11,"verify_is_valid_tls_server_cert","","Verifies that the end-entity certificate is valid for use…",7,[[["time"],["tlsservertrustanchors"],["self"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_tls_client_cert","","Verifies that the end-entity certificate is valid for use…",7,[[["tlsclienttrustanchors"],["time"],["self"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_for_dns_name","","Verifies that the certificate is valid for the given DNS…",7,[[["self"],["dnsnameref"]],[["error"],["result",["error"]]]]],[11,"verify_is_valid_for_at_least_one_dns_name","","Verifies that the certificate is valid for at least one of…",7,[[["self"],["names"]],[["result",["vec","error"]],["vec",["dnsnameref"]],["error"]]]],[11,"verify_signature","","Verifies the signature `signature` of message `msg` using…",7,[[["signaturealgorithm"],["self"]],[["error"],["result",["error"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"as_ref","","",4,[[["self"]],["str"]]],[11,"from","","",4,[[["dnsnameref"]],["self"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["dnsname"]]],[11,"clone","","",5,[[["self"]],["dnsnameref"]]],[11,"clone","","",8,[[["self"]],["invaliddnsnameerror"]]],[11,"clone","","",6,[[["self"]],["time"]]],[11,"eq","","",3,[[["error"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"ne","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"eq","","",8,[[["self"],["invaliddnsnameerror"]],["bool"]]],[11,"eq","","",6,[[["self"],["time"]],["bool"]]],[11,"ne","","",6,[[["self"],["time"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["time"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["self"],["time"]],["bool"]]],[11,"le","","",6,[[["self"],["time"]],["bool"]]],[11,"gt","","",6,[[["self"],["time"]],["bool"]]],[11,"ge","","",6,[[["self"],["time"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",4,[[["self"],["__h"]]]]],"p":[[3,"TrustAnchor"],[3,"TLSServerTrustAnchors"],[3,"TLSClientTrustAnchors"],[4,"Error"],[3,"DNSName"],[3,"DNSNameRef"],[3,"Time"],[3,"EndEntityCert"],[3,"InvalidDNSNameError"],[3,"SignatureAlgorithm"]]};
searchIndex["webpki_roots"] = {"doc":"This library is automatically generated from the Mozilla…","i":[[7,"TLS_SERVER_ROOTS","webpki_roots","",null,null]],"p":[]};
searchIndex["zeroize"] = {"doc":"Securely zero memory with a simple trait ([Zeroize]) built…","i":[[3,"Zeroizing","zeroize","`Zeroizing` is a a wrapper for any `Z: Zeroize` type which…",null,null],[8,"Zeroize","","Trait for securely erasing types from memory",null,null],[10,"zeroize","","Zero out this object from memory using Rust intrinsics…",0,[[["self"]]]],[8,"DefaultIsZeroes","","Marker trait for types whose `Default` is the desired…",null,null],[8,"TryZeroize","","Fallible trait for representing cases where zeroization…",null,null],[10,"try_zeroize","","Try to zero out this object from memory using Rust…",1,[[["self"]],["bool"]]],[11,"new","","Move value inside a `Zeroizing` wrapper which ensures it…",2,[[["z"]],["self"]]],[11,"zeroize","","",2,[[["self"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"zeroize","","",2,[[["self"]]]],[11,"deref","","",2,[[["self"]],["z"]]],[11,"deref_mut","","",2,[[["self"]],["z"]]],[11,"from","","",2,[[["z"]],["zeroizing"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"eq","","",2,[[["zeroizing"],["self"]],["bool"]]],[11,"ne","","",2,[[["zeroizing"],["self"]],["bool"]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",2,[[["self"]],["zeroizing"]]]],"p":[[8,"Zeroize"],[8,"TryZeroize"],[3,"Zeroizing"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);